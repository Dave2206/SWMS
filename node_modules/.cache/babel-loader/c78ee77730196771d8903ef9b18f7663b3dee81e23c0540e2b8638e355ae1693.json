{"ast":null,"code":"import axios from \"axios\";\nimport FileUpload from 'primevue/fileupload';\nexport default {\n  name: 'AnnouncementPage',\n  components: {\n    FileUpload\n  },\n  data() {\n    return {\n      subject: '',\n      dateTime: null,\n      // For date and time selection\n      route: '',\n      context: '',\n      photo: null // Will hold the uploaded photo file\n    };\n  },\n  methods: {\n    // This method will handle the form submission\n    async submitAnnouncement() {\n      const formData = new FormData();\n\n      // Log the photo object to see if it's being selected\n      console.log(\"Photo selected:\", this.photo);\n\n      // Append form data\n      formData.append('subject', this.subject);\n      formData.append('dateTime', this.dateTime);\n      formData.append('route', this.route);\n      formData.append('context', this.context);\n\n      // Check if a file was selected\n      if (this.photo && this.photo[0]) {\n        console.log(\"Appending file to formData:\", this.photo[0]);\n        formData.append('photo', this.photo[0]); // Use photo[0] for the file object\n      } else {\n        console.log(\"No photo selected.\");\n      }\n      try {\n        const response = await axios.post('http://127.0.0.1:8000/api/announcements', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data',\n            Authorization: `Bearer ${localStorage.getItem('auth_token')}`\n          }\n        });\n        console.log('Announcement created:', response.data);\n\n        // Reset the form after submission\n        this.subject = '';\n        this.dateTime = null;\n        this.route = '';\n        this.context = '';\n        this.photo = null;\n      } catch (error) {\n        console.error('Error creating announcement:', error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","FileUpload","name","components","data","subject","dateTime","route","context","photo","methods","submitAnnouncement","formData","FormData","console","log","append","response","post","headers","Authorization","localStorage","getItem","error"],"sources":["C:\\Users\\darle\\solid-waste-management-system\\src\\components\\AnnouncementPage.vue"],"sourcesContent":["<template>\r\n  <div class=\"space-y-8\">\r\n    <div class=\"max-w-md mx-auto p-6 bg-white rounded-lg shadow-md space-y-4\">\r\n      <h2 class=\"text-xl font-semibold text-gray-800\">Create New Announcement</h2>\r\n\r\n      <!-- Announcement Form -->\r\n      <form @submit.prevent=\"submitAnnouncement\" class=\"space-y-4\">\r\n        <!-- Subject (Dropdown) -->\r\n        <div>\r\n          <label for=\"subject\" class=\"block text-sm font-medium text-gray-700 mb-1\">Subject</label>\r\n          <select\r\n            id=\"subject\"\r\n            v-model=\"subject\"\r\n            class=\"w-full p-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-green-500 text-sm\"\r\n          >\r\n            <option value=\"\" disabled>Select a subject</option>\r\n            <option value=\"Delay of Garbage Pickup\">Delay of Garbage Pickup</option>\r\n            <option value=\"No Pickup Schedule\">No Pickup Schedule</option>\r\n            <option value=\"Schedule of Pickup\">Schedule of Pickup</option>\r\n            <option value=\"Program\">Program</option>\r\n          </select>\r\n        </div>\r\n\r\n        <!-- Date and Time -->\r\n        <div>\r\n          <label for=\"dateTime\" class=\"block text-sm font-medium text-gray-700 mb-1\">Date and Time</label>\r\n          <input\r\n            type=\"datetime-local\"\r\n            id=\"dateTime\"\r\n            v-model=\"dateTime\"\r\n            class=\"w-full p-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-green-500 text-sm\"\r\n          />\r\n        </div>\r\n\r\n        <!-- Route -->\r\n        <div>\r\n          <label for=\"route\" class=\"block text-sm font-medium text-gray-700 mb-1\">Route</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"route\"\r\n            v-model=\"route\"\r\n            placeholder=\"Enter the route\"\r\n            class=\"w-full p-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-green-500 text-sm\"\r\n          />\r\n        </div>\r\n\r\n        <!-- Context -->\r\n        <div>\r\n          <label for=\"context\" class=\"block text-sm font-medium text-gray-700 mb-1\">Context</label>\r\n          <textarea\r\n            id=\"context\"\r\n            v-model=\"context\"\r\n            rows=\"4\"\r\n            placeholder=\"Enter the context of the announcement\"\r\n            class=\"w-full p-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-green-500 text-sm\"\r\n          />\r\n        </div>\r\n\r\n        <!-- Photo Upload -->\r\n        <div>\r\n          <label for=\"photo\" class=\"block text-sm font-medium text-gray-700 mb-1\">Photo</label>\r\n          <FileUpload\r\n            ref=\"fileupload\"\r\n            mode=\"basic\"\r\n            id=\"photo\"\r\n            v-model=\"photo\"\r\n            chooseLabel=\"Choose a photo\"\r\n            accept=\"image/*\"\r\n            class=\"w-full\"\r\n          />\r\n        </div>\r\n\r\n        <!-- Submit Button -->\r\n        <div class=\"flex justify-center\">\r\n          <button\r\n            type=\"submit\"\r\n            class=\"w-full py-2 px-4 bg-green-600 text-white rounded-lg hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-green-500 text-sm\"\r\n          >\r\n            Submit\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nimport FileUpload from 'primevue/fileupload';\r\n\r\nexport default {\r\n  name: 'AnnouncementPage',\r\n  components: {\r\n    FileUpload,\r\n  },\r\n  data() {\r\n    return {\r\n      subject: '',\r\n      dateTime: null, // For date and time selection\r\n      route: '',\r\n      context: '',\r\n      photo: null, // Will hold the uploaded photo file\r\n    };\r\n  },\r\n  methods: {\r\n    // This method will handle the form submission\r\n    async submitAnnouncement() {\r\n  const formData = new FormData();\r\n\r\n  // Log the photo object to see if it's being selected\r\n  console.log(\"Photo selected:\", this.photo);\r\n\r\n  // Append form data\r\n  formData.append('subject', this.subject);\r\n  formData.append('dateTime', this.dateTime);\r\n  formData.append('route', this.route);\r\n  formData.append('context', this.context);\r\n\r\n  // Check if a file was selected\r\n  if (this.photo && this.photo[0]) {\r\n    console.log(\"Appending file to formData:\", this.photo[0]);\r\n    formData.append('photo', this.photo[0]);  // Use photo[0] for the file object\r\n  } else {\r\n    console.log(\"No photo selected.\");\r\n  }\r\n\r\n  try {\r\n    const response = await axios.post('http://127.0.0.1:8000/api/announcements', formData, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n        Authorization: `Bearer ${localStorage.getItem('auth_token')}`,\r\n      },\r\n    });\r\n\r\n    console.log('Announcement created:', response.data);\r\n\r\n    // Reset the form after submission\r\n    this.subject = '';\r\n    this.dateTime = null;\r\n    this.route = '';\r\n    this.context = '';\r\n    this.photo = null;\r\n  } catch (error) {\r\n    console.error('Error creating announcement:', error);\r\n  }\r\n}\r\n\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* Add any custom styles if needed */\r\n</style>\r\n"],"mappings":"AAuFA,OAAOA,KAAI,MAAO,OAAO;AACzB,OAAOC,UAAS,MAAO,qBAAqB;AAE5C,eAAe;EACbC,IAAI,EAAE,kBAAkB;EACxBC,UAAU,EAAE;IACVF;EACF,CAAC;EACDG,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,OAAO,EAAE,EAAE;MACXC,QAAQ,EAAE,IAAI;MAAE;MAChBC,KAAK,EAAE,EAAE;MACTC,OAAO,EAAE,EAAE;MACXC,KAAK,EAAE,IAAI,CAAE;IACf,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP;IACA,MAAMC,kBAAkBA,CAAA,EAAG;MAC7B,MAAMC,QAAO,GAAI,IAAIC,QAAQ,CAAC,CAAC;;MAE/B;MACAC,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAE,IAAI,CAACN,KAAK,CAAC;;MAE1C;MACAG,QAAQ,CAACI,MAAM,CAAC,SAAS,EAAE,IAAI,CAACX,OAAO,CAAC;MACxCO,QAAQ,CAACI,MAAM,CAAC,UAAU,EAAE,IAAI,CAACV,QAAQ,CAAC;MAC1CM,QAAQ,CAACI,MAAM,CAAC,OAAO,EAAE,IAAI,CAACT,KAAK,CAAC;MACpCK,QAAQ,CAACI,MAAM,CAAC,SAAS,EAAE,IAAI,CAACR,OAAO,CAAC;;MAExC;MACA,IAAI,IAAI,CAACC,KAAI,IAAK,IAAI,CAACA,KAAK,CAAC,CAAC,CAAC,EAAE;QAC/BK,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAE,IAAI,CAACN,KAAK,CAAC,CAAC,CAAC,CAAC;QACzDG,QAAQ,CAACI,MAAM,CAAC,OAAO,EAAE,IAAI,CAACP,KAAK,CAAC,CAAC,CAAC,CAAC,EAAG;MAC5C,OAAO;QACLK,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;MACnC;MAEA,IAAI;QACF,MAAME,QAAO,GAAI,MAAMjB,KAAK,CAACkB,IAAI,CAAC,yCAAyC,EAAEN,QAAQ,EAAE;UACrFO,OAAO,EAAE;YACP,cAAc,EAAE,qBAAqB;YACrCC,aAAa,EAAE,UAAUC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;UAC7D;QACF,CAAC,CAAC;QAEFR,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEE,QAAQ,CAACb,IAAI,CAAC;;QAEnD;QACA,IAAI,CAACC,OAAM,GAAI,EAAE;QACjB,IAAI,CAACC,QAAO,GAAI,IAAI;QACpB,IAAI,CAACC,KAAI,GAAI,EAAE;QACf,IAAI,CAACC,OAAM,GAAI,EAAE;QACjB,IAAI,CAACC,KAAI,GAAI,IAAI;MACnB,EAAE,OAAOc,KAAK,EAAE;QACdT,OAAO,CAACS,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACtD;IACF;EAEE;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}