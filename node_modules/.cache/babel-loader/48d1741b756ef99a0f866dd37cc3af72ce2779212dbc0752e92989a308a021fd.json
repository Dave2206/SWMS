{"ast":null,"code":"import CheckIcon from '@primevue/icons/check';\nimport ExclamationTriangleIcon from '@primevue/icons/exclamationtriangle';\nimport InfoCircleIcon from '@primevue/icons/infocircle';\nimport TimesCircleIcon from '@primevue/icons/timescircle';\nimport BaseComponent from '@primevue/core/basecomponent';\nimport InlineMessageStyle from 'primevue/inlinemessage/style';\nimport { openBlock, createElementBlock, mergeProps, renderSlot, createBlock, resolveDynamicComponent, createCommentVNode } from 'vue';\nvar script$1 = {\n  name: 'BaseInlineMessage',\n  \"extends\": BaseComponent,\n  props: {\n    severity: {\n      type: String,\n      \"default\": 'error'\n    },\n    icon: {\n      type: String,\n      \"default\": undefined\n    }\n  },\n  style: InlineMessageStyle,\n  provide: function provide() {\n    return {\n      $pcInlineMessage: this,\n      $parentInstance: this\n    };\n  }\n};\nvar script = {\n  name: 'InlineMessage',\n  \"extends\": script$1,\n  inheritAttrs: false,\n  timeout: null,\n  data: function data() {\n    return {\n      visible: true\n    };\n  },\n  mounted: function mounted() {\n    var _this = this;\n    if (!this.sticky) {\n      setTimeout(function () {\n        _this.visible = false;\n      }, this.life);\n    }\n  },\n  computed: {\n    iconComponent: function iconComponent() {\n      return {\n        info: InfoCircleIcon,\n        success: CheckIcon,\n        warn: ExclamationTriangleIcon,\n        error: TimesCircleIcon\n      }[this.severity];\n    }\n  }\n};\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  return openBlock(), createElementBlock(\"div\", mergeProps({\n    role: \"alert\",\n    \"aria-live\": \"assertive\",\n    \"aria-atomic\": \"true\",\n    \"class\": _ctx.cx('root')\n  }, _ctx.ptmi('root')), [renderSlot(_ctx.$slots, \"icon\", {}, function () {\n    return [(openBlock(), createBlock(resolveDynamicComponent(_ctx.icon ? 'span' : $options.iconComponent), mergeProps({\n      \"class\": _ctx.cx('icon')\n    }, _ctx.ptm('icon')), null, 16, [\"class\"]))];\n  }), _ctx.$slots[\"default\"] ? (openBlock(), createElementBlock(\"div\", mergeProps({\n    key: 0,\n    \"class\": _ctx.cx('text')\n  }, _ctx.ptm('text')), [renderSlot(_ctx.$slots, \"default\")], 16)) : createCommentVNode(\"\", true)], 16);\n}\nscript.render = render;\nexport { script as default };","map":{"version":3,"names":["script$1","name","BaseComponent","props","severity","type","String","icon","undefined","style","InlineMessageStyle","provide","$pcInlineMessage","$parentInstance","script","inheritAttrs","timeout","data","visible","mounted","_this","sticky","setTimeout","life","computed","iconComponent","info","InfoCircleIcon","success","CheckIcon","warn","ExclamationTriangleIcon","error","TimesCircleIcon","openBlock","createElementBlock","mergeProps","role","_ctx","cx","ptmi","renderSlot","$slots","createBlock","resolveDynamicComponent","$options","ptm","createCommentVNode"],"sources":["../../src/inlinemessage/BaseInlineMessage.vue","../../src/inlinemessage/InlineMessage.vue","../../src/inlinemessage/InlineMessage.vue?vue&type=template&id=0df2fa28&lang.js"],"sourcesContent":["<script>\nimport BaseComponent from '@primevue/core/basecomponent';\nimport InlineMessageStyle from 'primevue/inlinemessage/style';\n\nexport default {\n    name: 'BaseInlineMessage',\n    extends: BaseComponent,\n    props: {\n        severity: {\n            type: String,\n            default: 'error'\n        },\n        icon: {\n            type: String,\n            default: undefined\n        }\n    },\n    style: InlineMessageStyle,\n    provide() {\n        return {\n            $pcInlineMessage: this,\n            $parentInstance: this\n        };\n    }\n};\n</script>\n","<template>\n    <div role=\"alert\" aria-live=\"assertive\" aria-atomic=\"true\" :class=\"cx('root')\" v-bind=\"ptmi('root')\">\n        <slot name=\"icon\">\n            <component :is=\"icon ? 'span' : iconComponent\" :class=\"cx('icon')\" v-bind=\"ptm('icon')\"></component>\n        </slot>\n        <div v-if=\"$slots.default\" :class=\"cx('text')\" v-bind=\"ptm('text')\">\n            <slot></slot>\n        </div>\n    </div>\n</template>\n\n<script>\nimport CheckIcon from '@primevue/icons/check';\nimport ExclamationTriangleIcon from '@primevue/icons/exclamationtriangle';\nimport InfoCircleIcon from '@primevue/icons/infocircle';\nimport TimesCircleIcon from '@primevue/icons/timescircle';\nimport BaseInlineMessage from './BaseInlineMessage.vue';\n\nexport default {\n    name: 'InlineMessage',\n    extends: BaseInlineMessage,\n    inheritAttrs: false,\n    timeout: null,\n    data() {\n        return {\n            visible: true\n        };\n    },\n    mounted() {\n        if (!this.sticky) {\n            setTimeout(() => {\n                this.visible = false;\n            }, this.life);\n        }\n    },\n    computed: {\n        iconComponent() {\n            return {\n                info: InfoCircleIcon,\n                success: CheckIcon,\n                warn: ExclamationTriangleIcon,\n                error: TimesCircleIcon\n            }[this.severity];\n        }\n    }\n};\n</script>\n","<template>\n    <div role=\"alert\" aria-live=\"assertive\" aria-atomic=\"true\" :class=\"cx('root')\" v-bind=\"ptmi('root')\">\n        <slot name=\"icon\">\n            <component :is=\"icon ? 'span' : iconComponent\" :class=\"cx('icon')\" v-bind=\"ptm('icon')\"></component>\n        </slot>\n        <div v-if=\"$slots.default\" :class=\"cx('text')\" v-bind=\"ptm('text')\">\n            <slot></slot>\n        </div>\n    </div>\n</template>\n\n<script>\nimport CheckIcon from '@primevue/icons/check';\nimport ExclamationTriangleIcon from '@primevue/icons/exclamationtriangle';\nimport InfoCircleIcon from '@primevue/icons/infocircle';\nimport TimesCircleIcon from '@primevue/icons/timescircle';\nimport BaseInlineMessage from './BaseInlineMessage.vue';\n\nexport default {\n    name: 'InlineMessage',\n    extends: BaseInlineMessage,\n    inheritAttrs: false,\n    timeout: null,\n    data() {\n        return {\n            visible: true\n        };\n    },\n    mounted() {\n        if (!this.sticky) {\n            setTimeout(() => {\n                this.visible = false;\n            }, this.life);\n        }\n    },\n    computed: {\n        iconComponent() {\n            return {\n                info: InfoCircleIcon,\n                success: CheckIcon,\n                warn: ExclamationTriangleIcon,\n                error: TimesCircleIcon\n            }[this.severity];\n        }\n    }\n};\n</script>\n"],"mappings":";;;;;;;AAIA,IAAAA,QAAA,GAAe;EACXC,IAAI,EAAE,mBAAmB;EACzB,WAASC,aAAa;EACtBC,KAAK,EAAE;IACHC,QAAQ,EAAE;MACNC,IAAI,EAAEC,MAAM;MACZ,SAAS;KACZ;IACDC,IAAI,EAAE;MACFF,IAAI,EAAEC,MAAM;MACZ,SAAS,EAAAE;IACb;GACH;EACDC,KAAK,EAAEC,kBAAkB;EACzBC,OAAO,WAAPA,OAAOA,CAAA,EAAG;IACN,OAAO;MACHC,gBAAgB,EAAE,IAAI;MACtBC,eAAe,EAAE;KACpB;EACL;AACJ,CAAC;ACND,IAAAC,MAAA,GAAe;EACXb,IAAI,EAAE,eAAe;EACrB,WAASD,QAAiB;EAC1Be,YAAY,EAAE,KAAK;EACnBC,OAAO,EAAE,IAAI;EACbC,IAAI,WAAJA,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,OAAO,EAAE;KACZ;GACJ;EACDC,OAAO,WAAPA,OAAOA,CAAA,EAAG;IAAA,IAAAC,KAAA;IACN,IAAI,CAAC,IAAI,CAACC,MAAM,EAAE;MACdC,UAAU,CAAC,YAAM;QACbF,KAAI,CAACF,OAAA,GAAU,KAAK;MACxB,CAAC,EAAE,IAAI,CAACK,IAAI,CAAC;IACjB;GACH;EACDC,QAAQ,EAAE;IACNC,aAAa,WAAbA,aAAaA,CAAA,EAAG;MACZ,OAAO;QACHC,IAAI,EAAEC,cAAc;QACpBC,OAAO,EAAEC,SAAS;QAClBC,IAAI,EAAEC,uBAAuB;QAC7BC,KAAK,EAAEC;MACX,CAAC,CAAC,IAAI,CAAC7B,QAAQ,CAAC;IACpB;EACJ;AACJ,CAAC;;EC5CG,OAAA8B,SAAA,IAAAC,kBAAA,CAOK,OAPLC,UAOK;IAPAC,IAAI,EAAC,OAAQ;IAAA,WAAS,EAAC,WAAY;IAAA,aAAW,EAAC,MAAO;IAAC,SAAOC,IAAE,CAAAC,EAAA;KAAkBD,IAAI,CAAAE,IAAA,YACvFC,UAAA,CAEMH,IAAA,CAAAI,MAAA,cAFN;IAAA,OAEM,EADFR,SAAA,IAAAS,WAAA,CAAmGC,uBAAnF,CAAAN,IAAA,CAAA/B,IAAG,GAAa,SAAAsC,QAAA,CAAApB,aAAa,GAA7CW,UAAmG;MAAnD,SAAOE,IAAE,CAAAC,EAAA;OAAkBD,IAAG,CAAAQ,GAAA;MAEvER,IAAA,CAAAI,MAAM,WAAQ,IAAzBR,SAAA,IAAAC,kBAAA,CAEK,OAFLC,UAEK;;IAFuB,SAAOE,IAAE,CAAAC,EAAA;KAAkBD,IAAG,CAAAQ,GAAA,YACtDL,UAAY,CAAAH,IAAA,CAAAI,MAAA,sBAAAK,kBAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}