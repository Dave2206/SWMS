{"ast":null,"code":"import axios from \"axios\";\nimport FileUpload from \"primevue/fileupload\";\nexport default {\n  name: \"AnnouncementPage\",\n  components: {\n    FileUpload\n  },\n  data() {\n    return {\n      subject: \"\",\n      dateTime: null,\n      route: \"\",\n      context: \"\",\n      photo: null,\n      isLoggedIn: false,\n      // Tracks whether the user is logged in\n      userName: \"\" // Optionally store the user's name\n    };\n  },\n  mounted() {\n    // Check if the user is logged in by checking for a token\n    const token = localStorage.getItem(\"auth_token\");\n    if (token) {\n      console.log(\"test token\");\n      this.isLoggedIn = true;\n      // Optionally, fetch the user's name or details\n      this.fetchUserDetails(token);\n    }\n  },\n  methods: {\n    async fetchUserDetails(token) {\n      try {\n        const response = await axios.get(\"http://127.0.0.1:8000/api/user\", {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        this.userName = response.data.name; // Assume the API returns the user's name\n      } catch (error) {\n        console.error(\"Error fetching user details:\", error);\n      }\n    },\n    async submitAnnouncement() {\n      const formData = new FormData();\n      formData.append(\"subject\", this.subject);\n      formData.append(\"dateTime\", this.dateTime);\n      formData.append(\"route\", this.route);\n      formData.append(\"context\", this.context);\n      if (this.photo && this.photo[0]) {\n        formData.append(\"photo\", this.photo[0]);\n      }\n      try {\n        const response = await axios.post(\"http://127.0.0.1:8000/api/announcements\", formData, {\n          headers: {\n            \"Content-Type\": \"multipart/form-data\",\n            Authorization: `Bearer ${localStorage.getItem(\"auth_token\")}`\n          }\n        });\n        this.showSuccessToast(response.data.message);\n        this.subject = \"\";\n        this.dateTime = null;\n        this.route = \"\";\n        this.context = \"\";\n        this.photo = null;\n      } catch (error) {\n        console.error(\"Error creating announcement:\", error);\n        this.showErrorToast(error);\n      }\n    },\n    showSuccessToast(message) {\n      this.$refs.toast.add({\n        severity: 'success',\n        summary: 'Success',\n        detail: message,\n        life: 3000\n      });\n    },\n    showErrorToast(message) {\n      this.$refs.toast.add({\n        severity: 'error',\n        summary: 'Error',\n        detail: message,\n        life: 3000\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","FileUpload","name","components","data","subject","dateTime","route","context","photo","isLoggedIn","userName","mounted","token","localStorage","getItem","console","log","fetchUserDetails","methods","response","get","headers","Authorization","error","submitAnnouncement","formData","FormData","append","post","showSuccessToast","message","showErrorToast","$refs","toast","add","severity","summary","detail","life"],"sources":["C:\\Users\\darle\\solid-waste-management-system\\src\\components\\AnnouncementPage.vue"],"sourcesContent":["<template>\r\n  <div class=\"space-y-8\">\r\n\r\n    <!-- Create Announcement Form -->\r\n    <div v-if=\"isLoggedIn\" class=\"max-w-md mx-auto p-6 bg-white rounded-lg shadow-md space-y-4\">\r\n      <h2 class=\"text-xl font-semibold text-gray-800\">Create New Announcement</h2>\r\n\r\n      <!-- Announcement Form -->\r\n      <form @submit.prevent=\"submitAnnouncement\" class=\"space-y-4\">\r\n        <!-- Subject (Dropdown) -->\r\n        <div>\r\n          <label for=\"subject\" class=\"block text-sm font-medium text-gray-700 mb-1\">Subject</label>\r\n          <select\r\n            id=\"subject\"\r\n            v-model=\"subject\"\r\n            class=\"w-full p-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-green-500 text-sm\"\r\n          >\r\n            <option value=\"\" disabled>Select a subject</option>\r\n            <option value=\"Delay of Garbage Pickup\">Delay of Garbage Pickup</option>\r\n            <option value=\"No Pickup Schedule\">No Pickup Schedule</option>\r\n            <option value=\"Schedule of Pickup\">Schedule of Pickup</option>\r\n            <option value=\"Program\">Program</option>\r\n          </select>\r\n        </div>\r\n\r\n        <!-- Date and Time -->\r\n        <div>\r\n          <label for=\"dateTime\" class=\"block text-sm font-medium text-gray-700 mb-1\">Date and Time</label>\r\n          <input\r\n            type=\"datetime-local\"\r\n            id=\"dateTime\"\r\n            v-model=\"dateTime\"\r\n            class=\"w-full p-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-green-500 text-sm\"\r\n          />\r\n        </div>\r\n\r\n        <!-- Route -->\r\n        <div>\r\n          <label for=\"route\" class=\"block text-sm font-medium text-gray-700 mb-1\">Route</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"route\"\r\n            v-model=\"route\"\r\n            placeholder=\"Enter the route\"\r\n            class=\"w-full p-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-green-500 text-sm\"\r\n          />\r\n        </div>\r\n\r\n        <!-- Context -->\r\n        <div>\r\n          <label for=\"context\" class=\"block text-sm font-medium text-gray-700 mb-1\">Context</label>\r\n          <textarea\r\n            id=\"context\"\r\n            v-model=\"context\"\r\n            rows=\"4\"\r\n            placeholder=\"Enter the context of the announcement\"\r\n            class=\"w-full p-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-green-500 text-sm\"\r\n          />\r\n        </div>\r\n\r\n        <!-- Photo Upload -->\r\n        <div>\r\n          <label for=\"photo\" class=\"block text-sm font-medium text-gray-700 mb-1\">Photo</label>\r\n          <FileUpload\r\n            ref=\"fileupload\"\r\n            mode=\"basic\"\r\n            id=\"photo\"\r\n            v-model=\"photo\"\r\n            chooseLabel=\"Choose a photo\"\r\n            accept=\"image/*\"\r\n            class=\"w-full\"\r\n          />\r\n        </div>\r\n\r\n        <!-- Submit Button -->\r\n        <div class=\"flex justify-center\">\r\n          <button\r\n            type=\"submit\"\r\n            class=\"w-full py-2 px-4 bg-green-600 text-white rounded-lg hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-green-500 text-sm\"\r\n          >\r\n            Submit\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n\r\n    <!-- Not Logged In Message -->\r\n    <div v-else class=\"max-w-md mx-auto text-center text-gray-700 text-lg\">\r\n      Please <a href=\"/login\" class=\"text-green-600 hover:underline\">log in</a> to create an announcement.\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nimport FileUpload from \"primevue/fileupload\";\r\n\r\nexport default {\r\n  name: \"AnnouncementPage\",\r\n  components: {\r\n    FileUpload,\r\n  },\r\n  data() {\r\n    return {\r\n      subject: \"\",\r\n      dateTime: null,\r\n      route: \"\",\r\n      context: \"\",\r\n      photo: null,\r\n      isLoggedIn: false, // Tracks whether the user is logged in\r\n      userName: \"\", // Optionally store the user's name\r\n    };\r\n  },\r\n  mounted() {\r\n    // Check if the user is logged in by checking for a token\r\n    const token = localStorage.getItem(\"auth_token\");\r\n    if (token) {\r\n      console.log(\"test token\");\r\n      this.isLoggedIn = true;\r\n      // Optionally, fetch the user's name or details\r\n      this.fetchUserDetails(token);\r\n    }\r\n  },\r\n  methods: {\r\n    async fetchUserDetails(token) {\r\n      try {\r\n        const response = await axios.get(\"http://127.0.0.1:8000/api/user\", {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        });\r\n        this.userName = response.data.name; // Assume the API returns the user's name\r\n      } catch (error) {\r\n        console.error(\"Error fetching user details:\", error);\r\n      }\r\n    },\r\n    async submitAnnouncement() {\r\n      const formData = new FormData();\r\n      formData.append(\"subject\", this.subject);\r\n      formData.append(\"dateTime\", this.dateTime);\r\n      formData.append(\"route\", this.route);\r\n      formData.append(\"context\", this.context);\r\n      if (this.photo && this.photo[0]) {\r\n        formData.append(\"photo\", this.photo[0]);\r\n      }\r\n\r\n      try {\r\n        const response = await axios.post(\r\n          \"http://127.0.0.1:8000/api/announcements\",\r\n          formData,\r\n          {\r\n            headers: {\r\n              \"Content-Type\": \"multipart/form-data\",\r\n              Authorization: `Bearer ${localStorage.getItem(\"auth_token\")}`,\r\n            },\r\n          }\r\n        );\r\n       this.showSuccessToast(response.data.message);\r\n        this.subject = \"\";\r\n        this.dateTime = null;\r\n        this.route = \"\";\r\n        this.context = \"\";\r\n        this.photo = null;\r\n      } catch (error) {\r\n        console.error(\"Error creating announcement:\", error);\r\n        this.showErrorToast(error);\r\n      }\r\n    },\r\n    showSuccessToast(message) {\r\n      this.$refs.toast.add({ severity: 'success', summary: 'Success', detail: message, life: 3000 });\r\n    },\r\n    showErrorToast(message) {\r\n      this.$refs.toast.add({ severity: 'error', summary: 'Error', detail: message, life: 3000 });\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* Add any custom styles if needed */\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}