{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.find.js\";\nimport \"core-js/modules/esnext.iterator.for-each.js\";\nimport \"core-js/modules/esnext.iterator.some.js\";\nimport { nestedPosition, focus, findSingle, addStyle, absolutePosition, getOuterWidth, isTouchDevice } from '@primeuix/utils/dom';\nimport { resolve, isNotEmpty, isPrintableCharacter, isEmpty, findLastIndex } from '@primeuix/utils/object';\nimport { ZIndex } from '@primeuix/utils/zindex';\nimport { UniqueComponentId, ConnectedOverlayScrollHandler } from '@primevue/core/utils';\nimport OverlayEventBus from 'primevue/overlayeventbus';\nimport Portal from 'primevue/portal';\nimport BaseComponent from '@primevue/core/basecomponent';\nimport TieredMenuStyle from 'primevue/tieredmenu/style';\nimport AngleRightIcon from '@primevue/icons/angleright';\nimport Ripple from 'primevue/ripple';\nimport { mergeProps, resolveComponent, resolveDirective, openBlock, createBlock, Transition, withCtx, createElementBlock, Fragment, renderList, createElementVNode, withDirectives, resolveDynamicComponent, normalizeClass, createCommentVNode, toDisplayString, createVNode, renderSlot } from 'vue';\nvar script$2 = {\n  name: 'BaseTieredMenu',\n  \"extends\": BaseComponent,\n  props: {\n    popup: {\n      type: Boolean,\n      \"default\": false\n    },\n    model: {\n      type: Array,\n      \"default\": null\n    },\n    appendTo: {\n      type: [String, Object],\n      \"default\": 'body'\n    },\n    breakpoint: {\n      type: String,\n      \"default\": '960px'\n    },\n    autoZIndex: {\n      type: Boolean,\n      \"default\": true\n    },\n    baseZIndex: {\n      type: Number,\n      \"default\": 0\n    },\n    disabled: {\n      type: Boolean,\n      \"default\": false\n    },\n    tabindex: {\n      type: Number,\n      \"default\": 0\n    },\n    ariaLabelledby: {\n      type: String,\n      \"default\": null\n    },\n    ariaLabel: {\n      type: String,\n      \"default\": null\n    }\n  },\n  style: TieredMenuStyle,\n  provide: function provide() {\n    return {\n      $pcTieredMenu: this,\n      $parentInstance: this\n    };\n  }\n};\nvar script$1 = {\n  name: 'TieredMenuSub',\n  hostName: 'TieredMenu',\n  \"extends\": BaseComponent,\n  emits: ['item-click', 'item-mouseenter', 'item-mousemove'],\n  container: null,\n  props: {\n    menuId: {\n      type: String,\n      \"default\": null\n    },\n    focusedItemId: {\n      type: String,\n      \"default\": null\n    },\n    items: {\n      type: Array,\n      \"default\": null\n    },\n    visible: {\n      type: Boolean,\n      \"default\": false\n    },\n    level: {\n      type: Number,\n      \"default\": 0\n    },\n    templates: {\n      type: Object,\n      \"default\": null\n    },\n    activeItemPath: {\n      type: Object,\n      \"default\": null\n    },\n    tabindex: {\n      type: Number,\n      \"default\": 0\n    }\n  },\n  methods: {\n    getItemId: function getItemId(processedItem) {\n      return \"\".concat(this.menuId, \"_\").concat(processedItem.key);\n    },\n    getItemKey: function getItemKey(processedItem) {\n      return this.getItemId(processedItem);\n    },\n    getItemProp: function getItemProp(processedItem, name, params) {\n      return processedItem && processedItem.item ? resolve(processedItem.item[name], params) : undefined;\n    },\n    getItemLabel: function getItemLabel(processedItem) {\n      return this.getItemProp(processedItem, 'label');\n    },\n    getItemLabelId: function getItemLabelId(processedItem) {\n      return \"\".concat(this.menuId, \"_\").concat(processedItem.key, \"_label\");\n    },\n    getPTOptions: function getPTOptions(processedItem, index, key) {\n      return this.ptm(key, {\n        context: {\n          item: processedItem.item,\n          index: index,\n          active: this.isItemActive(processedItem),\n          focused: this.isItemFocused(processedItem),\n          disabled: this.isItemDisabled(processedItem)\n        }\n      });\n    },\n    isItemActive: function isItemActive(processedItem) {\n      return this.activeItemPath.some(function (path) {\n        return path.key === processedItem.key;\n      });\n    },\n    isItemVisible: function isItemVisible(processedItem) {\n      return this.getItemProp(processedItem, 'visible') !== false;\n    },\n    isItemDisabled: function isItemDisabled(processedItem) {\n      return this.getItemProp(processedItem, 'disabled');\n    },\n    isItemFocused: function isItemFocused(processedItem) {\n      return this.focusedItemId === this.getItemId(processedItem);\n    },\n    isItemGroup: function isItemGroup(processedItem) {\n      return isNotEmpty(processedItem.items);\n    },\n    onEnter: function onEnter() {\n      nestedPosition(this.container, this.level);\n    },\n    onItemClick: function onItemClick(event, processedItem) {\n      this.getItemProp(processedItem, 'command', {\n        originalEvent: event,\n        item: processedItem.item\n      });\n      this.$emit('item-click', {\n        originalEvent: event,\n        processedItem: processedItem,\n        isFocus: true\n      });\n    },\n    onItemMouseEnter: function onItemMouseEnter(event, processedItem) {\n      this.$emit('item-mouseenter', {\n        originalEvent: event,\n        processedItem: processedItem\n      });\n    },\n    onItemMouseMove: function onItemMouseMove(event, processedItem) {\n      this.$emit('item-mousemove', {\n        originalEvent: event,\n        processedItem: processedItem\n      });\n    },\n    getAriaSetSize: function getAriaSetSize() {\n      var _this = this;\n      return this.items.filter(function (processedItem) {\n        return _this.isItemVisible(processedItem) && !_this.getItemProp(processedItem, 'separator');\n      }).length;\n    },\n    getAriaPosInset: function getAriaPosInset(index) {\n      var _this2 = this;\n      return index - this.items.slice(0, index).filter(function (processedItem) {\n        return _this2.isItemVisible(processedItem) && _this2.getItemProp(processedItem, 'separator');\n      }).length + 1;\n    },\n    getMenuItemProps: function getMenuItemProps(processedItem, index) {\n      return {\n        action: mergeProps({\n          \"class\": this.cx('itemLink'),\n          tabindex: -1\n        }, this.getPTOptions(processedItem, index, 'itemLink')),\n        icon: mergeProps({\n          \"class\": [this.cx('itemIcon'), this.getItemProp(processedItem, 'icon')]\n        }, this.getPTOptions(processedItem, index, 'itemIcon')),\n        label: mergeProps({\n          \"class\": this.cx('itemLabel')\n        }, this.getPTOptions(processedItem, index, 'itemLabel')),\n        submenuicon: mergeProps({\n          \"class\": this.cx('submenuIcon')\n        }, this.getPTOptions(processedItem, index, 'submenuIcon'))\n      };\n    },\n    containerRef: function containerRef(el) {\n      this.container = el;\n    }\n  },\n  components: {\n    AngleRightIcon: AngleRightIcon\n  },\n  directives: {\n    ripple: Ripple\n  }\n};\nvar _hoisted_1$1 = [\"tabindex\"];\nvar _hoisted_2 = [\"id\", \"aria-label\", \"aria-disabled\", \"aria-expanded\", \"aria-haspopup\", \"aria-level\", \"aria-setsize\", \"aria-posinset\", \"data-p-active\", \"data-p-focused\", \"data-p-disabled\"];\nvar _hoisted_3 = [\"onClick\", \"onMouseenter\", \"onMousemove\"];\nvar _hoisted_4 = [\"href\", \"target\"];\nvar _hoisted_5 = [\"id\"];\nvar _hoisted_6 = [\"id\"];\nfunction render$1(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_AngleRightIcon = resolveComponent(\"AngleRightIcon\");\n  var _component_TieredMenuSub = resolveComponent(\"TieredMenuSub\", true);\n  var _directive_ripple = resolveDirective(\"ripple\");\n  return openBlock(), createBlock(Transition, mergeProps({\n    name: \"p-tieredmenu\",\n    onEnter: $options.onEnter\n  }, _ctx.ptm('menu.transition')), {\n    \"default\": withCtx(function () {\n      return [($props.level === 0 ? true : $props.visible) ? (openBlock(), createElementBlock(\"ul\", {\n        key: 0,\n        ref: $options.containerRef,\n        tabindex: $props.tabindex\n      }, [(openBlock(true), createElementBlock(Fragment, null, renderList($props.items, function (processedItem, index) {\n        return openBlock(), createElementBlock(Fragment, {\n          key: $options.getItemKey(processedItem)\n        }, [$options.isItemVisible(processedItem) && !$options.getItemProp(processedItem, 'separator') ? (openBlock(), createElementBlock(\"li\", mergeProps({\n          key: 0,\n          id: $options.getItemId(processedItem),\n          style: $options.getItemProp(processedItem, 'style'),\n          \"class\": [_ctx.cx('item', {\n            processedItem: processedItem\n          }), $options.getItemProp(processedItem, 'class')],\n          role: \"menuitem\",\n          \"aria-label\": $options.getItemLabel(processedItem),\n          \"aria-disabled\": $options.isItemDisabled(processedItem) || undefined,\n          \"aria-expanded\": $options.isItemGroup(processedItem) ? $options.isItemActive(processedItem) : undefined,\n          \"aria-haspopup\": $options.isItemGroup(processedItem) && !$options.getItemProp(processedItem, 'to') ? 'menu' : undefined,\n          \"aria-level\": $props.level + 1,\n          \"aria-setsize\": $options.getAriaSetSize(),\n          \"aria-posinset\": $options.getAriaPosInset(index),\n          ref_for: true\n        }, $options.getPTOptions(processedItem, index, 'item'), {\n          \"data-p-active\": $options.isItemActive(processedItem),\n          \"data-p-focused\": $options.isItemFocused(processedItem),\n          \"data-p-disabled\": $options.isItemDisabled(processedItem)\n        }), [createElementVNode(\"div\", mergeProps({\n          \"class\": _ctx.cx('itemContent'),\n          onClick: function onClick($event) {\n            return $options.onItemClick($event, processedItem);\n          },\n          onMouseenter: function onMouseenter($event) {\n            return $options.onItemMouseEnter($event, processedItem);\n          },\n          onMousemove: function onMousemove($event) {\n            return $options.onItemMouseMove($event, processedItem);\n          },\n          ref_for: true\n        }, $options.getPTOptions(processedItem, index, 'itemContent')), [!$props.templates.item ? withDirectives((openBlock(), createElementBlock(\"a\", mergeProps({\n          key: 0,\n          href: $options.getItemProp(processedItem, 'url'),\n          \"class\": _ctx.cx('itemLink'),\n          target: $options.getItemProp(processedItem, 'target'),\n          tabindex: \"-1\",\n          ref_for: true\n        }, $options.getPTOptions(processedItem, index, 'itemLink')), [$props.templates.itemicon ? (openBlock(), createBlock(resolveDynamicComponent($props.templates.itemicon), {\n          key: 0,\n          item: processedItem.item,\n          \"class\": normalizeClass(_ctx.cx('itemIcon'))\n        }, null, 8, [\"item\", \"class\"])) : $options.getItemProp(processedItem, 'icon') ? (openBlock(), createElementBlock(\"span\", mergeProps({\n          key: 1,\n          \"class\": [_ctx.cx('itemIcon'), $options.getItemProp(processedItem, 'icon')],\n          ref_for: true\n        }, $options.getPTOptions(processedItem, index, 'itemIcon')), null, 16)) : createCommentVNode(\"\", true), createElementVNode(\"span\", mergeProps({\n          id: $options.getItemLabelId(processedItem),\n          \"class\": _ctx.cx('itemLabel'),\n          ref_for: true\n        }, $options.getPTOptions(processedItem, index, 'itemLabel')), toDisplayString($options.getItemLabel(processedItem)), 17, _hoisted_5), $options.getItemProp(processedItem, 'items') ? (openBlock(), createElementBlock(Fragment, {\n          key: 2\n        }, [$props.templates.submenuicon ? (openBlock(), createBlock(resolveDynamicComponent($props.templates.submenuicon), mergeProps({\n          key: 0,\n          \"class\": _ctx.cx('submenuIcon'),\n          active: $options.isItemActive(processedItem),\n          ref_for: true\n        }, $options.getPTOptions(processedItem, index, 'submenuIcon')), null, 16, [\"class\", \"active\"])) : (openBlock(), createBlock(_component_AngleRightIcon, mergeProps({\n          key: 1,\n          \"class\": _ctx.cx('submenuIcon'),\n          ref_for: true\n        }, $options.getPTOptions(processedItem, index, 'submenuIcon')), null, 16, [\"class\"]))], 64)) : createCommentVNode(\"\", true)], 16, _hoisted_4)), [[_directive_ripple]]) : (openBlock(), createBlock(resolveDynamicComponent($props.templates.item), {\n          key: 1,\n          item: processedItem.item,\n          hasSubmenu: $options.getItemProp(processedItem, 'items'),\n          label: $options.getItemLabel(processedItem),\n          props: $options.getMenuItemProps(processedItem, index)\n        }, null, 8, [\"item\", \"hasSubmenu\", \"label\", \"props\"]))], 16, _hoisted_3), $options.isItemVisible(processedItem) && $options.isItemGroup(processedItem) ? (openBlock(), createBlock(_component_TieredMenuSub, mergeProps({\n          key: 0,\n          id: $options.getItemId(processedItem) + '_list',\n          \"class\": _ctx.cx('submenu'),\n          style: _ctx.sx('submenu', true, {\n            processedItem: processedItem\n          }),\n          \"aria-labelledby\": $options.getItemLabelId(processedItem),\n          role: \"menu\",\n          menuId: $props.menuId,\n          focusedItemId: $props.focusedItemId,\n          items: processedItem.items,\n          templates: $props.templates,\n          activeItemPath: $props.activeItemPath,\n          level: $props.level + 1,\n          visible: $options.isItemActive(processedItem) && $options.isItemGroup(processedItem),\n          pt: _ctx.pt,\n          unstyled: _ctx.unstyled,\n          onItemClick: _cache[0] || (_cache[0] = function ($event) {\n            return _ctx.$emit('item-click', $event);\n          }),\n          onItemMouseenter: _cache[1] || (_cache[1] = function ($event) {\n            return _ctx.$emit('item-mouseenter', $event);\n          }),\n          onItemMousemove: _cache[2] || (_cache[2] = function ($event) {\n            return _ctx.$emit('item-mousemove', $event);\n          }),\n          ref_for: true\n        }, _ctx.ptm('submenu')), null, 16, [\"id\", \"class\", \"style\", \"aria-labelledby\", \"menuId\", \"focusedItemId\", \"items\", \"templates\", \"activeItemPath\", \"level\", \"visible\", \"pt\", \"unstyled\"])) : createCommentVNode(\"\", true)], 16, _hoisted_2)) : createCommentVNode(\"\", true), $options.isItemVisible(processedItem) && $options.getItemProp(processedItem, 'separator') ? (openBlock(), createElementBlock(\"li\", mergeProps({\n          key: 1,\n          id: $options.getItemId(processedItem),\n          style: $options.getItemProp(processedItem, 'style'),\n          \"class\": [_ctx.cx('separator'), $options.getItemProp(processedItem, 'class')],\n          role: \"separator\",\n          ref_for: true\n        }, _ctx.ptm('separator')), null, 16, _hoisted_6)) : createCommentVNode(\"\", true)], 64);\n      }), 128))], 8, _hoisted_1$1)) : createCommentVNode(\"\", true)];\n    }),\n    _: 1\n  }, 16, [\"onEnter\"]);\n}\nscript$1.render = render$1;\nvar script = {\n  name: 'TieredMenu',\n  \"extends\": script$2,\n  inheritAttrs: false,\n  emits: ['focus', 'blur', 'before-show', 'before-hide', 'hide', 'show'],\n  outsideClickListener: null,\n  matchMediaListener: null,\n  scrollHandler: null,\n  resizeListener: null,\n  target: null,\n  container: null,\n  menubar: null,\n  searchTimeout: null,\n  searchValue: null,\n  data: function data() {\n    return {\n      id: this.$attrs.id,\n      focused: false,\n      focusedItemInfo: {\n        index: -1,\n        level: 0,\n        parentKey: ''\n      },\n      activeItemPath: [],\n      visible: !this.popup,\n      submenuVisible: false,\n      dirty: false,\n      query: null,\n      queryMatches: false\n    };\n  },\n  watch: {\n    '$attrs.id': function $attrsId(newValue) {\n      this.id = newValue || UniqueComponentId();\n    },\n    activeItemPath: function activeItemPath(newPath) {\n      if (!this.popup) {\n        if (isNotEmpty(newPath)) {\n          this.bindOutsideClickListener();\n          this.bindResizeListener();\n        } else {\n          this.unbindOutsideClickListener();\n          this.unbindResizeListener();\n        }\n      }\n    }\n  },\n  mounted: function mounted() {\n    this.id = this.id || UniqueComponentId();\n    this.bindMatchMediaListener();\n  },\n  beforeUnmount: function beforeUnmount() {\n    this.unbindOutsideClickListener();\n    this.unbindResizeListener();\n    this.unbindMatchMediaListener();\n    if (this.scrollHandler) {\n      this.scrollHandler.destroy();\n      this.scrollHandler = null;\n    }\n    if (this.container && this.autoZIndex) {\n      ZIndex.clear(this.container);\n    }\n    this.target = null;\n    this.container = null;\n  },\n  methods: {\n    getItemProp: function getItemProp(item, name) {\n      return item ? resolve(item[name]) : undefined;\n    },\n    getItemLabel: function getItemLabel(item) {\n      return this.getItemProp(item, 'label');\n    },\n    isItemDisabled: function isItemDisabled(item) {\n      return this.getItemProp(item, 'disabled');\n    },\n    isItemVisible: function isItemVisible(item) {\n      return this.getItemProp(item, 'visible') !== false;\n    },\n    isItemGroup: function isItemGroup(item) {\n      return isNotEmpty(this.getItemProp(item, 'items'));\n    },\n    isItemSeparator: function isItemSeparator(item) {\n      return this.getItemProp(item, 'separator');\n    },\n    getProccessedItemLabel: function getProccessedItemLabel(processedItem) {\n      return processedItem ? this.getItemLabel(processedItem.item) : undefined;\n    },\n    isProccessedItemGroup: function isProccessedItemGroup(processedItem) {\n      return processedItem && isNotEmpty(processedItem.items);\n    },\n    toggle: function toggle(event) {\n      this.visible ? this.hide(event, true) : this.show(event);\n    },\n    show: function show(event, isFocus) {\n      if (this.popup) {\n        this.$emit('before-show');\n        this.visible = true;\n        this.target = this.target || event.currentTarget;\n        this.relatedTarget = event.relatedTarget || null;\n      }\n      isFocus && focus(this.menubar);\n    },\n    hide: function hide(event, isFocus) {\n      if (this.popup) {\n        this.$emit('before-hide');\n        this.visible = false;\n      }\n      this.activeItemPath = [];\n      this.focusedItemInfo = {\n        index: -1,\n        level: 0,\n        parentKey: ''\n      };\n      isFocus && focus(this.relatedTarget || this.target || this.menubar);\n      this.dirty = false;\n    },\n    onFocus: function onFocus(event) {\n      this.focused = true;\n      if (!this.popup) {\n        this.focusedItemInfo = this.focusedItemInfo.index !== -1 ? this.focusedItemInfo : {\n          index: this.findFirstFocusedItemIndex(),\n          level: 0,\n          parentKey: ''\n        };\n      }\n      this.$emit('focus', event);\n    },\n    onBlur: function onBlur(event) {\n      this.focused = false;\n      this.focusedItemInfo = {\n        index: -1,\n        level: 0,\n        parentKey: ''\n      };\n      this.searchValue = '';\n      this.dirty = false;\n      this.$emit('blur', event);\n    },\n    onKeyDown: function onKeyDown(event) {\n      if (this.disabled) {\n        event.preventDefault();\n        return;\n      }\n      var metaKey = event.metaKey || event.ctrlKey;\n      switch (event.code) {\n        case 'ArrowDown':\n          this.onArrowDownKey(event);\n          break;\n        case 'ArrowUp':\n          this.onArrowUpKey(event);\n          break;\n        case 'ArrowLeft':\n          this.onArrowLeftKey(event);\n          break;\n        case 'ArrowRight':\n          this.onArrowRightKey(event);\n          break;\n        case 'Home':\n          this.onHomeKey(event);\n          break;\n        case 'End':\n          this.onEndKey(event);\n          break;\n        case 'Space':\n          this.onSpaceKey(event);\n          break;\n        case 'Enter':\n        case 'NumpadEnter':\n          this.onEnterKey(event);\n          break;\n        case 'Escape':\n          this.onEscapeKey(event);\n          break;\n        case 'Tab':\n          this.onTabKey(event);\n          break;\n        case 'PageDown':\n        case 'PageUp':\n        case 'Backspace':\n        case 'ShiftLeft':\n        case 'ShiftRight':\n          //NOOP\n          break;\n        default:\n          if (!metaKey && isPrintableCharacter(event.key)) {\n            this.searchItems(event, event.key);\n          }\n          break;\n      }\n    },\n    onItemChange: function onItemChange(event, type) {\n      var processedItem = event.processedItem,\n        isFocus = event.isFocus;\n      if (isEmpty(processedItem)) return;\n      var index = processedItem.index,\n        key = processedItem.key,\n        level = processedItem.level,\n        parentKey = processedItem.parentKey,\n        items = processedItem.items;\n      var grouped = isNotEmpty(items);\n      var activeItemPath = this.activeItemPath.filter(function (p) {\n        return p.parentKey !== parentKey && p.parentKey !== key;\n      });\n      if (grouped) {\n        activeItemPath.push(processedItem);\n        this.submenuVisible = true;\n      }\n      this.focusedItemInfo = {\n        index: index,\n        level: level,\n        parentKey: parentKey\n      };\n      grouped && (this.dirty = true);\n      isFocus && focus(this.menubar);\n      if (type === 'hover' && this.queryMatches) {\n        return;\n      }\n      this.activeItemPath = activeItemPath;\n    },\n    onOverlayClick: function onOverlayClick(event) {\n      OverlayEventBus.emit('overlay-click', {\n        originalEvent: event,\n        target: this.target\n      });\n    },\n    onItemClick: function onItemClick(event) {\n      var originalEvent = event.originalEvent,\n        processedItem = event.processedItem;\n      var grouped = this.isProccessedItemGroup(processedItem);\n      var root = isEmpty(processedItem.parent);\n      var selected = this.isSelected(processedItem);\n      if (selected) {\n        var index = processedItem.index,\n          key = processedItem.key,\n          level = processedItem.level,\n          parentKey = processedItem.parentKey;\n        this.activeItemPath = this.activeItemPath.filter(function (p) {\n          return key !== p.key && key.startsWith(p.key);\n        });\n        this.focusedItemInfo = {\n          index: index,\n          level: level,\n          parentKey: parentKey\n        };\n        this.dirty = !root;\n        focus(this.menubar);\n      } else {\n        if (grouped) {\n          this.onItemChange(event);\n        } else {\n          var rootProcessedItem = root ? processedItem : this.activeItemPath.find(function (p) {\n            return p.parentKey === '';\n          });\n          this.hide(originalEvent);\n          this.changeFocusedItemIndex(originalEvent, rootProcessedItem ? rootProcessedItem.index : -1);\n          focus(this.menubar);\n        }\n      }\n    },\n    onItemMouseEnter: function onItemMouseEnter(event) {\n      if (this.dirty) {\n        this.onItemChange(event, 'hover');\n      }\n    },\n    onItemMouseMove: function onItemMouseMove(event) {\n      if (this.focused) {\n        this.changeFocusedItemIndex(event, event.processedItem.index);\n      }\n    },\n    onArrowDownKey: function onArrowDownKey(event) {\n      var itemIndex = this.focusedItemInfo.index !== -1 ? this.findNextItemIndex(this.focusedItemInfo.index) : this.findFirstFocusedItemIndex();\n      this.changeFocusedItemIndex(event, itemIndex);\n      event.preventDefault();\n    },\n    onArrowUpKey: function onArrowUpKey(event) {\n      if (event.altKey) {\n        if (this.focusedItemInfo.index !== -1) {\n          var processedItem = this.visibleItems[this.focusedItemInfo.index];\n          var grouped = this.isProccessedItemGroup(processedItem);\n          !grouped && this.onItemChange({\n            originalEvent: event,\n            processedItem: processedItem\n          });\n        }\n        this.popup && this.hide(event, true);\n        event.preventDefault();\n      } else {\n        var itemIndex = this.focusedItemInfo.index !== -1 ? this.findPrevItemIndex(this.focusedItemInfo.index) : this.findLastFocusedItemIndex();\n        this.changeFocusedItemIndex(event, itemIndex);\n        event.preventDefault();\n      }\n    },\n    onArrowLeftKey: function onArrowLeftKey(event) {\n      var _this = this;\n      var processedItem = this.visibleItems[this.focusedItemInfo.index];\n      var parentItem = this.activeItemPath.find(function (p) {\n        return p.key === processedItem.parentKey;\n      });\n      var root = isEmpty(processedItem.parent);\n      if (!root) {\n        this.focusedItemInfo = {\n          index: -1,\n          parentKey: parentItem ? parentItem.parentKey : ''\n        };\n        this.searchValue = '';\n        this.onArrowDownKey(event);\n      }\n      this.activeItemPath = this.activeItemPath.filter(function (p) {\n        return p.parentKey !== _this.focusedItemInfo.parentKey;\n      });\n      event.preventDefault();\n    },\n    onArrowRightKey: function onArrowRightKey(event) {\n      var processedItem = this.visibleItems[this.focusedItemInfo.index];\n      var grouped = this.isProccessedItemGroup(processedItem);\n      if (grouped) {\n        this.onItemChange({\n          originalEvent: event,\n          processedItem: processedItem\n        });\n        this.focusedItemInfo = {\n          index: -1,\n          parentKey: processedItem.key\n        };\n        this.searchValue = '';\n        this.onArrowDownKey(event);\n      }\n      event.preventDefault();\n    },\n    onHomeKey: function onHomeKey(event) {\n      this.changeFocusedItemIndex(event, this.findFirstItemIndex());\n      event.preventDefault();\n    },\n    onEndKey: function onEndKey(event) {\n      this.changeFocusedItemIndex(event, this.findLastItemIndex());\n      event.preventDefault();\n    },\n    onEnterKey: function onEnterKey(event) {\n      if (this.focusedItemInfo.index !== -1) {\n        var element = findSingle(this.menubar, \"li[id=\\\"\".concat(\"\".concat(this.focusedItemId), \"\\\"]\"));\n        var anchorElement = element && findSingle(element, '[data-pc-section=\"itemlink\"]');\n        anchorElement ? anchorElement.click() : element && element.click();\n        if (!this.popup) {\n          var processedItem = this.visibleItems[this.focusedItemInfo.index];\n          var grouped = this.isProccessedItemGroup(processedItem);\n          !grouped && (this.focusedItemInfo.index = this.findFirstFocusedItemIndex());\n        }\n      }\n      event.preventDefault();\n    },\n    onSpaceKey: function onSpaceKey(event) {\n      this.onEnterKey(event);\n    },\n    onEscapeKey: function onEscapeKey(event) {\n      if (this.popup || this.focusedItemInfo.level !== 0) {\n        var _focusedItemInfo = this.focusedItemInfo;\n        this.hide(event, false);\n        this.focusedItemInfo = {\n          index: Number(_focusedItemInfo.parentKey.split('_')[0]),\n          level: 0,\n          parentKey: ''\n        };\n        this.popup && focus(this.target);\n      }\n      event.preventDefault();\n    },\n    onTabKey: function onTabKey(event) {\n      if (this.focusedItemInfo.index !== -1) {\n        var processedItem = this.visibleItems[this.focusedItemInfo.index];\n        var grouped = this.isProccessedItemGroup(processedItem);\n        !grouped && this.onItemChange({\n          originalEvent: event,\n          processedItem: processedItem\n        });\n      }\n      this.hide();\n    },\n    onEnter: function onEnter(el) {\n      if (this.autoZIndex) {\n        ZIndex.set('menu', el, this.baseZIndex + this.$primevue.config.zIndex.menu);\n      }\n      addStyle(el, {\n        position: 'absolute',\n        top: '0',\n        left: '0'\n      });\n      this.alignOverlay();\n      focus(this.menubar);\n      this.scrollInView();\n    },\n    onAfterEnter: function onAfterEnter() {\n      this.bindOutsideClickListener();\n      this.bindScrollListener();\n      this.bindResizeListener();\n      this.$emit('show');\n    },\n    onLeave: function onLeave() {\n      this.unbindOutsideClickListener();\n      this.unbindScrollListener();\n      this.unbindResizeListener();\n      this.$emit('hide');\n      this.container = null;\n      this.dirty = false;\n    },\n    onAfterLeave: function onAfterLeave(el) {\n      if (this.autoZIndex) {\n        ZIndex.clear(el);\n      }\n    },\n    alignOverlay: function alignOverlay() {\n      absolutePosition(this.container, this.target);\n      var targetWidth = getOuterWidth(this.target);\n      if (targetWidth > getOuterWidth(this.container)) {\n        this.container.style.minWidth = getOuterWidth(this.target) + 'px';\n      }\n    },\n    bindOutsideClickListener: function bindOutsideClickListener() {\n      var _this2 = this;\n      if (!this.outsideClickListener) {\n        this.outsideClickListener = function (event) {\n          var isOutsideContainer = _this2.container && !_this2.container.contains(event.target);\n          var isOutsideTarget = _this2.popup ? !(_this2.target && (_this2.target === event.target || _this2.target.contains(event.target))) : true;\n          if (isOutsideContainer && isOutsideTarget) {\n            _this2.hide();\n          }\n        };\n        document.addEventListener('click', this.outsideClickListener);\n      }\n    },\n    unbindOutsideClickListener: function unbindOutsideClickListener() {\n      if (this.outsideClickListener) {\n        document.removeEventListener('click', this.outsideClickListener);\n        this.outsideClickListener = null;\n      }\n    },\n    bindScrollListener: function bindScrollListener() {\n      var _this3 = this;\n      if (!this.scrollHandler) {\n        this.scrollHandler = new ConnectedOverlayScrollHandler(this.target, function (event) {\n          _this3.hide(event, true);\n        });\n      }\n      this.scrollHandler.bindScrollListener();\n    },\n    unbindScrollListener: function unbindScrollListener() {\n      if (this.scrollHandler) {\n        this.scrollHandler.unbindScrollListener();\n      }\n    },\n    bindResizeListener: function bindResizeListener() {\n      var _this4 = this;\n      if (!this.resizeListener) {\n        this.resizeListener = function (event) {\n          if (!isTouchDevice()) {\n            _this4.hide(event, true);\n          }\n        };\n        window.addEventListener('resize', this.resizeListener);\n      }\n    },\n    unbindResizeListener: function unbindResizeListener() {\n      if (this.resizeListener) {\n        window.removeEventListener('resize', this.resizeListener);\n        this.resizeListener = null;\n      }\n    },\n    bindMatchMediaListener: function bindMatchMediaListener() {\n      var _this5 = this;\n      if (!this.matchMediaListener) {\n        var query = matchMedia(\"(max-width: \".concat(this.breakpoint, \")\"));\n        this.query = query;\n        this.queryMatches = query.matches;\n        this.matchMediaListener = function () {\n          _this5.queryMatches = query.matches;\n        };\n        this.query.addEventListener('change', this.matchMediaListener);\n      }\n    },\n    unbindMatchMediaListener: function unbindMatchMediaListener() {\n      if (this.matchMediaListener) {\n        this.query.removeEventListener('change', this.matchMediaListener);\n        this.matchMediaListener = null;\n      }\n    },\n    isItemMatched: function isItemMatched(processedItem) {\n      var _this$getProccessedIt;\n      return this.isValidItem(processedItem) && ((_this$getProccessedIt = this.getProccessedItemLabel(processedItem)) === null || _this$getProccessedIt === void 0 ? void 0 : _this$getProccessedIt.toLocaleLowerCase().startsWith(this.searchValue.toLocaleLowerCase()));\n    },\n    isValidItem: function isValidItem(processedItem) {\n      return !!processedItem && !this.isItemDisabled(processedItem.item) && !this.isItemSeparator(processedItem.item) && this.isItemVisible(processedItem.item);\n    },\n    isValidSelectedItem: function isValidSelectedItem(processedItem) {\n      return this.isValidItem(processedItem) && this.isSelected(processedItem);\n    },\n    isSelected: function isSelected(processedItem) {\n      return this.activeItemPath.some(function (p) {\n        return p.key === processedItem.key;\n      });\n    },\n    findFirstItemIndex: function findFirstItemIndex() {\n      var _this6 = this;\n      return this.visibleItems.findIndex(function (processedItem) {\n        return _this6.isValidItem(processedItem);\n      });\n    },\n    findLastItemIndex: function findLastItemIndex() {\n      var _this7 = this;\n      return findLastIndex(this.visibleItems, function (processedItem) {\n        return _this7.isValidItem(processedItem);\n      });\n    },\n    findNextItemIndex: function findNextItemIndex(index) {\n      var _this8 = this;\n      var matchedItemIndex = index < this.visibleItems.length - 1 ? this.visibleItems.slice(index + 1).findIndex(function (processedItem) {\n        return _this8.isValidItem(processedItem);\n      }) : -1;\n      return matchedItemIndex > -1 ? matchedItemIndex + index + 1 : index;\n    },\n    findPrevItemIndex: function findPrevItemIndex(index) {\n      var _this9 = this;\n      var matchedItemIndex = index > 0 ? findLastIndex(this.visibleItems.slice(0, index), function (processedItem) {\n        return _this9.isValidItem(processedItem);\n      }) : -1;\n      return matchedItemIndex > -1 ? matchedItemIndex : index;\n    },\n    findSelectedItemIndex: function findSelectedItemIndex() {\n      var _this10 = this;\n      return this.visibleItems.findIndex(function (processedItem) {\n        return _this10.isValidSelectedItem(processedItem);\n      });\n    },\n    findFirstFocusedItemIndex: function findFirstFocusedItemIndex() {\n      var selectedIndex = this.findSelectedItemIndex();\n      return selectedIndex < 0 ? this.findFirstItemIndex() : selectedIndex;\n    },\n    findLastFocusedItemIndex: function findLastFocusedItemIndex() {\n      var selectedIndex = this.findSelectedItemIndex();\n      return selectedIndex < 0 ? this.findLastItemIndex() : selectedIndex;\n    },\n    searchItems: function searchItems(event, _char) {\n      var _this11 = this;\n      this.searchValue = (this.searchValue || '') + _char;\n      var itemIndex = -1;\n      var matched = false;\n      if (this.focusedItemInfo.index !== -1) {\n        itemIndex = this.visibleItems.slice(this.focusedItemInfo.index).findIndex(function (processedItem) {\n          return _this11.isItemMatched(processedItem);\n        });\n        itemIndex = itemIndex === -1 ? this.visibleItems.slice(0, this.focusedItemInfo.index).findIndex(function (processedItem) {\n          return _this11.isItemMatched(processedItem);\n        }) : itemIndex + this.focusedItemInfo.index;\n      } else {\n        itemIndex = this.visibleItems.findIndex(function (processedItem) {\n          return _this11.isItemMatched(processedItem);\n        });\n      }\n      if (itemIndex !== -1) {\n        matched = true;\n      }\n      if (itemIndex === -1 && this.focusedItemInfo.index === -1) {\n        itemIndex = this.findFirstFocusedItemIndex();\n      }\n      if (itemIndex !== -1) {\n        this.changeFocusedItemIndex(event, itemIndex);\n      }\n      if (this.searchTimeout) {\n        clearTimeout(this.searchTimeout);\n      }\n      this.searchTimeout = setTimeout(function () {\n        _this11.searchValue = '';\n        _this11.searchTimeout = null;\n      }, 500);\n      return matched;\n    },\n    changeFocusedItemIndex: function changeFocusedItemIndex(event, index) {\n      if (this.focusedItemInfo.index !== index) {\n        this.focusedItemInfo.index = index;\n        this.scrollInView();\n      }\n    },\n    scrollInView: function scrollInView() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : -1;\n      var id = index !== -1 ? \"\".concat(this.id, \"_\").concat(index) : this.focusedItemId;\n      var element = findSingle(this.menubar, \"li[id=\\\"\".concat(id, \"\\\"]\"));\n      if (element) {\n        element.scrollIntoView && element.scrollIntoView({\n          block: 'nearest',\n          inline: 'start'\n        });\n      }\n    },\n    createProcessedItems: function createProcessedItems(items) {\n      var _this12 = this;\n      var level = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      var parent = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      var parentKey = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '';\n      var processedItems = [];\n      items && items.forEach(function (item, index) {\n        var key = (parentKey !== '' ? parentKey + '_' : '') + index;\n        var newItem = {\n          item: item,\n          index: index,\n          level: level,\n          key: key,\n          parent: parent,\n          parentKey: parentKey\n        };\n        newItem['items'] = _this12.createProcessedItems(item.items, level + 1, newItem, key);\n        processedItems.push(newItem);\n      });\n      return processedItems;\n    },\n    containerRef: function containerRef(el) {\n      this.container = el;\n    },\n    menubarRef: function menubarRef(el) {\n      this.menubar = el ? el.$el : undefined;\n    }\n  },\n  computed: {\n    processedItems: function processedItems() {\n      return this.createProcessedItems(this.model || []);\n    },\n    visibleItems: function visibleItems() {\n      var _this13 = this;\n      var processedItem = this.activeItemPath.find(function (p) {\n        return p.key === _this13.focusedItemInfo.parentKey;\n      });\n      return processedItem ? processedItem.items : this.processedItems;\n    },\n    focusedItemId: function focusedItemId() {\n      return this.focusedItemInfo.index !== -1 ? \"\".concat(this.id).concat(isNotEmpty(this.focusedItemInfo.parentKey) ? '_' + this.focusedItemInfo.parentKey : '', \"_\").concat(this.focusedItemInfo.index) : null;\n    }\n  },\n  components: {\n    TieredMenuSub: script$1,\n    Portal: Portal\n  }\n};\nvar _hoisted_1 = [\"id\"];\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_TieredMenuSub = resolveComponent(\"TieredMenuSub\");\n  var _component_Portal = resolveComponent(\"Portal\");\n  return openBlock(), createBlock(_component_Portal, {\n    appendTo: _ctx.appendTo,\n    disabled: !_ctx.popup\n  }, {\n    \"default\": withCtx(function () {\n      return [createVNode(Transition, mergeProps({\n        name: \"p-connected-overlay\",\n        onEnter: $options.onEnter,\n        onAfterEnter: $options.onAfterEnter,\n        onLeave: $options.onLeave,\n        onAfterLeave: $options.onAfterLeave\n      }, _ctx.ptm('transition')), {\n        \"default\": withCtx(function () {\n          return [$data.visible ? (openBlock(), createElementBlock(\"div\", mergeProps({\n            key: 0,\n            ref: $options.containerRef,\n            id: $data.id,\n            \"class\": _ctx.cx('root'),\n            onClick: _cache[0] || (_cache[0] = function () {\n              return $options.onOverlayClick && $options.onOverlayClick.apply($options, arguments);\n            })\n          }, _ctx.ptmi('root')), [_ctx.$slots.start ? (openBlock(), createElementBlock(\"div\", mergeProps({\n            key: 0,\n            \"class\": _ctx.cx('start')\n          }, _ctx.ptm('start')), [renderSlot(_ctx.$slots, \"start\")], 16)) : createCommentVNode(\"\", true), createVNode(_component_TieredMenuSub, mergeProps({\n            ref: $options.menubarRef,\n            id: $data.id + '_list',\n            \"class\": _ctx.cx('rootList'),\n            tabindex: !_ctx.disabled ? _ctx.tabindex : -1,\n            role: \"menubar\",\n            \"aria-label\": _ctx.ariaLabel,\n            \"aria-labelledby\": _ctx.ariaLabelledby,\n            \"aria-disabled\": _ctx.disabled || undefined,\n            \"aria-orientation\": \"vertical\",\n            \"aria-activedescendant\": $data.focused ? $options.focusedItemId : undefined,\n            menuId: $data.id,\n            focusedItemId: $data.focused ? $options.focusedItemId : undefined,\n            items: $options.processedItems,\n            templates: _ctx.$slots,\n            activeItemPath: $data.activeItemPath,\n            level: 0,\n            visible: $data.submenuVisible,\n            pt: _ctx.pt,\n            unstyled: _ctx.unstyled,\n            onFocus: $options.onFocus,\n            onBlur: $options.onBlur,\n            onKeydown: $options.onKeyDown,\n            onItemClick: $options.onItemClick,\n            onItemMouseenter: $options.onItemMouseEnter,\n            onItemMousemove: $options.onItemMouseMove\n          }, _ctx.ptm('rootList')), null, 16, [\"id\", \"class\", \"tabindex\", \"aria-label\", \"aria-labelledby\", \"aria-disabled\", \"aria-activedescendant\", \"menuId\", \"focusedItemId\", \"items\", \"templates\", \"activeItemPath\", \"visible\", \"pt\", \"unstyled\", \"onFocus\", \"onBlur\", \"onKeydown\", \"onItemClick\", \"onItemMouseenter\", \"onItemMousemove\"]), _ctx.$slots.end ? (openBlock(), createElementBlock(\"div\", mergeProps({\n            key: 1,\n            \"class\": _ctx.cx('end')\n          }, _ctx.ptm('end')), [renderSlot(_ctx.$slots, \"end\")], 16)) : createCommentVNode(\"\", true)], 16, _hoisted_1)) : createCommentVNode(\"\", true)];\n        }),\n        _: 3\n      }, 16, [\"onEnter\", \"onAfterEnter\", \"onLeave\", \"onAfterLeave\"])];\n    }),\n    _: 3\n  }, 8, [\"appendTo\", \"disabled\"]);\n}\nscript.render = render;\nexport { script as default };","map":{"version":3,"names":["script$2","name","BaseComponent","props","popup","type","Boolean","model","Array","appendTo","String","Object","breakpoint","autoZIndex","baseZIndex","Number","disabled","tabindex","ariaLabelledby","ariaLabel","style","TieredMenuStyle","provide","$pcTieredMenu","$parentInstance","script$1","hostName","emits","container","menuId","focusedItemId","items","visible","level","templates","activeItemPath","methods","getItemId","processedItem","concat","key","getItemKey","getItemProp","params","item","resolve","undefined","getItemLabel","getItemLabelId","getPTOptions","index","ptm","context","active","isItemActive","focused","isItemFocused","isItemDisabled","some","path","isItemVisible","isItemGroup","isNotEmpty","onEnter","nestedPosition","onItemClick","event","originalEvent","$emit","isFocus","onItemMouseEnter","onItemMouseMove","getAriaSetSize","_this","filter","length","getAriaPosInset","_this2","slice","getMenuItemProps","action","mergeProps","cx","icon","label","submenuicon","containerRef","el","components","AngleRightIcon","directives","ripple","Ripple","openBlock","createBlock","Transition","$options","_ctx","$props","createElementBlock","ref","Fragment","renderList","id","role","createElementVNode","onClick","$event","onMouseenter","onMousemove","withDirectives","href","target","itemicon","resolveDynamicComponent","normalizeClass","createCommentVNode","toDisplayString","_hoisted_5","_component_AngleRightIcon","_hoisted_4","_directive_ripple","hasSubmenu","_component_TieredMenuSub","sx","pt","unstyled","_cache","onItemMouseenter","onItemMousemove","_hoisted_2","_hoisted_6","script","inheritAttrs","outsideClickListener","matchMediaListener","scrollHandler","resizeListener","menubar","searchTimeout","searchValue","data","$attrs","focusedItemInfo","parentKey","submenuVisible","dirty","query","queryMatches","watch","$attrsId","newValue","UniqueComponentId","newPath","bindOutsideClickListener","bindResizeListener","unbindOutsideClickListener","unbindResizeListener","mounted","bindMatchMediaListener","beforeUnmount","unbindMatchMediaListener","destroy","ZIndex","clear","isItemSeparator","getProccessedItemLabel","isProccessedItemGroup","toggle","hide","show","currentTarget","relatedTarget","focus","onFocus","findFirstFocusedItemIndex","onBlur","onKeyDown","preventDefault","metaKey","ctrlKey","code","onArrowDownKey","onArrowUpKey","onArrowLeftKey","onArrowRightKey","onHomeKey","onEndKey","onSpaceKey","onEnterKey","onEscapeKey","onTabKey","isPrintableCharacter","searchItems","onItemChange","isEmpty","grouped","p","push","onOverlayClick","OverlayEventBus","emit","root","parent","selected","isSelected","startsWith","rootProcessedItem","find","changeFocusedItemIndex","itemIndex","findNextItemIndex","altKey","visibleItems","findPrevItemIndex","findLastFocusedItemIndex","parentItem","findFirstItemIndex","findLastItemIndex","element","findSingle","anchorElement","click","_focusedItemInfo","split","set","$primevue","config","zIndex","menu","addStyle","position","top","left","alignOverlay","scrollInView","onAfterEnter","bindScrollListener","onLeave","unbindScrollListener","onAfterLeave","absolutePosition","targetWidth","getOuterWidth","minWidth","isOutsideContainer","contains","isOutsideTarget","document","addEventListener","removeEventListener","_this3","ConnectedOverlayScrollHandler","_this4","isTouchDevice","window","_this5","matchMedia","matches","isItemMatched","_this$getProccessedIt","isValidItem","toLocaleLowerCase","isValidSelectedItem","_this6","findIndex","_this7","findLastIndex","_this8","matchedItemIndex","_this9","findSelectedItemIndex","_this10","selectedIndex","_char","_this11","matched","clearTimeout","setTimeout","arguments","scrollIntoView","block","inline","createProcessedItems","_this12","processedItems","forEach","newItem","menubarRef","$el","computed","_this13","TieredMenuSub","Portal","_component_Portal","createVNode","$data","apply","ptmi","$slots","start","renderSlot","onKeydown","end","_hoisted_1"],"sources":["../../src/tieredmenu/BaseTieredMenu.vue","../../src/tieredmenu/TieredMenuSub.vue","../../src/tieredmenu/TieredMenuSub.vue?vue&type=template&id=34d7057f&lang.js","../../src/tieredmenu/TieredMenu.vue","../../src/tieredmenu/TieredMenu.vue?vue&type=template&id=1511ec7e&lang.js"],"sourcesContent":["<script>\nimport BaseComponent from '@primevue/core/basecomponent';\nimport TieredMenuStyle from 'primevue/tieredmenu/style';\n\nexport default {\n    name: 'BaseTieredMenu',\n    extends: BaseComponent,\n    props: {\n        popup: {\n            type: Boolean,\n            default: false\n        },\n        model: {\n            type: Array,\n            default: null\n        },\n        appendTo: {\n            type: [String, Object],\n            default: 'body'\n        },\n        breakpoint: {\n            type: String,\n            default: '960px'\n        },\n        autoZIndex: {\n            type: Boolean,\n            default: true\n        },\n        baseZIndex: {\n            type: Number,\n            default: 0\n        },\n        disabled: {\n            type: Boolean,\n            default: false\n        },\n        tabindex: {\n            type: Number,\n            default: 0\n        },\n        ariaLabelledby: {\n            type: String,\n            default: null\n        },\n        ariaLabel: {\n            type: String,\n            default: null\n        }\n    },\n    style: TieredMenuStyle,\n    provide() {\n        return {\n            $pcTieredMenu: this,\n            $parentInstance: this\n        };\n    }\n};\n</script>\n","<template>\n    <transition name=\"p-tieredmenu\" @enter=\"onEnter\" v-bind=\"ptm('menu.transition')\">\n        <ul v-if=\"level === 0 ? true : visible\" :ref=\"containerRef\" :tabindex=\"tabindex\">\n            <template v-for=\"(processedItem, index) of items\" :key=\"getItemKey(processedItem)\">\n                <li\n                    v-if=\"isItemVisible(processedItem) && !getItemProp(processedItem, 'separator')\"\n                    :id=\"getItemId(processedItem)\"\n                    :style=\"getItemProp(processedItem, 'style')\"\n                    :class=\"[cx('item', { processedItem }), getItemProp(processedItem, 'class')]\"\n                    role=\"menuitem\"\n                    :aria-label=\"getItemLabel(processedItem)\"\n                    :aria-disabled=\"isItemDisabled(processedItem) || undefined\"\n                    :aria-expanded=\"isItemGroup(processedItem) ? isItemActive(processedItem) : undefined\"\n                    :aria-haspopup=\"isItemGroup(processedItem) && !getItemProp(processedItem, 'to') ? 'menu' : undefined\"\n                    :aria-level=\"level + 1\"\n                    :aria-setsize=\"getAriaSetSize()\"\n                    :aria-posinset=\"getAriaPosInset(index)\"\n                    v-bind=\"getPTOptions(processedItem, index, 'item')\"\n                    :data-p-active=\"isItemActive(processedItem)\"\n                    :data-p-focused=\"isItemFocused(processedItem)\"\n                    :data-p-disabled=\"isItemDisabled(processedItem)\"\n                >\n                    <div\n                        :class=\"cx('itemContent')\"\n                        @click=\"onItemClick($event, processedItem)\"\n                        @mouseenter=\"onItemMouseEnter($event, processedItem)\"\n                        @mousemove=\"onItemMouseMove($event, processedItem)\"\n                        v-bind=\"getPTOptions(processedItem, index, 'itemContent')\"\n                    >\n                        <template v-if=\"!templates.item\">\n                            <a v-ripple :href=\"getItemProp(processedItem, 'url')\" :class=\"cx('itemLink')\" :target=\"getItemProp(processedItem, 'target')\" tabindex=\"-1\" v-bind=\"getPTOptions(processedItem, index, 'itemLink')\">\n                                <component v-if=\"templates.itemicon\" :is=\"templates.itemicon\" :item=\"processedItem.item\" :class=\"cx('itemIcon')\" />\n                                <span v-else-if=\"getItemProp(processedItem, 'icon')\" :class=\"[cx('itemIcon'), getItemProp(processedItem, 'icon')]\" v-bind=\"getPTOptions(processedItem, index, 'itemIcon')\" />\n                                <span :id=\"getItemLabelId(processedItem)\" :class=\"cx('itemLabel')\" v-bind=\"getPTOptions(processedItem, index, 'itemLabel')\">{{ getItemLabel(processedItem) }}</span>\n                                <template v-if=\"getItemProp(processedItem, 'items')\">\n                                    <component v-if=\"templates.submenuicon\" :is=\"templates.submenuicon\" :class=\"cx('submenuIcon')\" :active=\"isItemActive(processedItem)\" v-bind=\"getPTOptions(processedItem, index, 'submenuIcon')\" />\n                                    <AngleRightIcon v-else :class=\"cx('submenuIcon')\" v-bind=\"getPTOptions(processedItem, index, 'submenuIcon')\" />\n                                </template>\n                            </a>\n                        </template>\n                        <component v-else :is=\"templates.item\" :item=\"processedItem.item\" :hasSubmenu=\"getItemProp(processedItem, 'items')\" :label=\"getItemLabel(processedItem)\" :props=\"getMenuItemProps(processedItem, index)\"></component>\n                    </div>\n                    <TieredMenuSub\n                        v-if=\"isItemVisible(processedItem) && isItemGroup(processedItem)\"\n                        :id=\"getItemId(processedItem) + '_list'\"\n                        :class=\"cx('submenu')\"\n                        :style=\"sx('submenu', true, { processedItem })\"\n                        :aria-labelledby=\"getItemLabelId(processedItem)\"\n                        role=\"menu\"\n                        :menuId=\"menuId\"\n                        :focusedItemId=\"focusedItemId\"\n                        :items=\"processedItem.items\"\n                        :templates=\"templates\"\n                        :activeItemPath=\"activeItemPath\"\n                        :level=\"level + 1\"\n                        :visible=\"isItemActive(processedItem) && isItemGroup(processedItem)\"\n                        :pt=\"pt\"\n                        :unstyled=\"unstyled\"\n                        @item-click=\"$emit('item-click', $event)\"\n                        @item-mouseenter=\"$emit('item-mouseenter', $event)\"\n                        @item-mousemove=\"$emit('item-mousemove', $event)\"\n                        v-bind=\"ptm('submenu')\"\n                    />\n                </li>\n                <li\n                    v-if=\"isItemVisible(processedItem) && getItemProp(processedItem, 'separator')\"\n                    :id=\"getItemId(processedItem)\"\n                    :style=\"getItemProp(processedItem, 'style')\"\n                    :class=\"[cx('separator'), getItemProp(processedItem, 'class')]\"\n                    role=\"separator\"\n                    v-bind=\"ptm('separator')\"\n                ></li>\n            </template>\n        </ul>\n    </transition>\n</template>\n\n<script>\nimport { nestedPosition } from '@primeuix/utils/dom';\nimport { isNotEmpty, resolve } from '@primeuix/utils/object';\nimport BaseComponent from '@primevue/core/basecomponent';\nimport AngleRightIcon from '@primevue/icons/angleright';\nimport Ripple from 'primevue/ripple';\nimport { mergeProps } from 'vue';\n\nexport default {\n    name: 'TieredMenuSub',\n    hostName: 'TieredMenu',\n    extends: BaseComponent,\n    emits: ['item-click', 'item-mouseenter', 'item-mousemove'],\n    container: null,\n    props: {\n        menuId: {\n            type: String,\n            default: null\n        },\n        focusedItemId: {\n            type: String,\n            default: null\n        },\n        items: {\n            type: Array,\n            default: null\n        },\n        visible: {\n            type: Boolean,\n            default: false\n        },\n        level: {\n            type: Number,\n            default: 0\n        },\n        templates: {\n            type: Object,\n            default: null\n        },\n        activeItemPath: {\n            type: Object,\n            default: null\n        },\n        tabindex: {\n            type: Number,\n            default: 0\n        }\n    },\n    methods: {\n        getItemId(processedItem) {\n            return `${this.menuId}_${processedItem.key}`;\n        },\n        getItemKey(processedItem) {\n            return this.getItemId(processedItem);\n        },\n        getItemProp(processedItem, name, params) {\n            return processedItem && processedItem.item ? resolve(processedItem.item[name], params) : undefined;\n        },\n        getItemLabel(processedItem) {\n            return this.getItemProp(processedItem, 'label');\n        },\n        getItemLabelId(processedItem) {\n            return `${this.menuId}_${processedItem.key}_label`;\n        },\n        getPTOptions(processedItem, index, key) {\n            return this.ptm(key, {\n                context: {\n                    item: processedItem.item,\n                    index,\n                    active: this.isItemActive(processedItem),\n                    focused: this.isItemFocused(processedItem),\n                    disabled: this.isItemDisabled(processedItem)\n                }\n            });\n        },\n        isItemActive(processedItem) {\n            return this.activeItemPath.some((path) => path.key === processedItem.key);\n        },\n        isItemVisible(processedItem) {\n            return this.getItemProp(processedItem, 'visible') !== false;\n        },\n        isItemDisabled(processedItem) {\n            return this.getItemProp(processedItem, 'disabled');\n        },\n        isItemFocused(processedItem) {\n            return this.focusedItemId === this.getItemId(processedItem);\n        },\n        isItemGroup(processedItem) {\n            return isNotEmpty(processedItem.items);\n        },\n        onEnter() {\n            nestedPosition(this.container, this.level);\n        },\n        onItemClick(event, processedItem) {\n            this.getItemProp(processedItem, 'command', { originalEvent: event, item: processedItem.item });\n            this.$emit('item-click', { originalEvent: event, processedItem, isFocus: true });\n        },\n        onItemMouseEnter(event, processedItem) {\n            this.$emit('item-mouseenter', { originalEvent: event, processedItem });\n        },\n        onItemMouseMove(event, processedItem) {\n            this.$emit('item-mousemove', { originalEvent: event, processedItem });\n        },\n        getAriaSetSize() {\n            return this.items.filter((processedItem) => this.isItemVisible(processedItem) && !this.getItemProp(processedItem, 'separator')).length;\n        },\n        getAriaPosInset(index) {\n            return index - this.items.slice(0, index).filter((processedItem) => this.isItemVisible(processedItem) && this.getItemProp(processedItem, 'separator')).length + 1;\n        },\n        getMenuItemProps(processedItem, index) {\n            return {\n                action: mergeProps(\n                    {\n                        class: this.cx('itemLink'),\n                        tabindex: -1\n                    },\n                    this.getPTOptions(processedItem, index, 'itemLink')\n                ),\n                icon: mergeProps(\n                    {\n                        class: [this.cx('itemIcon'), this.getItemProp(processedItem, 'icon')]\n                    },\n                    this.getPTOptions(processedItem, index, 'itemIcon')\n                ),\n                label: mergeProps(\n                    {\n                        class: this.cx('itemLabel')\n                    },\n                    this.getPTOptions(processedItem, index, 'itemLabel')\n                ),\n                submenuicon: mergeProps(\n                    {\n                        class: this.cx('submenuIcon')\n                    },\n                    this.getPTOptions(processedItem, index, 'submenuIcon')\n                )\n            };\n        },\n        containerRef(el) {\n            this.container = el;\n        }\n    },\n    components: {\n        AngleRightIcon: AngleRightIcon\n    },\n    directives: {\n        ripple: Ripple\n    }\n};\n</script>\n","<template>\n    <transition name=\"p-tieredmenu\" @enter=\"onEnter\" v-bind=\"ptm('menu.transition')\">\n        <ul v-if=\"level === 0 ? true : visible\" :ref=\"containerRef\" :tabindex=\"tabindex\">\n            <template v-for=\"(processedItem, index) of items\" :key=\"getItemKey(processedItem)\">\n                <li\n                    v-if=\"isItemVisible(processedItem) && !getItemProp(processedItem, 'separator')\"\n                    :id=\"getItemId(processedItem)\"\n                    :style=\"getItemProp(processedItem, 'style')\"\n                    :class=\"[cx('item', { processedItem }), getItemProp(processedItem, 'class')]\"\n                    role=\"menuitem\"\n                    :aria-label=\"getItemLabel(processedItem)\"\n                    :aria-disabled=\"isItemDisabled(processedItem) || undefined\"\n                    :aria-expanded=\"isItemGroup(processedItem) ? isItemActive(processedItem) : undefined\"\n                    :aria-haspopup=\"isItemGroup(processedItem) && !getItemProp(processedItem, 'to') ? 'menu' : undefined\"\n                    :aria-level=\"level + 1\"\n                    :aria-setsize=\"getAriaSetSize()\"\n                    :aria-posinset=\"getAriaPosInset(index)\"\n                    v-bind=\"getPTOptions(processedItem, index, 'item')\"\n                    :data-p-active=\"isItemActive(processedItem)\"\n                    :data-p-focused=\"isItemFocused(processedItem)\"\n                    :data-p-disabled=\"isItemDisabled(processedItem)\"\n                >\n                    <div\n                        :class=\"cx('itemContent')\"\n                        @click=\"onItemClick($event, processedItem)\"\n                        @mouseenter=\"onItemMouseEnter($event, processedItem)\"\n                        @mousemove=\"onItemMouseMove($event, processedItem)\"\n                        v-bind=\"getPTOptions(processedItem, index, 'itemContent')\"\n                    >\n                        <template v-if=\"!templates.item\">\n                            <a v-ripple :href=\"getItemProp(processedItem, 'url')\" :class=\"cx('itemLink')\" :target=\"getItemProp(processedItem, 'target')\" tabindex=\"-1\" v-bind=\"getPTOptions(processedItem, index, 'itemLink')\">\n                                <component v-if=\"templates.itemicon\" :is=\"templates.itemicon\" :item=\"processedItem.item\" :class=\"cx('itemIcon')\" />\n                                <span v-else-if=\"getItemProp(processedItem, 'icon')\" :class=\"[cx('itemIcon'), getItemProp(processedItem, 'icon')]\" v-bind=\"getPTOptions(processedItem, index, 'itemIcon')\" />\n                                <span :id=\"getItemLabelId(processedItem)\" :class=\"cx('itemLabel')\" v-bind=\"getPTOptions(processedItem, index, 'itemLabel')\">{{ getItemLabel(processedItem) }}</span>\n                                <template v-if=\"getItemProp(processedItem, 'items')\">\n                                    <component v-if=\"templates.submenuicon\" :is=\"templates.submenuicon\" :class=\"cx('submenuIcon')\" :active=\"isItemActive(processedItem)\" v-bind=\"getPTOptions(processedItem, index, 'submenuIcon')\" />\n                                    <AngleRightIcon v-else :class=\"cx('submenuIcon')\" v-bind=\"getPTOptions(processedItem, index, 'submenuIcon')\" />\n                                </template>\n                            </a>\n                        </template>\n                        <component v-else :is=\"templates.item\" :item=\"processedItem.item\" :hasSubmenu=\"getItemProp(processedItem, 'items')\" :label=\"getItemLabel(processedItem)\" :props=\"getMenuItemProps(processedItem, index)\"></component>\n                    </div>\n                    <TieredMenuSub\n                        v-if=\"isItemVisible(processedItem) && isItemGroup(processedItem)\"\n                        :id=\"getItemId(processedItem) + '_list'\"\n                        :class=\"cx('submenu')\"\n                        :style=\"sx('submenu', true, { processedItem })\"\n                        :aria-labelledby=\"getItemLabelId(processedItem)\"\n                        role=\"menu\"\n                        :menuId=\"menuId\"\n                        :focusedItemId=\"focusedItemId\"\n                        :items=\"processedItem.items\"\n                        :templates=\"templates\"\n                        :activeItemPath=\"activeItemPath\"\n                        :level=\"level + 1\"\n                        :visible=\"isItemActive(processedItem) && isItemGroup(processedItem)\"\n                        :pt=\"pt\"\n                        :unstyled=\"unstyled\"\n                        @item-click=\"$emit('item-click', $event)\"\n                        @item-mouseenter=\"$emit('item-mouseenter', $event)\"\n                        @item-mousemove=\"$emit('item-mousemove', $event)\"\n                        v-bind=\"ptm('submenu')\"\n                    />\n                </li>\n                <li\n                    v-if=\"isItemVisible(processedItem) && getItemProp(processedItem, 'separator')\"\n                    :id=\"getItemId(processedItem)\"\n                    :style=\"getItemProp(processedItem, 'style')\"\n                    :class=\"[cx('separator'), getItemProp(processedItem, 'class')]\"\n                    role=\"separator\"\n                    v-bind=\"ptm('separator')\"\n                ></li>\n            </template>\n        </ul>\n    </transition>\n</template>\n\n<script>\nimport { nestedPosition } from '@primeuix/utils/dom';\nimport { isNotEmpty, resolve } from '@primeuix/utils/object';\nimport BaseComponent from '@primevue/core/basecomponent';\nimport AngleRightIcon from '@primevue/icons/angleright';\nimport Ripple from 'primevue/ripple';\nimport { mergeProps } from 'vue';\n\nexport default {\n    name: 'TieredMenuSub',\n    hostName: 'TieredMenu',\n    extends: BaseComponent,\n    emits: ['item-click', 'item-mouseenter', 'item-mousemove'],\n    container: null,\n    props: {\n        menuId: {\n            type: String,\n            default: null\n        },\n        focusedItemId: {\n            type: String,\n            default: null\n        },\n        items: {\n            type: Array,\n            default: null\n        },\n        visible: {\n            type: Boolean,\n            default: false\n        },\n        level: {\n            type: Number,\n            default: 0\n        },\n        templates: {\n            type: Object,\n            default: null\n        },\n        activeItemPath: {\n            type: Object,\n            default: null\n        },\n        tabindex: {\n            type: Number,\n            default: 0\n        }\n    },\n    methods: {\n        getItemId(processedItem) {\n            return `${this.menuId}_${processedItem.key}`;\n        },\n        getItemKey(processedItem) {\n            return this.getItemId(processedItem);\n        },\n        getItemProp(processedItem, name, params) {\n            return processedItem && processedItem.item ? resolve(processedItem.item[name], params) : undefined;\n        },\n        getItemLabel(processedItem) {\n            return this.getItemProp(processedItem, 'label');\n        },\n        getItemLabelId(processedItem) {\n            return `${this.menuId}_${processedItem.key}_label`;\n        },\n        getPTOptions(processedItem, index, key) {\n            return this.ptm(key, {\n                context: {\n                    item: processedItem.item,\n                    index,\n                    active: this.isItemActive(processedItem),\n                    focused: this.isItemFocused(processedItem),\n                    disabled: this.isItemDisabled(processedItem)\n                }\n            });\n        },\n        isItemActive(processedItem) {\n            return this.activeItemPath.some((path) => path.key === processedItem.key);\n        },\n        isItemVisible(processedItem) {\n            return this.getItemProp(processedItem, 'visible') !== false;\n        },\n        isItemDisabled(processedItem) {\n            return this.getItemProp(processedItem, 'disabled');\n        },\n        isItemFocused(processedItem) {\n            return this.focusedItemId === this.getItemId(processedItem);\n        },\n        isItemGroup(processedItem) {\n            return isNotEmpty(processedItem.items);\n        },\n        onEnter() {\n            nestedPosition(this.container, this.level);\n        },\n        onItemClick(event, processedItem) {\n            this.getItemProp(processedItem, 'command', { originalEvent: event, item: processedItem.item });\n            this.$emit('item-click', { originalEvent: event, processedItem, isFocus: true });\n        },\n        onItemMouseEnter(event, processedItem) {\n            this.$emit('item-mouseenter', { originalEvent: event, processedItem });\n        },\n        onItemMouseMove(event, processedItem) {\n            this.$emit('item-mousemove', { originalEvent: event, processedItem });\n        },\n        getAriaSetSize() {\n            return this.items.filter((processedItem) => this.isItemVisible(processedItem) && !this.getItemProp(processedItem, 'separator')).length;\n        },\n        getAriaPosInset(index) {\n            return index - this.items.slice(0, index).filter((processedItem) => this.isItemVisible(processedItem) && this.getItemProp(processedItem, 'separator')).length + 1;\n        },\n        getMenuItemProps(processedItem, index) {\n            return {\n                action: mergeProps(\n                    {\n                        class: this.cx('itemLink'),\n                        tabindex: -1\n                    },\n                    this.getPTOptions(processedItem, index, 'itemLink')\n                ),\n                icon: mergeProps(\n                    {\n                        class: [this.cx('itemIcon'), this.getItemProp(processedItem, 'icon')]\n                    },\n                    this.getPTOptions(processedItem, index, 'itemIcon')\n                ),\n                label: mergeProps(\n                    {\n                        class: this.cx('itemLabel')\n                    },\n                    this.getPTOptions(processedItem, index, 'itemLabel')\n                ),\n                submenuicon: mergeProps(\n                    {\n                        class: this.cx('submenuIcon')\n                    },\n                    this.getPTOptions(processedItem, index, 'submenuIcon')\n                )\n            };\n        },\n        containerRef(el) {\n            this.container = el;\n        }\n    },\n    components: {\n        AngleRightIcon: AngleRightIcon\n    },\n    directives: {\n        ripple: Ripple\n    }\n};\n</script>\n","<template>\n    <Portal :appendTo=\"appendTo\" :disabled=\"!popup\">\n        <transition name=\"p-connected-overlay\" @enter=\"onEnter\" @after-enter=\"onAfterEnter\" @leave=\"onLeave\" @after-leave=\"onAfterLeave\" v-bind=\"ptm('transition')\">\n            <div v-if=\"visible\" :ref=\"containerRef\" :id=\"id\" :class=\"cx('root')\" @click=\"onOverlayClick\" v-bind=\"ptmi('root')\">\n                <div v-if=\"$slots.start\" :class=\"cx('start')\" v-bind=\"ptm('start')\">\n                    <slot name=\"start\"></slot>\n                </div>\n                <TieredMenuSub\n                    :ref=\"menubarRef\"\n                    :id=\"id + '_list'\"\n                    :class=\"cx('rootList')\"\n                    :tabindex=\"!disabled ? tabindex : -1\"\n                    role=\"menubar\"\n                    :aria-label=\"ariaLabel\"\n                    :aria-labelledby=\"ariaLabelledby\"\n                    :aria-disabled=\"disabled || undefined\"\n                    aria-orientation=\"vertical\"\n                    :aria-activedescendant=\"focused ? focusedItemId : undefined\"\n                    :menuId=\"id\"\n                    :focusedItemId=\"focused ? focusedItemId : undefined\"\n                    :items=\"processedItems\"\n                    :templates=\"$slots\"\n                    :activeItemPath=\"activeItemPath\"\n                    :level=\"0\"\n                    :visible=\"submenuVisible\"\n                    :pt=\"pt\"\n                    :unstyled=\"unstyled\"\n                    @focus=\"onFocus\"\n                    @blur=\"onBlur\"\n                    @keydown=\"onKeyDown\"\n                    @item-click=\"onItemClick\"\n                    @item-mouseenter=\"onItemMouseEnter\"\n                    @item-mousemove=\"onItemMouseMove\"\n                    v-bind=\"ptm('rootList')\"\n                />\n                <div v-if=\"$slots.end\" :class=\"cx('end')\" v-bind=\"ptm('end')\">\n                    <slot name=\"end\"></slot>\n                </div>\n            </div>\n        </transition>\n    </Portal>\n</template>\n\n<script>\nimport { absolutePosition, addStyle, findSingle, focus, getOuterWidth, isTouchDevice } from '@primeuix/utils/dom';\nimport { findLastIndex, isEmpty, isNotEmpty, isPrintableCharacter, resolve } from '@primeuix/utils/object';\nimport { ZIndex } from '@primeuix/utils/zindex';\nimport { ConnectedOverlayScrollHandler, UniqueComponentId } from '@primevue/core/utils';\nimport OverlayEventBus from 'primevue/overlayeventbus';\nimport Portal from 'primevue/portal';\nimport BaseTieredMenu from './BaseTieredMenu.vue';\nimport TieredMenuSub from './TieredMenuSub.vue';\n\nexport default {\n    name: 'TieredMenu',\n    extends: BaseTieredMenu,\n    inheritAttrs: false,\n    emits: ['focus', 'blur', 'before-show', 'before-hide', 'hide', 'show'],\n    outsideClickListener: null,\n    matchMediaListener: null,\n    scrollHandler: null,\n    resizeListener: null,\n    target: null,\n    container: null,\n    menubar: null,\n    searchTimeout: null,\n    searchValue: null,\n    data() {\n        return {\n            id: this.$attrs.id,\n            focused: false,\n            focusedItemInfo: { index: -1, level: 0, parentKey: '' },\n            activeItemPath: [],\n            visible: !this.popup,\n            submenuVisible: false,\n            dirty: false,\n            query: null,\n            queryMatches: false\n        };\n    },\n    watch: {\n        '$attrs.id': function (newValue) {\n            this.id = newValue || UniqueComponentId();\n        },\n        activeItemPath(newPath) {\n            if (!this.popup) {\n                if (isNotEmpty(newPath)) {\n                    this.bindOutsideClickListener();\n                    this.bindResizeListener();\n                } else {\n                    this.unbindOutsideClickListener();\n                    this.unbindResizeListener();\n                }\n            }\n        }\n    },\n    mounted() {\n        this.id = this.id || UniqueComponentId();\n        this.bindMatchMediaListener();\n    },\n    beforeUnmount() {\n        this.unbindOutsideClickListener();\n        this.unbindResizeListener();\n        this.unbindMatchMediaListener();\n\n        if (this.scrollHandler) {\n            this.scrollHandler.destroy();\n            this.scrollHandler = null;\n        }\n\n        if (this.container && this.autoZIndex) {\n            ZIndex.clear(this.container);\n        }\n\n        this.target = null;\n        this.container = null;\n    },\n    methods: {\n        getItemProp(item, name) {\n            return item ? resolve(item[name]) : undefined;\n        },\n        getItemLabel(item) {\n            return this.getItemProp(item, 'label');\n        },\n        isItemDisabled(item) {\n            return this.getItemProp(item, 'disabled');\n        },\n        isItemVisible(item) {\n            return this.getItemProp(item, 'visible') !== false;\n        },\n        isItemGroup(item) {\n            return isNotEmpty(this.getItemProp(item, 'items'));\n        },\n        isItemSeparator(item) {\n            return this.getItemProp(item, 'separator');\n        },\n        getProccessedItemLabel(processedItem) {\n            return processedItem ? this.getItemLabel(processedItem.item) : undefined;\n        },\n        isProccessedItemGroup(processedItem) {\n            return processedItem && isNotEmpty(processedItem.items);\n        },\n        toggle(event) {\n            this.visible ? this.hide(event, true) : this.show(event);\n        },\n        show(event, isFocus) {\n            if (this.popup) {\n                this.$emit('before-show');\n                this.visible = true;\n                this.target = this.target || event.currentTarget;\n                this.relatedTarget = event.relatedTarget || null;\n            }\n\n            isFocus && focus(this.menubar);\n        },\n        hide(event, isFocus) {\n            if (this.popup) {\n                this.$emit('before-hide');\n                this.visible = false;\n            }\n\n            this.activeItemPath = [];\n            this.focusedItemInfo = { index: -1, level: 0, parentKey: '' };\n\n            isFocus && focus(this.relatedTarget || this.target || this.menubar);\n            this.dirty = false;\n        },\n        onFocus(event) {\n            this.focused = true;\n\n            if (!this.popup) {\n                this.focusedItemInfo = this.focusedItemInfo.index !== -1 ? this.focusedItemInfo : { index: this.findFirstFocusedItemIndex(), level: 0, parentKey: '' };\n            }\n\n            this.$emit('focus', event);\n        },\n        onBlur(event) {\n            this.focused = false;\n            this.focusedItemInfo = { index: -1, level: 0, parentKey: '' };\n            this.searchValue = '';\n            this.dirty = false;\n            this.$emit('blur', event);\n        },\n        onKeyDown(event) {\n            if (this.disabled) {\n                event.preventDefault();\n\n                return;\n            }\n\n            const metaKey = event.metaKey || event.ctrlKey;\n\n            switch (event.code) {\n                case 'ArrowDown':\n                    this.onArrowDownKey(event);\n                    break;\n\n                case 'ArrowUp':\n                    this.onArrowUpKey(event);\n                    break;\n\n                case 'ArrowLeft':\n                    this.onArrowLeftKey(event);\n                    break;\n\n                case 'ArrowRight':\n                    this.onArrowRightKey(event);\n                    break;\n\n                case 'Home':\n                    this.onHomeKey(event);\n                    break;\n\n                case 'End':\n                    this.onEndKey(event);\n                    break;\n\n                case 'Space':\n                    this.onSpaceKey(event);\n                    break;\n\n                case 'Enter':\n                case 'NumpadEnter':\n                    this.onEnterKey(event);\n                    break;\n\n                case 'Escape':\n                    this.onEscapeKey(event);\n                    break;\n\n                case 'Tab':\n                    this.onTabKey(event);\n                    break;\n\n                case 'PageDown':\n                case 'PageUp':\n                case 'Backspace':\n                case 'ShiftLeft':\n                case 'ShiftRight':\n                    //NOOP\n                    break;\n\n                default:\n                    if (!metaKey && isPrintableCharacter(event.key)) {\n                        this.searchItems(event, event.key);\n                    }\n\n                    break;\n            }\n        },\n        onItemChange(event, type) {\n            const { processedItem, isFocus } = event;\n\n            if (isEmpty(processedItem)) return;\n\n            const { index, key, level, parentKey, items } = processedItem;\n            const grouped = isNotEmpty(items);\n\n            const activeItemPath = this.activeItemPath.filter((p) => p.parentKey !== parentKey && p.parentKey !== key);\n\n            if (grouped) {\n                activeItemPath.push(processedItem);\n                this.submenuVisible = true;\n            }\n\n            this.focusedItemInfo = { index, level, parentKey };\n\n            grouped && (this.dirty = true);\n            isFocus && focus(this.menubar);\n\n            if (type === 'hover' && this.queryMatches) {\n                return;\n            }\n\n            this.activeItemPath = activeItemPath;\n        },\n        onOverlayClick(event) {\n            OverlayEventBus.emit('overlay-click', {\n                originalEvent: event,\n                target: this.target\n            });\n        },\n        onItemClick(event) {\n            const { originalEvent, processedItem } = event;\n            const grouped = this.isProccessedItemGroup(processedItem);\n            const root = isEmpty(processedItem.parent);\n            const selected = this.isSelected(processedItem);\n\n            if (selected) {\n                const { index, key, level, parentKey } = processedItem;\n\n                this.activeItemPath = this.activeItemPath.filter((p) => key !== p.key && key.startsWith(p.key));\n                this.focusedItemInfo = { index, level, parentKey };\n\n                this.dirty = !root;\n                focus(this.menubar);\n            } else {\n                if (grouped) {\n                    this.onItemChange(event);\n                } else {\n                    const rootProcessedItem = root ? processedItem : this.activeItemPath.find((p) => p.parentKey === '');\n\n                    this.hide(originalEvent);\n                    this.changeFocusedItemIndex(originalEvent, rootProcessedItem ? rootProcessedItem.index : -1);\n\n                    focus(this.menubar);\n                }\n            }\n        },\n        onItemMouseEnter(event) {\n            if (this.dirty) {\n                this.onItemChange(event, 'hover');\n            }\n        },\n        onItemMouseMove(event) {\n            if (this.focused) {\n                this.changeFocusedItemIndex(event, event.processedItem.index);\n            }\n        },\n        onArrowDownKey(event) {\n            const itemIndex = this.focusedItemInfo.index !== -1 ? this.findNextItemIndex(this.focusedItemInfo.index) : this.findFirstFocusedItemIndex();\n\n            this.changeFocusedItemIndex(event, itemIndex);\n            event.preventDefault();\n        },\n        onArrowUpKey(event) {\n            if (event.altKey) {\n                if (this.focusedItemInfo.index !== -1) {\n                    const processedItem = this.visibleItems[this.focusedItemInfo.index];\n                    const grouped = this.isProccessedItemGroup(processedItem);\n\n                    !grouped && this.onItemChange({ originalEvent: event, processedItem });\n                }\n\n                this.popup && this.hide(event, true);\n                event.preventDefault();\n            } else {\n                const itemIndex = this.focusedItemInfo.index !== -1 ? this.findPrevItemIndex(this.focusedItemInfo.index) : this.findLastFocusedItemIndex();\n\n                this.changeFocusedItemIndex(event, itemIndex);\n                event.preventDefault();\n            }\n        },\n        onArrowLeftKey(event) {\n            const processedItem = this.visibleItems[this.focusedItemInfo.index];\n            const parentItem = this.activeItemPath.find((p) => p.key === processedItem.parentKey);\n            const root = isEmpty(processedItem.parent);\n\n            if (!root) {\n                this.focusedItemInfo = { index: -1, parentKey: parentItem ? parentItem.parentKey : '' };\n                this.searchValue = '';\n                this.onArrowDownKey(event);\n            }\n\n            this.activeItemPath = this.activeItemPath.filter((p) => p.parentKey !== this.focusedItemInfo.parentKey);\n\n            event.preventDefault();\n        },\n        onArrowRightKey(event) {\n            const processedItem = this.visibleItems[this.focusedItemInfo.index];\n            const grouped = this.isProccessedItemGroup(processedItem);\n\n            if (grouped) {\n                this.onItemChange({ originalEvent: event, processedItem });\n                this.focusedItemInfo = { index: -1, parentKey: processedItem.key };\n                this.searchValue = '';\n                this.onArrowDownKey(event);\n            }\n\n            event.preventDefault();\n        },\n        onHomeKey(event) {\n            this.changeFocusedItemIndex(event, this.findFirstItemIndex());\n            event.preventDefault();\n        },\n        onEndKey(event) {\n            this.changeFocusedItemIndex(event, this.findLastItemIndex());\n            event.preventDefault();\n        },\n        onEnterKey(event) {\n            if (this.focusedItemInfo.index !== -1) {\n                const element = findSingle(this.menubar, `li[id=\"${`${this.focusedItemId}`}\"]`);\n                const anchorElement = element && findSingle(element, '[data-pc-section=\"itemlink\"]');\n\n                anchorElement ? anchorElement.click() : element && element.click();\n\n                if (!this.popup) {\n                    const processedItem = this.visibleItems[this.focusedItemInfo.index];\n                    const grouped = this.isProccessedItemGroup(processedItem);\n\n                    !grouped && (this.focusedItemInfo.index = this.findFirstFocusedItemIndex());\n                }\n            }\n\n            event.preventDefault();\n        },\n        onSpaceKey(event) {\n            this.onEnterKey(event);\n        },\n        onEscapeKey(event) {\n            if (this.popup || this.focusedItemInfo.level !== 0) {\n                const _focusedItemInfo = this.focusedItemInfo;\n\n                this.hide(event, false);\n                this.focusedItemInfo = { index: Number(_focusedItemInfo.parentKey.split('_')[0]), level: 0, parentKey: '' };\n                this.popup && focus(this.target);\n            }\n\n            event.preventDefault();\n        },\n        onTabKey(event) {\n            if (this.focusedItemInfo.index !== -1) {\n                const processedItem = this.visibleItems[this.focusedItemInfo.index];\n                const grouped = this.isProccessedItemGroup(processedItem);\n\n                !grouped && this.onItemChange({ originalEvent: event, processedItem });\n            }\n\n            this.hide();\n        },\n        onEnter(el) {\n            if (this.autoZIndex) {\n                ZIndex.set('menu', el, this.baseZIndex + this.$primevue.config.zIndex.menu);\n            }\n\n            addStyle(el, { position: 'absolute', top: '0', left: '0' });\n            this.alignOverlay();\n            focus(this.menubar);\n            this.scrollInView();\n        },\n        onAfterEnter() {\n            this.bindOutsideClickListener();\n            this.bindScrollListener();\n            this.bindResizeListener();\n\n            this.$emit('show');\n        },\n        onLeave() {\n            this.unbindOutsideClickListener();\n            this.unbindScrollListener();\n            this.unbindResizeListener();\n\n            this.$emit('hide');\n            this.container = null;\n            this.dirty = false;\n        },\n        onAfterLeave(el) {\n            if (this.autoZIndex) {\n                ZIndex.clear(el);\n            }\n        },\n        alignOverlay() {\n            absolutePosition(this.container, this.target);\n            const targetWidth = getOuterWidth(this.target);\n\n            if (targetWidth > getOuterWidth(this.container)) {\n                this.container.style.minWidth = getOuterWidth(this.target) + 'px';\n            }\n        },\n        bindOutsideClickListener() {\n            if (!this.outsideClickListener) {\n                this.outsideClickListener = (event) => {\n                    const isOutsideContainer = this.container && !this.container.contains(event.target);\n                    const isOutsideTarget = this.popup ? !(this.target && (this.target === event.target || this.target.contains(event.target))) : true;\n\n                    if (isOutsideContainer && isOutsideTarget) {\n                        this.hide();\n                    }\n                };\n\n                document.addEventListener('click', this.outsideClickListener);\n            }\n        },\n        unbindOutsideClickListener() {\n            if (this.outsideClickListener) {\n                document.removeEventListener('click', this.outsideClickListener);\n                this.outsideClickListener = null;\n            }\n        },\n        bindScrollListener() {\n            if (!this.scrollHandler) {\n                this.scrollHandler = new ConnectedOverlayScrollHandler(this.target, (event) => {\n                    this.hide(event, true);\n                });\n            }\n\n            this.scrollHandler.bindScrollListener();\n        },\n        unbindScrollListener() {\n            if (this.scrollHandler) {\n                this.scrollHandler.unbindScrollListener();\n            }\n        },\n        bindResizeListener() {\n            if (!this.resizeListener) {\n                this.resizeListener = (event) => {\n                    if (!isTouchDevice()) {\n                        this.hide(event, true);\n                    }\n                };\n\n                window.addEventListener('resize', this.resizeListener);\n            }\n        },\n        unbindResizeListener() {\n            if (this.resizeListener) {\n                window.removeEventListener('resize', this.resizeListener);\n                this.resizeListener = null;\n            }\n        },\n        bindMatchMediaListener() {\n            if (!this.matchMediaListener) {\n                const query = matchMedia(`(max-width: ${this.breakpoint})`);\n\n                this.query = query;\n                this.queryMatches = query.matches;\n\n                this.matchMediaListener = () => {\n                    this.queryMatches = query.matches;\n                };\n\n                this.query.addEventListener('change', this.matchMediaListener);\n            }\n        },\n        unbindMatchMediaListener() {\n            if (this.matchMediaListener) {\n                this.query.removeEventListener('change', this.matchMediaListener);\n                this.matchMediaListener = null;\n            }\n        },\n        isItemMatched(processedItem) {\n            return this.isValidItem(processedItem) && this.getProccessedItemLabel(processedItem)?.toLocaleLowerCase().startsWith(this.searchValue.toLocaleLowerCase());\n        },\n        isValidItem(processedItem) {\n            return !!processedItem && !this.isItemDisabled(processedItem.item) && !this.isItemSeparator(processedItem.item) && this.isItemVisible(processedItem.item);\n        },\n        isValidSelectedItem(processedItem) {\n            return this.isValidItem(processedItem) && this.isSelected(processedItem);\n        },\n        isSelected(processedItem) {\n            return this.activeItemPath.some((p) => p.key === processedItem.key);\n        },\n        findFirstItemIndex() {\n            return this.visibleItems.findIndex((processedItem) => this.isValidItem(processedItem));\n        },\n        findLastItemIndex() {\n            return findLastIndex(this.visibleItems, (processedItem) => this.isValidItem(processedItem));\n        },\n        findNextItemIndex(index) {\n            const matchedItemIndex = index < this.visibleItems.length - 1 ? this.visibleItems.slice(index + 1).findIndex((processedItem) => this.isValidItem(processedItem)) : -1;\n\n            return matchedItemIndex > -1 ? matchedItemIndex + index + 1 : index;\n        },\n        findPrevItemIndex(index) {\n            const matchedItemIndex = index > 0 ? findLastIndex(this.visibleItems.slice(0, index), (processedItem) => this.isValidItem(processedItem)) : -1;\n\n            return matchedItemIndex > -1 ? matchedItemIndex : index;\n        },\n        findSelectedItemIndex() {\n            return this.visibleItems.findIndex((processedItem) => this.isValidSelectedItem(processedItem));\n        },\n        findFirstFocusedItemIndex() {\n            const selectedIndex = this.findSelectedItemIndex();\n\n            return selectedIndex < 0 ? this.findFirstItemIndex() : selectedIndex;\n        },\n        findLastFocusedItemIndex() {\n            const selectedIndex = this.findSelectedItemIndex();\n\n            return selectedIndex < 0 ? this.findLastItemIndex() : selectedIndex;\n        },\n        searchItems(event, char) {\n            this.searchValue = (this.searchValue || '') + char;\n\n            let itemIndex = -1;\n            let matched = false;\n\n            if (this.focusedItemInfo.index !== -1) {\n                itemIndex = this.visibleItems.slice(this.focusedItemInfo.index).findIndex((processedItem) => this.isItemMatched(processedItem));\n                itemIndex = itemIndex === -1 ? this.visibleItems.slice(0, this.focusedItemInfo.index).findIndex((processedItem) => this.isItemMatched(processedItem)) : itemIndex + this.focusedItemInfo.index;\n            } else {\n                itemIndex = this.visibleItems.findIndex((processedItem) => this.isItemMatched(processedItem));\n            }\n\n            if (itemIndex !== -1) {\n                matched = true;\n            }\n\n            if (itemIndex === -1 && this.focusedItemInfo.index === -1) {\n                itemIndex = this.findFirstFocusedItemIndex();\n            }\n\n            if (itemIndex !== -1) {\n                this.changeFocusedItemIndex(event, itemIndex);\n            }\n\n            if (this.searchTimeout) {\n                clearTimeout(this.searchTimeout);\n            }\n\n            this.searchTimeout = setTimeout(() => {\n                this.searchValue = '';\n                this.searchTimeout = null;\n            }, 500);\n\n            return matched;\n        },\n        changeFocusedItemIndex(event, index) {\n            if (this.focusedItemInfo.index !== index) {\n                this.focusedItemInfo.index = index;\n                this.scrollInView();\n            }\n        },\n        scrollInView(index = -1) {\n            const id = index !== -1 ? `${this.id}_${index}` : this.focusedItemId;\n            const element = findSingle(this.menubar, `li[id=\"${id}\"]`);\n\n            if (element) {\n                element.scrollIntoView && element.scrollIntoView({ block: 'nearest', inline: 'start' });\n            }\n        },\n        createProcessedItems(items, level = 0, parent = {}, parentKey = '') {\n            const processedItems = [];\n\n            items &&\n                items.forEach((item, index) => {\n                    const key = (parentKey !== '' ? parentKey + '_' : '') + index;\n                    const newItem = {\n                        item,\n                        index,\n                        level,\n                        key,\n                        parent,\n                        parentKey\n                    };\n\n                    newItem['items'] = this.createProcessedItems(item.items, level + 1, newItem, key);\n                    processedItems.push(newItem);\n                });\n\n            return processedItems;\n        },\n        containerRef(el) {\n            this.container = el;\n        },\n        menubarRef(el) {\n            this.menubar = el ? el.$el : undefined;\n        }\n    },\n    computed: {\n        processedItems() {\n            return this.createProcessedItems(this.model || []);\n        },\n        visibleItems() {\n            const processedItem = this.activeItemPath.find((p) => p.key === this.focusedItemInfo.parentKey);\n\n            return processedItem ? processedItem.items : this.processedItems;\n        },\n        focusedItemId() {\n            return this.focusedItemInfo.index !== -1 ? `${this.id}${isNotEmpty(this.focusedItemInfo.parentKey) ? '_' + this.focusedItemInfo.parentKey : ''}_${this.focusedItemInfo.index}` : null;\n        }\n    },\n    components: {\n        TieredMenuSub: TieredMenuSub,\n        Portal: Portal\n    }\n};\n</script>\n","<template>\n    <Portal :appendTo=\"appendTo\" :disabled=\"!popup\">\n        <transition name=\"p-connected-overlay\" @enter=\"onEnter\" @after-enter=\"onAfterEnter\" @leave=\"onLeave\" @after-leave=\"onAfterLeave\" v-bind=\"ptm('transition')\">\n            <div v-if=\"visible\" :ref=\"containerRef\" :id=\"id\" :class=\"cx('root')\" @click=\"onOverlayClick\" v-bind=\"ptmi('root')\">\n                <div v-if=\"$slots.start\" :class=\"cx('start')\" v-bind=\"ptm('start')\">\n                    <slot name=\"start\"></slot>\n                </div>\n                <TieredMenuSub\n                    :ref=\"menubarRef\"\n                    :id=\"id + '_list'\"\n                    :class=\"cx('rootList')\"\n                    :tabindex=\"!disabled ? tabindex : -1\"\n                    role=\"menubar\"\n                    :aria-label=\"ariaLabel\"\n                    :aria-labelledby=\"ariaLabelledby\"\n                    :aria-disabled=\"disabled || undefined\"\n                    aria-orientation=\"vertical\"\n                    :aria-activedescendant=\"focused ? focusedItemId : undefined\"\n                    :menuId=\"id\"\n                    :focusedItemId=\"focused ? focusedItemId : undefined\"\n                    :items=\"processedItems\"\n                    :templates=\"$slots\"\n                    :activeItemPath=\"activeItemPath\"\n                    :level=\"0\"\n                    :visible=\"submenuVisible\"\n                    :pt=\"pt\"\n                    :unstyled=\"unstyled\"\n                    @focus=\"onFocus\"\n                    @blur=\"onBlur\"\n                    @keydown=\"onKeyDown\"\n                    @item-click=\"onItemClick\"\n                    @item-mouseenter=\"onItemMouseEnter\"\n                    @item-mousemove=\"onItemMouseMove\"\n                    v-bind=\"ptm('rootList')\"\n                />\n                <div v-if=\"$slots.end\" :class=\"cx('end')\" v-bind=\"ptm('end')\">\n                    <slot name=\"end\"></slot>\n                </div>\n            </div>\n        </transition>\n    </Portal>\n</template>\n\n<script>\nimport { absolutePosition, addStyle, findSingle, focus, getOuterWidth, isTouchDevice } from '@primeuix/utils/dom';\nimport { findLastIndex, isEmpty, isNotEmpty, isPrintableCharacter, resolve } from '@primeuix/utils/object';\nimport { ZIndex } from '@primeuix/utils/zindex';\nimport { ConnectedOverlayScrollHandler, UniqueComponentId } from '@primevue/core/utils';\nimport OverlayEventBus from 'primevue/overlayeventbus';\nimport Portal from 'primevue/portal';\nimport BaseTieredMenu from './BaseTieredMenu.vue';\nimport TieredMenuSub from './TieredMenuSub.vue';\n\nexport default {\n    name: 'TieredMenu',\n    extends: BaseTieredMenu,\n    inheritAttrs: false,\n    emits: ['focus', 'blur', 'before-show', 'before-hide', 'hide', 'show'],\n    outsideClickListener: null,\n    matchMediaListener: null,\n    scrollHandler: null,\n    resizeListener: null,\n    target: null,\n    container: null,\n    menubar: null,\n    searchTimeout: null,\n    searchValue: null,\n    data() {\n        return {\n            id: this.$attrs.id,\n            focused: false,\n            focusedItemInfo: { index: -1, level: 0, parentKey: '' },\n            activeItemPath: [],\n            visible: !this.popup,\n            submenuVisible: false,\n            dirty: false,\n            query: null,\n            queryMatches: false\n        };\n    },\n    watch: {\n        '$attrs.id': function (newValue) {\n            this.id = newValue || UniqueComponentId();\n        },\n        activeItemPath(newPath) {\n            if (!this.popup) {\n                if (isNotEmpty(newPath)) {\n                    this.bindOutsideClickListener();\n                    this.bindResizeListener();\n                } else {\n                    this.unbindOutsideClickListener();\n                    this.unbindResizeListener();\n                }\n            }\n        }\n    },\n    mounted() {\n        this.id = this.id || UniqueComponentId();\n        this.bindMatchMediaListener();\n    },\n    beforeUnmount() {\n        this.unbindOutsideClickListener();\n        this.unbindResizeListener();\n        this.unbindMatchMediaListener();\n\n        if (this.scrollHandler) {\n            this.scrollHandler.destroy();\n            this.scrollHandler = null;\n        }\n\n        if (this.container && this.autoZIndex) {\n            ZIndex.clear(this.container);\n        }\n\n        this.target = null;\n        this.container = null;\n    },\n    methods: {\n        getItemProp(item, name) {\n            return item ? resolve(item[name]) : undefined;\n        },\n        getItemLabel(item) {\n            return this.getItemProp(item, 'label');\n        },\n        isItemDisabled(item) {\n            return this.getItemProp(item, 'disabled');\n        },\n        isItemVisible(item) {\n            return this.getItemProp(item, 'visible') !== false;\n        },\n        isItemGroup(item) {\n            return isNotEmpty(this.getItemProp(item, 'items'));\n        },\n        isItemSeparator(item) {\n            return this.getItemProp(item, 'separator');\n        },\n        getProccessedItemLabel(processedItem) {\n            return processedItem ? this.getItemLabel(processedItem.item) : undefined;\n        },\n        isProccessedItemGroup(processedItem) {\n            return processedItem && isNotEmpty(processedItem.items);\n        },\n        toggle(event) {\n            this.visible ? this.hide(event, true) : this.show(event);\n        },\n        show(event, isFocus) {\n            if (this.popup) {\n                this.$emit('before-show');\n                this.visible = true;\n                this.target = this.target || event.currentTarget;\n                this.relatedTarget = event.relatedTarget || null;\n            }\n\n            isFocus && focus(this.menubar);\n        },\n        hide(event, isFocus) {\n            if (this.popup) {\n                this.$emit('before-hide');\n                this.visible = false;\n            }\n\n            this.activeItemPath = [];\n            this.focusedItemInfo = { index: -1, level: 0, parentKey: '' };\n\n            isFocus && focus(this.relatedTarget || this.target || this.menubar);\n            this.dirty = false;\n        },\n        onFocus(event) {\n            this.focused = true;\n\n            if (!this.popup) {\n                this.focusedItemInfo = this.focusedItemInfo.index !== -1 ? this.focusedItemInfo : { index: this.findFirstFocusedItemIndex(), level: 0, parentKey: '' };\n            }\n\n            this.$emit('focus', event);\n        },\n        onBlur(event) {\n            this.focused = false;\n            this.focusedItemInfo = { index: -1, level: 0, parentKey: '' };\n            this.searchValue = '';\n            this.dirty = false;\n            this.$emit('blur', event);\n        },\n        onKeyDown(event) {\n            if (this.disabled) {\n                event.preventDefault();\n\n                return;\n            }\n\n            const metaKey = event.metaKey || event.ctrlKey;\n\n            switch (event.code) {\n                case 'ArrowDown':\n                    this.onArrowDownKey(event);\n                    break;\n\n                case 'ArrowUp':\n                    this.onArrowUpKey(event);\n                    break;\n\n                case 'ArrowLeft':\n                    this.onArrowLeftKey(event);\n                    break;\n\n                case 'ArrowRight':\n                    this.onArrowRightKey(event);\n                    break;\n\n                case 'Home':\n                    this.onHomeKey(event);\n                    break;\n\n                case 'End':\n                    this.onEndKey(event);\n                    break;\n\n                case 'Space':\n                    this.onSpaceKey(event);\n                    break;\n\n                case 'Enter':\n                case 'NumpadEnter':\n                    this.onEnterKey(event);\n                    break;\n\n                case 'Escape':\n                    this.onEscapeKey(event);\n                    break;\n\n                case 'Tab':\n                    this.onTabKey(event);\n                    break;\n\n                case 'PageDown':\n                case 'PageUp':\n                case 'Backspace':\n                case 'ShiftLeft':\n                case 'ShiftRight':\n                    //NOOP\n                    break;\n\n                default:\n                    if (!metaKey && isPrintableCharacter(event.key)) {\n                        this.searchItems(event, event.key);\n                    }\n\n                    break;\n            }\n        },\n        onItemChange(event, type) {\n            const { processedItem, isFocus } = event;\n\n            if (isEmpty(processedItem)) return;\n\n            const { index, key, level, parentKey, items } = processedItem;\n            const grouped = isNotEmpty(items);\n\n            const activeItemPath = this.activeItemPath.filter((p) => p.parentKey !== parentKey && p.parentKey !== key);\n\n            if (grouped) {\n                activeItemPath.push(processedItem);\n                this.submenuVisible = true;\n            }\n\n            this.focusedItemInfo = { index, level, parentKey };\n\n            grouped && (this.dirty = true);\n            isFocus && focus(this.menubar);\n\n            if (type === 'hover' && this.queryMatches) {\n                return;\n            }\n\n            this.activeItemPath = activeItemPath;\n        },\n        onOverlayClick(event) {\n            OverlayEventBus.emit('overlay-click', {\n                originalEvent: event,\n                target: this.target\n            });\n        },\n        onItemClick(event) {\n            const { originalEvent, processedItem } = event;\n            const grouped = this.isProccessedItemGroup(processedItem);\n            const root = isEmpty(processedItem.parent);\n            const selected = this.isSelected(processedItem);\n\n            if (selected) {\n                const { index, key, level, parentKey } = processedItem;\n\n                this.activeItemPath = this.activeItemPath.filter((p) => key !== p.key && key.startsWith(p.key));\n                this.focusedItemInfo = { index, level, parentKey };\n\n                this.dirty = !root;\n                focus(this.menubar);\n            } else {\n                if (grouped) {\n                    this.onItemChange(event);\n                } else {\n                    const rootProcessedItem = root ? processedItem : this.activeItemPath.find((p) => p.parentKey === '');\n\n                    this.hide(originalEvent);\n                    this.changeFocusedItemIndex(originalEvent, rootProcessedItem ? rootProcessedItem.index : -1);\n\n                    focus(this.menubar);\n                }\n            }\n        },\n        onItemMouseEnter(event) {\n            if (this.dirty) {\n                this.onItemChange(event, 'hover');\n            }\n        },\n        onItemMouseMove(event) {\n            if (this.focused) {\n                this.changeFocusedItemIndex(event, event.processedItem.index);\n            }\n        },\n        onArrowDownKey(event) {\n            const itemIndex = this.focusedItemInfo.index !== -1 ? this.findNextItemIndex(this.focusedItemInfo.index) : this.findFirstFocusedItemIndex();\n\n            this.changeFocusedItemIndex(event, itemIndex);\n            event.preventDefault();\n        },\n        onArrowUpKey(event) {\n            if (event.altKey) {\n                if (this.focusedItemInfo.index !== -1) {\n                    const processedItem = this.visibleItems[this.focusedItemInfo.index];\n                    const grouped = this.isProccessedItemGroup(processedItem);\n\n                    !grouped && this.onItemChange({ originalEvent: event, processedItem });\n                }\n\n                this.popup && this.hide(event, true);\n                event.preventDefault();\n            } else {\n                const itemIndex = this.focusedItemInfo.index !== -1 ? this.findPrevItemIndex(this.focusedItemInfo.index) : this.findLastFocusedItemIndex();\n\n                this.changeFocusedItemIndex(event, itemIndex);\n                event.preventDefault();\n            }\n        },\n        onArrowLeftKey(event) {\n            const processedItem = this.visibleItems[this.focusedItemInfo.index];\n            const parentItem = this.activeItemPath.find((p) => p.key === processedItem.parentKey);\n            const root = isEmpty(processedItem.parent);\n\n            if (!root) {\n                this.focusedItemInfo = { index: -1, parentKey: parentItem ? parentItem.parentKey : '' };\n                this.searchValue = '';\n                this.onArrowDownKey(event);\n            }\n\n            this.activeItemPath = this.activeItemPath.filter((p) => p.parentKey !== this.focusedItemInfo.parentKey);\n\n            event.preventDefault();\n        },\n        onArrowRightKey(event) {\n            const processedItem = this.visibleItems[this.focusedItemInfo.index];\n            const grouped = this.isProccessedItemGroup(processedItem);\n\n            if (grouped) {\n                this.onItemChange({ originalEvent: event, processedItem });\n                this.focusedItemInfo = { index: -1, parentKey: processedItem.key };\n                this.searchValue = '';\n                this.onArrowDownKey(event);\n            }\n\n            event.preventDefault();\n        },\n        onHomeKey(event) {\n            this.changeFocusedItemIndex(event, this.findFirstItemIndex());\n            event.preventDefault();\n        },\n        onEndKey(event) {\n            this.changeFocusedItemIndex(event, this.findLastItemIndex());\n            event.preventDefault();\n        },\n        onEnterKey(event) {\n            if (this.focusedItemInfo.index !== -1) {\n                const element = findSingle(this.menubar, `li[id=\"${`${this.focusedItemId}`}\"]`);\n                const anchorElement = element && findSingle(element, '[data-pc-section=\"itemlink\"]');\n\n                anchorElement ? anchorElement.click() : element && element.click();\n\n                if (!this.popup) {\n                    const processedItem = this.visibleItems[this.focusedItemInfo.index];\n                    const grouped = this.isProccessedItemGroup(processedItem);\n\n                    !grouped && (this.focusedItemInfo.index = this.findFirstFocusedItemIndex());\n                }\n            }\n\n            event.preventDefault();\n        },\n        onSpaceKey(event) {\n            this.onEnterKey(event);\n        },\n        onEscapeKey(event) {\n            if (this.popup || this.focusedItemInfo.level !== 0) {\n                const _focusedItemInfo = this.focusedItemInfo;\n\n                this.hide(event, false);\n                this.focusedItemInfo = { index: Number(_focusedItemInfo.parentKey.split('_')[0]), level: 0, parentKey: '' };\n                this.popup && focus(this.target);\n            }\n\n            event.preventDefault();\n        },\n        onTabKey(event) {\n            if (this.focusedItemInfo.index !== -1) {\n                const processedItem = this.visibleItems[this.focusedItemInfo.index];\n                const grouped = this.isProccessedItemGroup(processedItem);\n\n                !grouped && this.onItemChange({ originalEvent: event, processedItem });\n            }\n\n            this.hide();\n        },\n        onEnter(el) {\n            if (this.autoZIndex) {\n                ZIndex.set('menu', el, this.baseZIndex + this.$primevue.config.zIndex.menu);\n            }\n\n            addStyle(el, { position: 'absolute', top: '0', left: '0' });\n            this.alignOverlay();\n            focus(this.menubar);\n            this.scrollInView();\n        },\n        onAfterEnter() {\n            this.bindOutsideClickListener();\n            this.bindScrollListener();\n            this.bindResizeListener();\n\n            this.$emit('show');\n        },\n        onLeave() {\n            this.unbindOutsideClickListener();\n            this.unbindScrollListener();\n            this.unbindResizeListener();\n\n            this.$emit('hide');\n            this.container = null;\n            this.dirty = false;\n        },\n        onAfterLeave(el) {\n            if (this.autoZIndex) {\n                ZIndex.clear(el);\n            }\n        },\n        alignOverlay() {\n            absolutePosition(this.container, this.target);\n            const targetWidth = getOuterWidth(this.target);\n\n            if (targetWidth > getOuterWidth(this.container)) {\n                this.container.style.minWidth = getOuterWidth(this.target) + 'px';\n            }\n        },\n        bindOutsideClickListener() {\n            if (!this.outsideClickListener) {\n                this.outsideClickListener = (event) => {\n                    const isOutsideContainer = this.container && !this.container.contains(event.target);\n                    const isOutsideTarget = this.popup ? !(this.target && (this.target === event.target || this.target.contains(event.target))) : true;\n\n                    if (isOutsideContainer && isOutsideTarget) {\n                        this.hide();\n                    }\n                };\n\n                document.addEventListener('click', this.outsideClickListener);\n            }\n        },\n        unbindOutsideClickListener() {\n            if (this.outsideClickListener) {\n                document.removeEventListener('click', this.outsideClickListener);\n                this.outsideClickListener = null;\n            }\n        },\n        bindScrollListener() {\n            if (!this.scrollHandler) {\n                this.scrollHandler = new ConnectedOverlayScrollHandler(this.target, (event) => {\n                    this.hide(event, true);\n                });\n            }\n\n            this.scrollHandler.bindScrollListener();\n        },\n        unbindScrollListener() {\n            if (this.scrollHandler) {\n                this.scrollHandler.unbindScrollListener();\n            }\n        },\n        bindResizeListener() {\n            if (!this.resizeListener) {\n                this.resizeListener = (event) => {\n                    if (!isTouchDevice()) {\n                        this.hide(event, true);\n                    }\n                };\n\n                window.addEventListener('resize', this.resizeListener);\n            }\n        },\n        unbindResizeListener() {\n            if (this.resizeListener) {\n                window.removeEventListener('resize', this.resizeListener);\n                this.resizeListener = null;\n            }\n        },\n        bindMatchMediaListener() {\n            if (!this.matchMediaListener) {\n                const query = matchMedia(`(max-width: ${this.breakpoint})`);\n\n                this.query = query;\n                this.queryMatches = query.matches;\n\n                this.matchMediaListener = () => {\n                    this.queryMatches = query.matches;\n                };\n\n                this.query.addEventListener('change', this.matchMediaListener);\n            }\n        },\n        unbindMatchMediaListener() {\n            if (this.matchMediaListener) {\n                this.query.removeEventListener('change', this.matchMediaListener);\n                this.matchMediaListener = null;\n            }\n        },\n        isItemMatched(processedItem) {\n            return this.isValidItem(processedItem) && this.getProccessedItemLabel(processedItem)?.toLocaleLowerCase().startsWith(this.searchValue.toLocaleLowerCase());\n        },\n        isValidItem(processedItem) {\n            return !!processedItem && !this.isItemDisabled(processedItem.item) && !this.isItemSeparator(processedItem.item) && this.isItemVisible(processedItem.item);\n        },\n        isValidSelectedItem(processedItem) {\n            return this.isValidItem(processedItem) && this.isSelected(processedItem);\n        },\n        isSelected(processedItem) {\n            return this.activeItemPath.some((p) => p.key === processedItem.key);\n        },\n        findFirstItemIndex() {\n            return this.visibleItems.findIndex((processedItem) => this.isValidItem(processedItem));\n        },\n        findLastItemIndex() {\n            return findLastIndex(this.visibleItems, (processedItem) => this.isValidItem(processedItem));\n        },\n        findNextItemIndex(index) {\n            const matchedItemIndex = index < this.visibleItems.length - 1 ? this.visibleItems.slice(index + 1).findIndex((processedItem) => this.isValidItem(processedItem)) : -1;\n\n            return matchedItemIndex > -1 ? matchedItemIndex + index + 1 : index;\n        },\n        findPrevItemIndex(index) {\n            const matchedItemIndex = index > 0 ? findLastIndex(this.visibleItems.slice(0, index), (processedItem) => this.isValidItem(processedItem)) : -1;\n\n            return matchedItemIndex > -1 ? matchedItemIndex : index;\n        },\n        findSelectedItemIndex() {\n            return this.visibleItems.findIndex((processedItem) => this.isValidSelectedItem(processedItem));\n        },\n        findFirstFocusedItemIndex() {\n            const selectedIndex = this.findSelectedItemIndex();\n\n            return selectedIndex < 0 ? this.findFirstItemIndex() : selectedIndex;\n        },\n        findLastFocusedItemIndex() {\n            const selectedIndex = this.findSelectedItemIndex();\n\n            return selectedIndex < 0 ? this.findLastItemIndex() : selectedIndex;\n        },\n        searchItems(event, char) {\n            this.searchValue = (this.searchValue || '') + char;\n\n            let itemIndex = -1;\n            let matched = false;\n\n            if (this.focusedItemInfo.index !== -1) {\n                itemIndex = this.visibleItems.slice(this.focusedItemInfo.index).findIndex((processedItem) => this.isItemMatched(processedItem));\n                itemIndex = itemIndex === -1 ? this.visibleItems.slice(0, this.focusedItemInfo.index).findIndex((processedItem) => this.isItemMatched(processedItem)) : itemIndex + this.focusedItemInfo.index;\n            } else {\n                itemIndex = this.visibleItems.findIndex((processedItem) => this.isItemMatched(processedItem));\n            }\n\n            if (itemIndex !== -1) {\n                matched = true;\n            }\n\n            if (itemIndex === -1 && this.focusedItemInfo.index === -1) {\n                itemIndex = this.findFirstFocusedItemIndex();\n            }\n\n            if (itemIndex !== -1) {\n                this.changeFocusedItemIndex(event, itemIndex);\n            }\n\n            if (this.searchTimeout) {\n                clearTimeout(this.searchTimeout);\n            }\n\n            this.searchTimeout = setTimeout(() => {\n                this.searchValue = '';\n                this.searchTimeout = null;\n            }, 500);\n\n            return matched;\n        },\n        changeFocusedItemIndex(event, index) {\n            if (this.focusedItemInfo.index !== index) {\n                this.focusedItemInfo.index = index;\n                this.scrollInView();\n            }\n        },\n        scrollInView(index = -1) {\n            const id = index !== -1 ? `${this.id}_${index}` : this.focusedItemId;\n            const element = findSingle(this.menubar, `li[id=\"${id}\"]`);\n\n            if (element) {\n                element.scrollIntoView && element.scrollIntoView({ block: 'nearest', inline: 'start' });\n            }\n        },\n        createProcessedItems(items, level = 0, parent = {}, parentKey = '') {\n            const processedItems = [];\n\n            items &&\n                items.forEach((item, index) => {\n                    const key = (parentKey !== '' ? parentKey + '_' : '') + index;\n                    const newItem = {\n                        item,\n                        index,\n                        level,\n                        key,\n                        parent,\n                        parentKey\n                    };\n\n                    newItem['items'] = this.createProcessedItems(item.items, level + 1, newItem, key);\n                    processedItems.push(newItem);\n                });\n\n            return processedItems;\n        },\n        containerRef(el) {\n            this.container = el;\n        },\n        menubarRef(el) {\n            this.menubar = el ? el.$el : undefined;\n        }\n    },\n    computed: {\n        processedItems() {\n            return this.createProcessedItems(this.model || []);\n        },\n        visibleItems() {\n            const processedItem = this.activeItemPath.find((p) => p.key === this.focusedItemInfo.parentKey);\n\n            return processedItem ? processedItem.items : this.processedItems;\n        },\n        focusedItemId() {\n            return this.focusedItemInfo.index !== -1 ? `${this.id}${isNotEmpty(this.focusedItemInfo.parentKey) ? '_' + this.focusedItemInfo.parentKey : ''}_${this.focusedItemInfo.index}` : null;\n        }\n    },\n    components: {\n        TieredMenuSub: TieredMenuSub,\n        Portal: Portal\n    }\n};\n</script>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}