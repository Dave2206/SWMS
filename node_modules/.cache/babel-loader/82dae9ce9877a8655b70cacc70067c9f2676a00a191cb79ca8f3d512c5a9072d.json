{"ast":null,"code":"import \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.for-each.js\";\nimport { isAttributeEquals } from '@primeuix/utils/dom';\nimport BaseDirective from '@primevue/core/basedirective';\nimport KeyFilterStyle from 'primevue/keyfilter/style';\nvar BaseKeyFilter = BaseDirective.extend({\n  style: KeyFilterStyle\n});\nfunction _toConsumableArray(r) {\n  return _arrayWithoutHoles(r) || _iterableToArray(r) || _unsupportedIterableToArray(r) || _nonIterableSpread();\n}\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _unsupportedIterableToArray(r, a) {\n  if (r) {\n    if (\"string\" == typeof r) return _arrayLikeToArray(r, a);\n    var t = {}.toString.call(r).slice(8, -1);\n    return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0;\n  }\n}\nfunction _iterableToArray(r) {\n  if (\"undefined\" != typeof Symbol && null != r[Symbol.iterator] || null != r[\"@@iterator\"]) return Array.from(r);\n}\nfunction _arrayWithoutHoles(r) {\n  if (Array.isArray(r)) return _arrayLikeToArray(r);\n}\nfunction _arrayLikeToArray(r, a) {\n  (null == a || a > r.length) && (a = r.length);\n  for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];\n  return n;\n}\nfunction _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}\nvar KeyFilter = BaseKeyFilter.extend('keyfilter', {\n  beforeMount: function beforeMount(el, options) {\n    var target = this.getTarget(el);\n    if (!target) return;\n    target.$_pkeyfilterModifier = this.getModifiers(options);\n    if (_typeof(options.value)) {\n      var _options$value, _options$value2;\n      target.$_pkeyfilterPattern = ((_options$value = options.value) === null || _options$value === void 0 ? void 0 : _options$value.pattern) || options.value;\n      target.$_pkeyfilterValidateOnly = ((_options$value2 = options.value) === null || _options$value2 === void 0 ? void 0 : _options$value2.validateOnly) || false;\n    }\n    this.bindEvents(target);\n    target.setAttribute('data-pd-keyfilter', true);\n  },\n  updated: function updated(el, options) {\n    var target = this.getTarget(el);\n    if (!target) return;\n    target.$_pkeyfilterModifier = this.getModifiers(options);\n    this.unbindEvents(el, options);\n    if (_typeof(options.value)) {\n      var _options$value3, _options$value4;\n      target.$_pkeyfilterPattern = ((_options$value3 = options.value) === null || _options$value3 === void 0 ? void 0 : _options$value3.pattern) || options.value;\n      target.$_pkeyfilterValidateOnly = ((_options$value4 = options.value) === null || _options$value4 === void 0 ? void 0 : _options$value4.validateOnly) || false;\n    }\n    this.bindEvents(target);\n  },\n  unmounted: function unmounted(el, options) {\n    this.unbindEvents(el, options);\n  },\n  DEFAULT_PATTERNS: {\n    pint: /[\\d]/,\n    \"int\": /[\\d\\-]/,\n    pnum: /[\\d\\.]/,\n    money: /[\\d\\.\\s,]/,\n    num: /[\\d\\-\\.]/,\n    hex: /[0-9a-f]/i,\n    email: /[a-z0-9_\\.\\-@]/i,\n    alpha: /[a-z_]/i,\n    alphanum: /[a-z0-9_]/i\n  },\n  methods: {\n    getTarget: function getTarget(el) {\n      return isAttributeEquals(el, 'data-pc-name', 'inputtext') || isAttributeEquals(el, 'data-pc-name', 'textarea') ? el : null;\n    },\n    getModifiers: function getModifiers(options) {\n      if (options.modifiers && Object.keys(options.modifiers).length) {\n        return Object.keys(options.modifiers)[Object.keys.length - 1];\n      }\n      return '';\n    },\n    getRegex: function getRegex(target) {\n      return target.$_pkeyfilterPattern ? target.$_pkeyfilterPattern : target.$_pkeyfilterModifier ? this.DEFAULT_PATTERNS[target.$_pkeyfilterModifier] : /./;\n    },\n    bindEvents: function bindEvents(el) {\n      var _this = this;\n      el.$_keyfilterKeydownEvent = function (event) {\n        return _this.onKeydown(event, el);\n      };\n      el.$_keyfilterPasteEvent = function (event) {\n        return _this.onPaste(event, el);\n      };\n      el.addEventListener('keypress', el.$_keyfilterKeydownEvent);\n      el.addEventListener('paste', el.$_keyfilterPasteEvent);\n    },\n    unbindEvents: function unbindEvents(el) {\n      el.removeEventListener('keypress', el.$_keyfilterKeydownEvent);\n      el.removeEventListener('paste', el.$_keyfilterPasteEvent);\n      el.$_keyfilterKeydownEvent = null;\n      el.$_keyfilterPasteEvent = null;\n    },\n    onKeydown: function onKeydown(event, target) {\n      if (event.ctrlKey || event.altKey || event.metaKey || event.key === 'Tab') {\n        return;\n      }\n      var regex = this.getRegex(target);\n      if (regex === '') {\n        return;\n      }\n      var testKey = \"\".concat(event.key);\n      if (target.$_pkeyfilterValidateOnly) {\n        testKey = \"\".concat(event.target.value).concat(event.key);\n      }\n      if (!regex.test(testKey)) {\n        // runs before @update:modelValue emit\n        event.preventDefault();\n      }\n    },\n    onPaste: function onPaste(event, target) {\n      var regex = this.getRegex(target);\n      if (regex === '') {\n        return;\n      }\n      var clipboard = event.clipboardData.getData('text');\n      var testKey = '';\n\n      // loop over each letter pasted and if any fail prevent the paste\n      _toConsumableArray(clipboard).forEach(function (c) {\n        if (target.$_pkeyfilterValidateOnly) {\n          testKey += c;\n        } else {\n          testKey = c;\n        }\n        if (!regex.test(testKey)) {\n          event.preventDefault();\n          return false;\n        }\n      });\n    }\n  }\n});\nexport { KeyFilter as default };","map":{"version":3,"names":["BaseKeyFilter","BaseDirective","extend","style","KeyFilterStyle","KeyFilter","beforeMount","el","options","target","getTarget","$_pkeyfilterModifier","getModifiers","_typeof","value","_options$value","_options$value2","$_pkeyfilterPattern","pattern","$_pkeyfilterValidateOnly","validateOnly","bindEvents","setAttribute","updated","unbindEvents","_options$value3","_options$value4","unmounted","DEFAULT_PATTERNS","pint","pnum","money","num","hex","email","alpha","alphanum","methods","isAttributeEquals","modifiers","Object","keys","length","getRegex","_this","$_keyfilterKeydownEvent","event","onKeydown","$_keyfilterPasteEvent","onPaste","addEventListener","removeEventListener","ctrlKey","altKey","metaKey","key","regex","testKey","concat","test","preventDefault","clipboard","clipboardData","getData","_toConsumableArray","forEach","c"],"sources":["../../src/keyfilter/BaseKeyFilter.js","../../src/keyfilter/KeyFilter.js"],"sourcesContent":["import BaseDirective from '@primevue/core/basedirective';\nimport KeyFilterStyle from 'primevue/keyfilter/style';\n\nconst BaseKeyFilter = BaseDirective.extend({\n    style: KeyFilterStyle\n});\n\nexport default BaseKeyFilter;\n","import { isAttributeEquals } from '@primeuix/utils/dom';\nimport BaseKeyFilter from './BaseKeyFilter';\n\nconst KeyFilter = BaseKeyFilter.extend('keyfilter', {\n    beforeMount(el, options) {\n        let target = this.getTarget(el);\n\n        if (!target) return;\n\n        target.$_pkeyfilterModifier = this.getModifiers(options);\n\n        if (typeof options.value) {\n            target.$_pkeyfilterPattern = options.value?.pattern || options.value;\n            target.$_pkeyfilterValidateOnly = options.value?.validateOnly || false;\n        }\n\n        this.bindEvents(target);\n\n        target.setAttribute('data-pd-keyfilter', true);\n    },\n    updated(el, options) {\n        let target = this.getTarget(el);\n\n        if (!target) return;\n\n        target.$_pkeyfilterModifier = this.getModifiers(options);\n        this.unbindEvents(el, options);\n\n        if (typeof options.value) {\n            target.$_pkeyfilterPattern = options.value?.pattern || options.value;\n            target.$_pkeyfilterValidateOnly = options.value?.validateOnly || false;\n        }\n\n        this.bindEvents(target);\n    },\n    unmounted(el, options) {\n        this.unbindEvents(el, options);\n    },\n    DEFAULT_PATTERNS: {\n        pint: /[\\d]/,\n        int: /[\\d\\-]/,\n        pnum: /[\\d\\.]/,\n        money: /[\\d\\.\\s,]/,\n        num: /[\\d\\-\\.]/,\n        hex: /[0-9a-f]/i,\n        email: /[a-z0-9_\\.\\-@]/i,\n        alpha: /[a-z_]/i,\n        alphanum: /[a-z0-9_]/i\n    },\n    methods: {\n        getTarget(el) {\n            return isAttributeEquals(el, 'data-pc-name', 'inputtext') || isAttributeEquals(el, 'data-pc-name', 'textarea') ? el : null;\n        },\n        getModifiers(options) {\n            if (options.modifiers && Object.keys(options.modifiers).length) {\n                return Object.keys(options.modifiers)[Object.keys.length - 1];\n            }\n\n            return '';\n        },\n        getRegex(target) {\n            return target.$_pkeyfilterPattern ? target.$_pkeyfilterPattern : target.$_pkeyfilterModifier ? this.DEFAULT_PATTERNS[target.$_pkeyfilterModifier] : /./;\n        },\n        bindEvents(el) {\n            el.$_keyfilterKeydownEvent = (event) => this.onKeydown(event, el);\n            el.$_keyfilterPasteEvent = (event) => this.onPaste(event, el);\n\n            el.addEventListener('keypress', el.$_keyfilterKeydownEvent);\n            el.addEventListener('paste', el.$_keyfilterPasteEvent);\n        },\n        unbindEvents(el) {\n            el.removeEventListener('keypress', el.$_keyfilterKeydownEvent);\n            el.removeEventListener('paste', el.$_keyfilterPasteEvent);\n\n            el.$_keyfilterKeydownEvent = null;\n            el.$_keyfilterPasteEvent = null;\n        },\n        onKeydown(event, target) {\n            if (event.ctrlKey || event.altKey || event.metaKey || event.key === 'Tab') {\n                return;\n            }\n\n            let regex = this.getRegex(target);\n\n            if (regex === '') {\n                return;\n            }\n\n            let testKey = `${event.key}`;\n\n            if (target.$_pkeyfilterValidateOnly) {\n                testKey = `${event.target.value}${event.key}`;\n            }\n\n            if (!regex.test(testKey)) {\n                // runs before @update:modelValue emit\n                event.preventDefault();\n            }\n        },\n        onPaste(event, target) {\n            let regex = this.getRegex(target);\n\n            if (regex === '') {\n                return;\n            }\n\n            const clipboard = event.clipboardData.getData('text');\n            let testKey = '';\n\n            // loop over each letter pasted and if any fail prevent the paste\n            [...clipboard].forEach((c) => {\n                if (target.$_pkeyfilterValidateOnly) {\n                    testKey += c;\n                } else {\n                    testKey = c;\n                }\n\n                if (!regex.test(testKey)) {\n                    event.preventDefault();\n\n                    return false;\n                }\n            });\n        }\n    }\n});\n\nexport default KeyFilter;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}