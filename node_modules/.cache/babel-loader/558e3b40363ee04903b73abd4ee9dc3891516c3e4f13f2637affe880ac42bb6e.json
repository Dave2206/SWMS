{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport Header from './Header.vue';\nimport { Toast } from 'primevue/toast';\nexport default {\n  components: {\n    Header,\n    Toast\n  },\n  data() {\n    return {\n      showCreateDialog: false,\n      showEditDialog: false,\n      roles: [{\n        label: 'Driver',\n        value: 'Driver'\n      }, {\n        label: 'Barangay Officer',\n        value: 'Barangay Officer'\n      }, {\n        label: 'LGU Officer',\n        value: 'LGU Officer'\n      }],\n      accounts: [{\n        name: 'John Doe',\n        email: 'john.doe@example.com',\n        role: 'Driver'\n      }, {\n        name: 'Jane Smith',\n        email: 'jane.smith@example.com',\n        role: 'Barangay Officer'\n      }, {\n        name: 'Mike Johnson',\n        email: 'mike.johnson@example.com',\n        role: 'LGU Officer'\n      }],\n      formData: {\n        name: '',\n        email: '',\n        role: ''\n      },\n      editData: {}\n    };\n  },\n  methods: {\n    createAccount() {\n      try {\n        const newAccount = {\n          ...this.formData\n        };\n        this.accounts.push(newAccount);\n        this.resetFormData();\n        this.showCreateDialog = false;\n        this.showSuccessToast('Account created successfully');\n      } catch (error) {\n        this.showErrorToast('Failed to create account');\n      }\n    },\n    editAccount(account) {\n      this.editData = {\n        ...account\n      };\n      this.showEditDialog = true;\n    },\n    updateAccount() {\n      try {\n        const index = this.accounts.findIndex(a => a.email === this.editData.email);\n        if (index !== -1) {\n          this.accounts.splice(index, 1, {\n            ...this.editData\n          });\n        }\n        this.showEditDialog = false;\n        this.showSuccessToast('Account updated successfully');\n      } catch (error) {\n        this.showErrorToast('Failed to update account');\n      }\n    },\n    deleteAccount(account) {\n      try {\n        this.accounts = this.accounts.filter(a => a.email !== account.email);\n        this.showSuccessToast('Account deleted successfully');\n      } catch (error) {\n        this.showErrorToast('Failed to delete account');\n      }\n    },\n    resetFormData() {\n      this.formData = {\n        name: '',\n        email: '',\n        role: ''\n      };\n    },\n    showSuccessToast(message) {\n      this.$refs.toast.add({\n        severity: 'success',\n        summary: 'Success',\n        detail: message,\n        life: 3000\n      });\n    },\n    showErrorToast(message) {\n      this.$refs.toast.add({\n        severity: 'error',\n        summary: 'Error',\n        detail: message,\n        life: 3000\n      });\n    }\n  }\n};","map":{"version":3,"names":["Header","Toast","components","data","showCreateDialog","showEditDialog","roles","label","value","accounts","name","email","role","formData","editData","methods","createAccount","newAccount","push","resetFormData","showSuccessToast","error","showErrorToast","editAccount","account","updateAccount","index","findIndex","a","splice","deleteAccount","filter","message","$refs","toast","add","severity","summary","detail","life"],"sources":["C:\\Users\\darle\\solid-waste-management-system\\src\\components\\AccountManagementPage.vue"],"sourcesContent":["<template>\r\n  <Header />\r\n  <div class=\"p-6 bg-gray-50 min-h-screen\">\r\n    <h1 class=\"text-3xl font-semibold mb-6 text-gray-800\">Account Management</h1>\r\n\r\n    <!-- Create Account Button -->\r\n    <Button \r\n      label=\"Create Account\" \r\n      icon=\"pi pi-plus\" \r\n      severity=\"info\" \r\n      class=\"mb-6 px-6 py-3 text-white bg-blue-600 rounded-lg hover:bg-blue-700 transition-all\" \r\n      @click=\"showCreateDialog = true\"\r\n    ></Button>\r\n\r\n    <!-- Create Account Dialog -->\r\n    <Dialog \r\n      v-model:visible=\"showCreateDialog\" \r\n      header=\"Create Account\" \r\n      :modal=\"true\" \r\n      :closable=\"true\" \r\n      :style=\"{ width: '35vw' }\"\r\n    >\r\n      <form @submit.prevent=\"createAccount\">\r\n        <div class=\"field mb-4\">\r\n          <label for=\"name\" class=\"block text-sm font-medium text-gray-700\">Name</label>\r\n          <InputText \r\n            id=\"name\" \r\n            v-model=\"formData.name\" \r\n            type=\"text\" \r\n            class=\"w-full mt-1 border-gray-300 rounded-lg shadow-sm\"\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <div class=\"field mb-4\">\r\n          <label for=\"email\" class=\"block text-sm font-medium text-gray-700\">Email</label>\r\n          <InputText \r\n            id=\"email\" \r\n            v-model=\"formData.email\" \r\n            type=\"email\" \r\n            class=\"w-full mt-1 border-gray-300 rounded-lg shadow-sm\"\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <div class=\"field mb-4\">\r\n          <label for=\"role\" class=\"block text-sm font-medium text-gray-700\">Role</label>\r\n          <Select \r\n            id=\"role\" \r\n            v-model=\"formData.role\" \r\n            :options=\"roles\" \r\n            option-label=\"label\" \r\n            option-value=\"value\" \r\n            placeholder=\"Select a role\"\r\n            class=\"w-full mt-1 border-gray-300 rounded-lg shadow-sm\"\r\n          ></Select>\r\n        </div>\r\n\r\n        <div class=\"flex justify-end space-x-2\">\r\n          <Button label=\"Cancel\" severity=\"secondary\" @click=\"showCreateDialog = false\"></Button>\r\n          <Button label=\"Save\" type=\"submit\" severity=\"success\"></Button>\r\n        </div>\r\n      </form>\r\n    </Dialog>\r\n\r\n    <!-- Account Table -->\r\n    <DataTable :value=\"accounts\" paginator :rows=\"10\" stripedRows >\r\n      <Column field=\"name\" header=\"Name\"></Column>\r\n      <Column field=\"email\" header=\"Email\"></Column>\r\n      <Column field=\"role\" header=\"Role\"></Column>\r\n      <Column header=\"Actions\">\r\n        <template #body=\"slotProps\">\r\n          <div class=\"flex space-x-2\">\r\n            <Button \r\n              icon=\"pi pi-pencil\" \r\n              severity=\"success\" \r\n              class=\"p-button-rounded p-button-text\" \r\n              @click=\"editAccount(slotProps.data)\"\r\n            ></Button>\r\n            <Button \r\n              icon=\"pi pi-trash\" \r\n              severity=\"danger\" \r\n              class=\"p-button-rounded p-button-text\" \r\n              @click=\"deleteAccount(slotProps.data)\"\r\n            ></Button>\r\n          </div>\r\n        </template>\r\n      </Column>\r\n    </DataTable>\r\n\r\n    <!-- Edit Account Dialog -->\r\n    <Dialog \r\n      v-model:visible=\"showEditDialog\" \r\n      header=\"Edit Account\" \r\n      :modal=\"true\" \r\n      :closable=\"true\" \r\n      :style=\"{ width: '35vw' }\"\r\n    >\r\n      <form @submit.prevent=\"updateAccount\">\r\n        <div class=\"field mb-4\">\r\n          <label for=\"edit-name\" class=\"block text-sm font-medium text-gray-700\">Name</label>\r\n          <InputText \r\n            id=\"edit-name\" \r\n            v-model=\"editData.name\" \r\n            type=\"text\" \r\n            class=\"w-full mt-1 border-gray-300 rounded-lg shadow-sm\"\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <div class=\"field mb-4\">\r\n          <label for=\"edit-email\" class=\"block text-sm font-medium text-gray-700\">Email</label>\r\n          <InputText \r\n            id=\"edit-email\" \r\n            v-model=\"editData.email\" \r\n            type=\"email\" \r\n            class=\"w-full mt-1 border-gray-300 rounded-lg shadow-sm\"\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <div class=\"field mb-4\">\r\n          <label for=\"edit-role\" class=\"block text-sm font-medium text-gray-700\">Role</label>\r\n          <Select \r\n            id=\"edit-role\" \r\n            v-model=\"editData.role\" \r\n            :options=\"roles\" \r\n            option-label=\"label\" \r\n            option-value=\"value\" \r\n            placeholder=\"Select a role\"\r\n            class=\"w-full mt-1 border-gray-300 rounded-lg shadow-sm\"\r\n          ></Select>\r\n        </div>\r\n\r\n        <div class=\"flex justify-end space-x-2\">\r\n          <Button label=\"Cancel\" class=\"text-gray-600 hover:text-gray-900\" @click=\"showEditDialog = false\"></Button>\r\n          <Button label=\"Update\" type=\"submit\" class=\"primary px-6 py-2 text-white bg-blue-600 rounded-lg hover:bg-blue-700 transition-all\"></Button>\r\n        </div>\r\n      </form>\r\n    </Dialog>\r\n\r\n    <!-- Toast Notification -->\r\n    <Toast ref=\"toast\"></Toast>\r\n  </div>\r\n</template>\r\n\r\n### Script with Toast Notifications:\r\n\r\n```javascript\r\n<script>\r\nimport Header from './Header.vue';\r\nimport { Toast } from 'primevue/toast';\r\n\r\nexport default {\r\n  components: {\r\n    Header,\r\n    Toast,\r\n  },\r\n  data() {\r\n    return {\r\n      showCreateDialog: false,\r\n      showEditDialog: false,\r\n      roles: [\r\n        { label: 'Driver', value: 'Driver' },\r\n        { label: 'Barangay Officer', value: 'Barangay Officer' },\r\n        { label: 'LGU Officer', value: 'LGU Officer' },\r\n      ],\r\n      accounts: [\r\n        { name: 'John Doe', email: 'john.doe@example.com', role: 'Driver' },\r\n        { name: 'Jane Smith', email: 'jane.smith@example.com', role: 'Barangay Officer' },\r\n        { name: 'Mike Johnson', email: 'mike.johnson@example.com', role: 'LGU Officer' },\r\n      ],\r\n      formData: {\r\n        name: '',\r\n        email: '',\r\n        role: '',\r\n      },\r\n      editData: {},\r\n    };\r\n  },\r\n  methods: {\r\n    createAccount() {\r\n      try {\r\n        const newAccount = { ...this.formData };\r\n        this.accounts.push(newAccount);\r\n        this.resetFormData();\r\n        this.showCreateDialog = false;\r\n        this.showSuccessToast('Account created successfully');\r\n      } catch (error) {\r\n        this.showErrorToast('Failed to create account');\r\n      }\r\n    },\r\n    editAccount(account) {\r\n      this.editData = { ...account };\r\n      this.showEditDialog = true;\r\n    },\r\n    updateAccount() {\r\n      try {\r\n        const index = this.accounts.findIndex(a => a.email === this.editData.email);\r\n        if (index !== -1) {\r\n          this.accounts.splice(index, 1, { ...this.editData });\r\n        }\r\n        this.showEditDialog = false;\r\n        this.showSuccessToast('Account updated successfully');\r\n      } catch (error) {\r\n        this.showErrorToast('Failed to update account');\r\n      }\r\n    },\r\n    deleteAccount(account) {\r\n      try {\r\n        this.accounts = this.accounts.filter(a => a.email !== account.email);\r\n        this.showSuccessToast('Account deleted successfully');\r\n      } catch (error) {\r\n        this.showErrorToast('Failed to delete account');\r\n      }\r\n    },\r\n    resetFormData() {\r\n      this.formData = {\r\n        name: '',\r\n        email: '',\r\n        role: '',\r\n      };\r\n    },\r\n    showSuccessToast(message) {\r\n      this.$refs.toast.add({ severity: 'success', summary: 'Success', detail: message, life: 3000 });\r\n    },\r\n    showErrorToast(message) {\r\n      this.$refs.toast.add({ severity: 'error', summary: 'Error', detail: message, life: 3000 });\r\n    },\r\n  },\r\n};\r\n</script>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}