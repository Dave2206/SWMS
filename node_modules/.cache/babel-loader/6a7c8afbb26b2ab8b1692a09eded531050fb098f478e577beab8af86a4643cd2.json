{"ast":null,"code":"import \"core-js/modules/esnext.iterator.map.js\";\nimport { ref, onMounted } from 'vue';\nimport { Dropdown } from 'primevue/dropdown';\nimport { InputText } from 'primevue/inputtext';\nimport { Textarea } from 'primevue/textarea';\nimport { FileUpload } from 'primevue/fileupload';\nimport { Button } from 'primevue/button';\nimport L from 'leaflet';\nexport default {\n  name: \"ComplainPage\",\n  components: {\n    Dropdown,\n    InputText,\n    Textarea,\n    FileUpload,\n    Button\n  },\n  setup() {\n    const subjectOptions = [{\n      label: 'Garbage not picked up',\n      value: 'garbage_not_picked_up'\n    }, {\n      label: 'No garbage pickup truck',\n      value: 'no_garbage_truck'\n    }, {\n      label: 'Request for garbage pickup',\n      value: 'request_pickup'\n    }, {\n      label: 'Too many garbage on the streets',\n      value: 'too_much_garbage'\n    }];\n    const form = ref({\n      subject: null,\n      email: '',\n      address: '',\n      description: '',\n      file: null,\n      latitude: null,\n      longitude: null\n    });\n    let map;\n    let marker;\n\n    // Initialize the Leaflet map\n    const initMap = () => {\n      map = L.map('map').setView([51.505, -0.09], 13); // Default to a specific lat/lon (London)\n\n      // Tile layer (OpenStreetMap)\n      L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n        attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n      }).addTo(map);\n\n      // Add a default marker at the center of the map\n      marker = L.marker([51.505, -0.09]).addTo(map);\n\n      // Listen for marker drag and update address\n      marker.on('dragend', function (e) {\n        const latLng = e.target.getLatLng();\n        fetchAddress(latLng.lat, latLng.lng);\n      });\n\n      // Listen for map click to add a marker\n      map.on('click', function (e) {\n        const latLng = e.latlng;\n        marker.setLatLng(latLng);\n        fetchAddress(latLng.lat, latLng.lng);\n      });\n    };\n\n    // Fetch address from reverse geocoding API (OpenStreetMap Nominatim API)\n    const fetchAddress = async (lat, lon) => {\n      // Reverse geocoding API (OpenStreetMap)\n      const response = await fetch(`https://nominatim.openstreetmap.org/reverse?format=json&lat=${lat}&lon=${lon}&addressdetails=1`);\n      const data = await response.json();\n      if (data && data.address) {\n        const address = `${data.address.road || ''}, ${data.address.city || ''}, ${data.address.country || ''}`;\n        form.value.address = address;\n        form.value.latitude = lat;\n        form.value.longitude = lon;\n      }\n    };\n    const submitComplaint = () => {\n      console.log('Complaint submitted:', form.value);\n      // Handle the form submission logic here\n    };\n    onMounted(() => {\n      initMap();\n    });\n    return {\n      subjectOptions,\n      form,\n      submitComplaint\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","Dropdown","InputText","Textarea","FileUpload","Button","L","name","components","setup","subjectOptions","label","value","form","subject","email","address","description","file","latitude","longitude","map","marker","initMap","setView","tileLayer","attribution","addTo","on","e","latLng","target","getLatLng","fetchAddress","lat","lng","latlng","setLatLng","lon","response","fetch","data","json","road","city","country","submitComplaint","console","log"],"sources":["C:\\Users\\darle\\solid-waste-management-system\\src\\components\\ComplainPage.vue"],"sourcesContent":["<template>\r\n  <div class=\"complaint-form\">\r\n    <div class=\"form-container\">\r\n      <h2>Submit a Solid Waste Disposal Complaint</h2>\r\n      \r\n      <form @submit.prevent=\"submitComplaint\">\r\n        <!-- Subject Dropdown -->\r\n        <div class=\"p-field\">\r\n          <label for=\"subject\">Subject:</label>\r\n          <Dropdown v-model=\"form.subject\" :options=\"subjectOptions\" optionLabel=\"label\" optionValue=\"value\" placeholder=\"Select Subject\" required class=\"w-full\"/>\r\n        </div>\r\n\r\n        <!-- Email Input -->\r\n        <div class=\"p-field\">\r\n          <label for=\"email\">Email:</label>\r\n          <InputText v-model=\"form.email\" id=\"email\" type=\"email\" placeholder=\"Enter your email\" required class=\"w-full\"/>\r\n        </div>\r\n\r\n        <!-- Address Input (Based on Map Pin) -->\r\n        <div class=\"p-field\">\r\n          <label for=\"address\">Address:</label>\r\n          <InputText v-model=\"form.address\" id=\"address\" type=\"text\" placeholder=\"Click on map to select address\" readonly class=\"w-full\"/>\r\n        </div>\r\n\r\n        <!-- Map Display with Pin -->\r\n        <div id=\"map\" style=\"height: 400px; width: 100%\"></div>\r\n\r\n        <!-- Description Textarea -->\r\n        <div class=\"p-field\">\r\n          <label for=\"description\">Description:</label>\r\n          <Textarea v-model=\"form.description\" id=\"description\" rows=\"5\" placeholder=\"Describe the issue\" required class=\"w-full\"/>\r\n        </div>\r\n\r\n        <!-- File Upload -->\r\n        <div class=\"p-field\">\r\n          <label for=\"file\">Attachment:</label>\r\n          <FileUpload v-model=\"form.file\" name=\"file\" chooseLabel=\"Choose File\" uploadLabel=\"Upload\" class=\"w-full\"/>\r\n        </div>\r\n\r\n        <!-- Submit Button -->\r\n        <Button label=\"Submit Complaint\" type=\"submit\" icon=\"pi pi-send\" class=\"p-button-rounded p-button-success w-full\" />\r\n      </form>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, onMounted } from 'vue';\r\nimport { Dropdown } from 'primevue/dropdown';\r\nimport { InputText } from 'primevue/inputtext';\r\nimport { Textarea } from 'primevue/textarea';\r\nimport { FileUpload } from 'primevue/fileupload';\r\nimport { Button } from 'primevue/button';\r\nimport L from 'leaflet';\r\n\r\nexport default {\r\n  name: \"ComplainPage\",\r\n  components: {\r\n    Dropdown,\r\n    InputText,\r\n    Textarea,\r\n    FileUpload,\r\n    Button\r\n  },\r\n  setup() {\r\n    const subjectOptions = [\r\n      { label: 'Garbage not picked up', value: 'garbage_not_picked_up' },\r\n      { label: 'No garbage pickup truck', value: 'no_garbage_truck' },\r\n      { label: 'Request for garbage pickup', value: 'request_pickup' },\r\n      { label: 'Too many garbage on the streets', value: 'too_much_garbage' }\r\n    ];\r\n\r\n    const form = ref({\r\n      subject: null,\r\n      email: '',\r\n      address: '',\r\n      description: '',\r\n      file: null,\r\n      latitude: null,\r\n      longitude: null\r\n    });\r\n\r\n    let map;\r\n    let marker;\r\n\r\n    // Initialize the Leaflet map\r\n    const initMap = () => {\r\n      map = L.map('map').setView([51.505, -0.09], 13); // Default to a specific lat/lon (London)\r\n      \r\n      // Tile layer (OpenStreetMap)\r\n      L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\r\n        attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n      }).addTo(map);\r\n\r\n      // Add a default marker at the center of the map\r\n      marker = L.marker([51.505, -0.09]).addTo(map);\r\n\r\n      // Listen for marker drag and update address\r\n      marker.on('dragend', function(e) {\r\n        const latLng = e.target.getLatLng();\r\n        fetchAddress(latLng.lat, latLng.lng);\r\n      });\r\n\r\n      // Listen for map click to add a marker\r\n      map.on('click', function(e) {\r\n        const latLng = e.latlng;\r\n        marker.setLatLng(latLng);\r\n        fetchAddress(latLng.lat, latLng.lng);\r\n      });\r\n    };\r\n\r\n    // Fetch address from reverse geocoding API (OpenStreetMap Nominatim API)\r\n    const fetchAddress = async (lat, lon) => {\r\n      // Reverse geocoding API (OpenStreetMap)\r\n      const response = await fetch(`https://nominatim.openstreetmap.org/reverse?format=json&lat=${lat}&lon=${lon}&addressdetails=1`);\r\n      const data = await response.json();\r\n      if (data && data.address) {\r\n        const address = `${data.address.road || ''}, ${data.address.city || ''}, ${data.address.country || ''}`;\r\n        form.value.address = address;\r\n        form.value.latitude = lat;\r\n        form.value.longitude = lon;\r\n      }\r\n    };\r\n\r\n    const submitComplaint = () => {\r\n      console.log('Complaint submitted:', form.value);\r\n      // Handle the form submission logic here\r\n    };\r\n\r\n    onMounted(() => {\r\n      initMap();\r\n    });\r\n\r\n    return {\r\n      subjectOptions,\r\n      form,\r\n      submitComplaint\r\n    };\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.complaint-form {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 100vh;\r\n  background-color: #f0f4f8;\r\n}\r\n\r\n.form-container {\r\n  background-color: #ffffff;\r\n  padding: 30px;\r\n  border-radius: 10px;\r\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\r\n  width: 100%;\r\n  max-width: 700px;\r\n}\r\n\r\nh2 {\r\n  text-align: center;\r\n  color: #333;\r\n  font-size: 24px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.p-field {\r\n  margin-bottom: 1.5em;\r\n}\r\n\r\n.p-field label {\r\n  font-weight: bold;\r\n}\r\n\r\nbutton {\r\n  width: 100%;\r\n  padding: 10px;\r\n}\r\n\r\n.p-button-rounded {\r\n  border-radius: 50px;\r\n}\r\n\r\n.p-button-success {\r\n  background-color: #28a745;\r\n  border: none;\r\n}\r\n\r\n.p-button-success:hover {\r\n  background-color: #218838;\r\n}\r\n\r\n#map {\r\n  height: 400px;\r\n  width: 100%;\r\n  margin-bottom: 1em;\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .form-container {\r\n    padding: 20px;\r\n  }\r\n\r\n  h2 {\r\n    font-size: 20px;\r\n  }\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}