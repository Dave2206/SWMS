{"ast":null,"code":"import \"core-js/modules/esnext.iterator.map.js\";\nimport { ref, nextTick } from 'vue';\nimport Select from 'primevue/select';\nimport InputText from 'primevue/inputtext';\nimport Textarea from 'primevue/textarea';\nimport FileUpload from 'primevue/fileupload';\nimport Button from 'primevue/button';\nimport L from 'leaflet';\nexport default {\n  name: \"ComplainPage\",\n  components: {\n    Select,\n    InputText,\n    Textarea,\n    FileUpload,\n    Button\n  },\n  setup() {\n    const subjectOptions = [{\n      label: 'Garbage not picked up',\n      value: 'garbage_not_picked_up'\n    }, {\n      label: 'No garbage pickup truck',\n      value: 'no_garbage_truck'\n    }, {\n      label: 'Request for garbage pickup',\n      value: 'request_pickup'\n    }, {\n      label: 'Too many garbage on the streets',\n      value: 'too_much_garbage'\n    }];\n    const form = ref({\n      subject: null,\n      email: '',\n      address: '',\n      description: '',\n      file: null,\n      latitude: null,\n      longitude: null\n    });\n    const showMap = ref(false); // Controls map visibility\n    let map;\n    let marker;\n    const initMap = () => {\n      // Initialize the map only after the container is available\n      nextTick(() => {\n        if (!map) {\n          map = L.map('map').setView([51.505, -0.09], 13); // Default to a specific lat/lon (London)\n\n          // Tile layer (OpenStreetMap)\n          L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n            attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n          }).addTo(map);\n\n          // Add a default marker at the center of the map\n          marker = L.marker([51.505, -0.09], {\n            draggable: true\n          }).addTo(map);\n\n          // Listen for marker drag and update address\n          marker.on('dragend', function (e) {\n            const latLng = e.target.getLatLng();\n            fetchAddress(latLng.lat, latLng.lng);\n          });\n\n          // Listen for map click to add a marker\n          map.on('click', function (e) {\n            const latLng = e.latlng;\n            marker.setLatLng(latLng);\n            fetchAddress(latLng.lat, latLng.lng);\n          });\n        }\n      });\n    };\n\n    // Fetch address from reverse geocoding API (OpenStreetMap Nominatim API)\n    const fetchAddress = async (lat, lon) => {\n      const response = await fetch(`https://nominatim.openstreetmap.org/reverse?format=json&lat=${lat}&lon=${lon}&addressdetails=1`);\n      const data = await response.json();\n      if (data && data.address) {\n        const address = `${data.address.road || ''}, ${data.address.city || ''}, ${data.address.country || ''}`;\n        form.value.address = address;\n        form.value.latitude = lat;\n        form.value.longitude = lon;\n      }\n    };\n\n    // Function to get the user's current location\n    const getUserLocation = () => {\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(position => {\n          const {\n            latitude,\n            longitude\n          } = position.coords;\n          form.value.latitude = latitude;\n          form.value.longitude = longitude;\n          form.value.address = 'Getting address...';\n\n          // Center map to user's location\n          if (showMap.value) {\n            map.setView([latitude, longitude], 13);\n            marker.setLatLng([latitude, longitude]);\n            fetchAddress(latitude, longitude);\n          }\n        });\n      } else {\n        alert(\"Geolocation is not supported by this browser.\");\n      }\n      showMap.value = true; // Show map after clicking the button\n      initMap(); // Initialize map after clicking\n    };\n    const submitComplaint = () => {\n      console.log('Complaint submitted:', form.value);\n      // Handle the form submission logic here\n    };\n    return {\n      subjectOptions,\n      form,\n      submitComplaint,\n      getUserLocation,\n      showMap\n    };\n  }\n};","map":{"version":3,"names":["ref","nextTick","Select","InputText","Textarea","FileUpload","Button","L","name","components","setup","subjectOptions","label","value","form","subject","email","address","description","file","latitude","longitude","showMap","map","marker","initMap","setView","tileLayer","attribution","addTo","draggable","on","e","latLng","target","getLatLng","fetchAddress","lat","lng","latlng","setLatLng","lon","response","fetch","data","json","road","city","country","getUserLocation","navigator","geolocation","getCurrentPosition","position","coords","alert","submitComplaint","console","log"],"sources":["C:\\Users\\darle\\solid-waste-management-system\\src\\components\\ComplainPage.vue"],"sourcesContent":["<template>\r\n  <div class=\"complaint-form\">\r\n    <div class=\"form-container\">\r\n      <h2>Submit a Solid Waste Disposal Complaint</h2>\r\n      \r\n      <form @submit.prevent=\"submitComplaint\">\r\n        <!-- Subject Dropdown -->\r\n        <div class=\"p-field\">\r\n          <label for=\"subject\">Subject:</label>\r\n          <Select v-model=\"form.subject\" :options=\"subjectOptions\" optionLabel=\"label\" optionValue=\"value\" placeholder=\"Select Subject\" required class=\"w-full\"/>\r\n        </div>\r\n\r\n        <!-- Email Input -->\r\n        <div class=\"p-field\">\r\n          <label for=\"email\">Email:</label>\r\n          <InputText v-model=\"form.email\" id=\"email\" type=\"email\" placeholder=\"Enter your email\" required class=\"w-full\"/>\r\n        </div>\r\n\r\n        <!-- Address Input -->\r\n        <div class=\"p-field\">\r\n          <label for=\"address\">Address:</label>\r\n          <InputText v-model=\"form.address\" id=\"address\" type=\"text\" placeholder=\"Click on map to select address\" readonly class=\"w-full\"/>\r\n        </div>\r\n\r\n        <!-- Get My Location Button -->\r\n        <div class=\"p-field\">\r\n          <Button label=\"Get My Location\" icon=\"pi pi-location\" @click=\"getUserLocation\" class=\"p-button-primary w-full\"/>\r\n        </div>\r\n\r\n        <!-- Map Display (Visible only after clicking 'Get My Location') -->\r\n        <div v-if=\"showMap\" id=\"map\" style=\"height: 300px; width: 100%; margin-top: 1em;\"></div>\r\n\r\n        <!-- Description Textarea -->\r\n        <div class=\"p-field\">\r\n          <label for=\"description\">Description:</label>\r\n          <Textarea v-model=\"form.description\" id=\"description\" rows=\"5\" placeholder=\"Describe the issue\" required class=\"w-full\"/>\r\n        </div>\r\n\r\n        <!-- File Upload -->\r\n        <div class=\"p-field\">\r\n          <label for=\"file\">Attachment:</label>\r\n          <FileUpload v-model=\"form.file\" name=\"file\" chooseLabel=\"Choose File\" uploadLabel=\"Upload\" class=\"w-full\"/>\r\n        </div>\r\n\r\n        <!-- Submit Button -->\r\n        <Button label=\"Submit Complaint\" type=\"submit\" icon=\"pi pi-send\" class=\"p-button-rounded p-button-success w-full\" />\r\n      </form>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, nextTick } from 'vue';\r\nimport Select from 'primevue/select';\r\nimport  InputText  from 'primevue/inputtext';\r\nimport  Textarea  from 'primevue/textarea';\r\nimport  FileUpload  from 'primevue/fileupload';\r\nimport  Button  from 'primevue/button';\r\nimport L from 'leaflet';\r\n\r\nexport default {\r\n  name: \"ComplainPage\",\r\n  components: {\r\n    Select,\r\n    InputText,\r\n    Textarea,\r\n    FileUpload,\r\n    Button\r\n  },\r\n  setup() {\r\n    const subjectOptions = [\r\n      { label: 'Garbage not picked up', value: 'garbage_not_picked_up' },\r\n      { label: 'No garbage pickup truck', value: 'no_garbage_truck' },\r\n      { label: 'Request for garbage pickup', value: 'request_pickup' },\r\n      { label: 'Too many garbage on the streets', value: 'too_much_garbage' }\r\n    ];\r\n\r\n    const form = ref({\r\n      subject: null,\r\n      email: '',\r\n      address: '',\r\n      description: '',\r\n      file: null,\r\n      latitude: null,\r\n      longitude: null\r\n    });\r\n\r\n    const showMap = ref(false); // Controls map visibility\r\n    let map;\r\n    let marker;\r\n\r\n    const initMap = () => {\r\n      // Initialize the map only after the container is available\r\n      nextTick(() => {\r\n        if (!map) {\r\n          map = L.map('map').setView([51.505, -0.09], 13); // Default to a specific lat/lon (London)\r\n          \r\n          // Tile layer (OpenStreetMap)\r\n          L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\r\n            attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n          }).addTo(map);\r\n\r\n          // Add a default marker at the center of the map\r\n          marker = L.marker([51.505, -0.09], { draggable: true }).addTo(map);\r\n\r\n          // Listen for marker drag and update address\r\n          marker.on('dragend', function(e) {\r\n            const latLng = e.target.getLatLng();\r\n            fetchAddress(latLng.lat, latLng.lng);\r\n          });\r\n\r\n          // Listen for map click to add a marker\r\n          map.on('click', function(e) {\r\n            const latLng = e.latlng;\r\n            marker.setLatLng(latLng);\r\n            fetchAddress(latLng.lat, latLng.lng);\r\n          });\r\n        }\r\n      });\r\n    };\r\n\r\n    // Fetch address from reverse geocoding API (OpenStreetMap Nominatim API)\r\n    const fetchAddress = async (lat, lon) => {\r\n      const response = await fetch(`https://nominatim.openstreetmap.org/reverse?format=json&lat=${lat}&lon=${lon}&addressdetails=1`);\r\n      const data = await response.json();\r\n      if (data && data.address) {\r\n        const address = `${data.address.road || ''}, ${data.address.city || ''}, ${data.address.country || ''}`;\r\n        form.value.address = address;\r\n        form.value.latitude = lat;\r\n        form.value.longitude = lon;\r\n      }\r\n    };\r\n\r\n    // Function to get the user's current location\r\n    const getUserLocation = () => {\r\n      if (navigator.geolocation) {\r\n        navigator.geolocation.getCurrentPosition((position) => {\r\n          const { latitude, longitude } = position.coords;\r\n          form.value.latitude = latitude;\r\n          form.value.longitude = longitude;\r\n          form.value.address = 'Getting address...';\r\n\r\n          // Center map to user's location\r\n          if (showMap.value) {\r\n            map.setView([latitude, longitude], 13);\r\n            marker.setLatLng([latitude, longitude]);\r\n            fetchAddress(latitude, longitude);\r\n          }\r\n        });\r\n      } else {\r\n        alert(\"Geolocation is not supported by this browser.\");\r\n      }\r\n      showMap.value = true; // Show map after clicking the button\r\n      initMap(); // Initialize map after clicking\r\n    };\r\n\r\n    const submitComplaint = () => {\r\n      console.log('Complaint submitted:', form.value);\r\n      // Handle the form submission logic here\r\n    };\r\n\r\n    return {\r\n      subjectOptions,\r\n      form,\r\n      submitComplaint,\r\n      getUserLocation,\r\n      showMap\r\n    };\r\n  }\r\n};\r\n</script>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}