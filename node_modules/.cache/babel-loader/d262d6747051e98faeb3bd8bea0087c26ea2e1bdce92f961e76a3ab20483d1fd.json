{"ast":null,"code":"import { isNotEmpty } from '@primeuix/utils/object';\nimport BaseStyle from '@primevue/core/base/style';\nvar theme = function theme(_ref) {\n  var dt = _ref.dt;\n  return \"\\n.p-autocomplete {\\n    display: inline-flex;\\n}\\n\\n.p-autocomplete-loader {\\n    position: absolute;\\n    top: 50%;\\n    margin-top: -0.5rem;\\n    inset-inline-end: \".concat(dt('autocomplete.padding.x'), \";\\n}\\n\\n.p-autocomplete:has(.p-autocomplete-dropdown) .p-autocomplete-loader {\\n    inset-inline-end: calc(\").concat(dt('autocomplete.dropdown.width'), \" + \").concat(dt('autocomplete.padding.x'), \");\\n}\\n\\n.p-autocomplete:has(.p-autocomplete-dropdown) .p-autocomplete-input {\\n    flex: 1 1 auto;\\n    width: 1%;\\n}\\n\\n.p-autocomplete:has(.p-autocomplete-dropdown) .p-autocomplete-input,\\n.p-autocomplete:has(.p-autocomplete-dropdown) .p-autocomplete-input-multiple {\\n    border-start-end-radius: 0;\\n    border-end-end-radius: 0;\\n}\\n\\n.p-autocomplete-dropdown {\\n    cursor: pointer;\\n    display: inline-flex;\\n    user-select: none;\\n    align-items: center;\\n    justify-content: center;\\n    overflow: hidden;\\n    position: relative;\\n    width: \").concat(dt('autocomplete.dropdown.width'), \";\\n    border-start-end-radius: \").concat(dt('autocomplete.dropdown.border.radius'), \";\\n    border-end-end-radius: \").concat(dt('autocomplete.dropdown.border.radius'), \";\\n    background: \").concat(dt('autocomplete.dropdown.background'), \";\\n    border: 1px solid \").concat(dt('autocomplete.dropdown.border.color'), \";\\n    border-inline-start: 0 none;\\n    color: \").concat(dt('autocomplete.dropdown.color'), \";\\n    transition: background \").concat(dt('autocomplete.transition.duration'), \", color \").concat(dt('autocomplete.transition.duration'), \", border-color \").concat(dt('autocomplete.transition.duration'), \", outline-color \").concat(dt('autocomplete.transition.duration'), \", box-shadow \").concat(dt('autocomplete.transition.duration'), \";\\n    outline-color: transparent;\\n}\\n\\n.p-autocomplete-dropdown:not(:disabled):hover {\\n    background: \").concat(dt('autocomplete.dropdown.hover.background'), \";\\n    border-color: \").concat(dt('autocomplete.dropdown.hover.border.color'), \";\\n    color: \").concat(dt('autocomplete.dropdown.hover.color'), \";\\n}\\n\\n.p-autocomplete-dropdown:not(:disabled):active {\\n    background: \").concat(dt('autocomplete.dropdown.active.background'), \";\\n    border-color: \").concat(dt('autocomplete.dropdown.active.border.color'), \";\\n    color: \").concat(dt('autocomplete.dropdown.active.color'), \";\\n}\\n\\n.p-autocomplete-dropdown:focus-visible {\\n    box-shadow: \").concat(dt('autocomplete.dropdown.focus.ring.shadow'), \";\\n    outline: \").concat(dt('autocomplete.dropdown.focus.ring.width'), \" \").concat(dt('autocomplete.dropdown.focus.ring.style'), \" \").concat(dt('autocomplete.dropdown.focus.ring.color'), \";\\n    outline-offset: \").concat(dt('autocomplete.dropdown.focus.ring.offset'), \";\\n}\\n\\n.p-autocomplete .p-autocomplete-overlay {\\n    min-width: 100%;\\n}\\n\\n.p-autocomplete-overlay {\\n    position: absolute;\\n    top: 0;\\n    left: 0;\\n    background: \").concat(dt('autocomplete.overlay.background'), \";\\n    color: \").concat(dt('autocomplete.overlay.color'), \";\\n    border: 1px solid \").concat(dt('autocomplete.overlay.border.color'), \";\\n    border-radius: \").concat(dt('autocomplete.overlay.border.radius'), \";\\n    box-shadow: \").concat(dt('autocomplete.overlay.shadow'), \";\\n}\\n\\n.p-autocomplete-list-container {\\n    overflow: auto;\\n}\\n\\n.p-autocomplete-list {\\n    margin: 0;\\n    list-style-type: none;\\n    display: flex;\\n    flex-direction: column;\\n    gap: \").concat(dt('autocomplete.list.gap'), \";\\n    padding: \").concat(dt('autocomplete.list.padding'), \";\\n}\\n\\n.p-autocomplete-option {\\n    cursor: pointer;\\n    white-space: nowrap;\\n    position: relative;\\n    overflow: hidden;\\n    display: flex;\\n    align-items: center;\\n    padding: \").concat(dt('autocomplete.option.padding'), \";\\n    border: 0 none;\\n    color: \").concat(dt('autocomplete.option.color'), \";\\n    background: transparent;\\n    transition: background \").concat(dt('autocomplete.transition.duration'), \", color \").concat(dt('autocomplete.transition.duration'), \", border-color \").concat(dt('autocomplete.transition.duration'), \";\\n    border-radius: \").concat(dt('autocomplete.option.border.radius'), \";\\n}\\n\\n.p-autocomplete-option:not(.p-autocomplete-option-selected):not(.p-disabled).p-focus {\\n    background: \").concat(dt('autocomplete.option.focus.background'), \";\\n    color: \").concat(dt('autocomplete.option.focus.color'), \";\\n}\\n\\n.p-autocomplete-option-selected {\\n    background: \").concat(dt('autocomplete.option.selected.background'), \";\\n    color: \").concat(dt('autocomplete.option.selected.color'), \";\\n}\\n\\n.p-autocomplete-option-selected.p-focus {\\n    background: \").concat(dt('autocomplete.option.selected.focus.background'), \";\\n    color: \").concat(dt('autocomplete.option.selected.focus.color'), \";\\n}\\n\\n.p-autocomplete-option-group {\\n    margin: 0;\\n    padding: \").concat(dt('autocomplete.option.group.padding'), \";\\n    color: \").concat(dt('autocomplete.option.group.color'), \";\\n    background: \").concat(dt('autocomplete.option.group.background'), \";\\n    font-weight: \").concat(dt('autocomplete.option.group.font.weight'), \";\\n}\\n\\n.p-autocomplete-input-multiple {\\n    margin: 0;\\n    list-style-type: none;\\n    cursor: text;\\n    overflow: hidden;\\n    display: flex;\\n    align-items: center;\\n    flex-wrap: wrap;\\n    padding: calc(\").concat(dt('autocomplete.padding.y'), \" / 2) \").concat(dt('autocomplete.padding.x'), \";\\n    gap: calc(\").concat(dt('autocomplete.padding.y'), \" / 2);\\n    color: \").concat(dt('autocomplete.color'), \";\\n    background: \").concat(dt('autocomplete.background'), \";\\n    border: 1px solid \").concat(dt('autocomplete.border.color'), \";\\n    border-radius: \").concat(dt('autocomplete.border.radius'), \";\\n    width: 100%;\\n    transition: background \").concat(dt('autocomplete.transition.duration'), \", color \").concat(dt('autocomplete.transition.duration'), \", border-color \").concat(dt('autocomplete.transition.duration'), \", outline-color \").concat(dt('autocomplete.transition.duration'), \", box-shadow \").concat(dt('autocomplete.transition.duration'), \";\\n    outline-color: transparent;\\n    box-shadow: \").concat(dt('autocomplete.shadow'), \";\\n}\\n\\n.p-autocomplete:not(.p-disabled):hover .p-autocomplete-input-multiple {\\n    border-color: \").concat(dt('autocomplete.hover.border.color'), \";\\n}\\n\\n.p-autocomplete:not(.p-disabled).p-focus .p-autocomplete-input-multiple {\\n    border-color: \").concat(dt('autocomplete.focus.border.color'), \";\\n    box-shadow: \").concat(dt('autocomplete.focus.ring.shadow'), \";\\n    outline: \").concat(dt('autocomplete.focus.ring.width'), \" \").concat(dt('autocomplete.focus.ring.style'), \" \").concat(dt('autocomplete.focus.ring.color'), \";\\n    outline-offset: \").concat(dt('autocomplete.focus.ring.offset'), \";\\n}\\n\\n.p-autocomplete.p-invalid .p-autocomplete-input-multiple {\\n    border-color: \").concat(dt('autocomplete.invalid.border.color'), \";\\n}\\n\\n.p-variant-filled.p-autocomplete-input-multiple {\\n    background: \").concat(dt('autocomplete.filled.background'), \";\\n}\\n\\n.p-autocomplete:not(.p-disabled):hover .p-variant-filled.p-autocomplete-input-multiple {\\n    background: \").concat(dt('autocomplete.filled.hover.background'), \";\\n}\\n\\n.p-autocomplete:not(.p-disabled).p-focus .p-variant-filled.p-autocomplete-input-multiple  {\\n    background: \").concat(dt('autocomplete.filled.focus.background'), \";\\n}\\n\\n.p-autocomplete.p-disabled .p-autocomplete-input-multiple {\\n    opacity: 1;\\n    background: \").concat(dt('autocomplete.disabled.background'), \";\\n    color: \").concat(dt('autocomplete.disabled.color'), \";\\n}\\n\\n.p-autocomplete-chip.p-chip {\\n    padding-block-start: calc(\").concat(dt('autocomplete.padding.y'), \" / 2);\\n    padding-block-end: calc(\").concat(dt('autocomplete.padding.y'), \" / 2);\\n    border-radius: \").concat(dt('autocomplete.chip.border.radius'), \";\\n}\\n\\n.p-autocomplete-input-multiple:has(.p-autocomplete-chip) {\\n    padding-inline-start: calc(\").concat(dt('autocomplete.padding.y'), \" / 2);\\n    padding-inline-end: calc(\").concat(dt('autocomplete.padding.y'), \" / 2);\\n}\\n\\n.p-autocomplete-chip-item.p-focus .p-autocomplete-chip {\\n    background: \").concat(dt('autocomplete.chip.focus.background'), \";\\n    color: \").concat(dt('autocomplete.chip.focus.color'), \";\\n}\\n\\n.p-autocomplete-input-chip {\\n    flex: 1 1 auto;\\n    display: inline-flex;\\n    padding-block-start: calc(\").concat(dt('autocomplete.padding.y'), \" / 2);\\n    padding-block-end: calc(\").concat(dt('autocomplete.padding.y'), \" / 2);\\n}\\n\\n.p-autocomplete-input-chip input {\\n    border: 0 none;\\n    outline: 0 none;\\n    background: transparent;\\n    margin: 0;\\n    padding: 0;\\n    box-shadow: none;\\n    border-radius: 0;\\n    width: 100%;\\n    font-family: inherit;\\n    font-feature-settings: inherit;\\n    font-size: 1rem;\\n    color: inherit;\\n}\\n\\n.p-autocomplete-input-chip input::placeholder {\\n    color: \").concat(dt('autocomplete.placeholder.color'), \";\\n}\\n\\n.p-autocomplete.p-invalid .p-autocomplete-input-chip input::placeholder {\\n    color: \").concat(dt('autocomplete.invalid.placeholder.color'), \";\\n}\\n\\n.p-autocomplete-empty-message {\\n    padding: \").concat(dt('autocomplete.empty.message.padding'), \";\\n}\\n\\n.p-autocomplete-fluid {\\n    display: flex;\\n}\\n\\n.p-autocomplete-fluid:has(.p-autocomplete-dropdown) .p-autocomplete-input {\\n    width: 1%;\\n}\\n\\n.p-autocomplete:has(.p-inputtext-sm) .p-autocomplete-dropdown {\\n    width: \").concat(dt('autocomplete.dropdown.sm.width'), \";\\n}\\n\\n.p-autocomplete:has(.p-inputtext-sm) .p-autocomplete-dropdown .p-icon {\\n    font-size: \").concat(dt('form.field.sm.font.size'), \";\\n    width: \").concat(dt('form.field.sm.font.size'), \";\\n    height: \").concat(dt('form.field.sm.font.size'), \";\\n}\\n\\n.p-autocomplete:has(.p-inputtext-lg) .p-autocomplete-dropdown {\\n    width: \").concat(dt('autocomplete.dropdown.lg.width'), \";\\n}\\n\\n.p-autocomplete:has(.p-inputtext-lg) .p-autocomplete-dropdown .p-icon {\\n    font-size: \").concat(dt('form.field.lg.font.size'), \";\\n    width: \").concat(dt('form.field.lg.font.size'), \";\\n    height: \").concat(dt('form.field.lg.font.size'), \";\\n}\\n\");\n};\nvar inlineStyles = {\n  root: {\n    position: 'relative'\n  }\n};\nvar classes = {\n  root: function root(_ref2) {\n    var instance = _ref2.instance,\n      props = _ref2.props;\n    return ['p-autocomplete p-component p-inputwrapper', {\n      'p-disabled': props.disabled,\n      'p-invalid': instance.$invalid,\n      'p-focus': instance.focused,\n      'p-inputwrapper-filled': instance.$filled || isNotEmpty(instance.inputValue),\n      'p-inputwrapper-focus': instance.focused,\n      'p-autocomplete-open': instance.overlayVisible,\n      'p-autocomplete-fluid': instance.$fluid\n    }];\n  },\n  pcInputText: 'p-autocomplete-input',\n  inputMultiple: function inputMultiple(_ref3) {\n    _ref3.props;\n    var instance = _ref3.instance;\n    return ['p-autocomplete-input-multiple', {\n      'p-variant-filled': instance.$variant === 'filled'\n    }];\n  },\n  chipItem: function chipItem(_ref4) {\n    var instance = _ref4.instance,\n      i = _ref4.i;\n    return ['p-autocomplete-chip-item', {\n      'p-focus': instance.focusedMultipleOptionIndex === i\n    }];\n  },\n  pcChip: 'p-autocomplete-chip',\n  chipIcon: 'p-autocomplete-chip-icon',\n  inputChip: 'p-autocomplete-input-chip',\n  loader: 'p-autocomplete-loader',\n  dropdown: 'p-autocomplete-dropdown',\n  overlay: 'p-autocomplete-overlay p-component',\n  listContainer: 'p-autocomplete-list-container',\n  list: 'p-autocomplete-list',\n  optionGroup: 'p-autocomplete-option-group',\n  option: function option(_ref5) {\n    var instance = _ref5.instance,\n      _option = _ref5.option,\n      i = _ref5.i,\n      getItemOptions = _ref5.getItemOptions;\n    return ['p-autocomplete-option', {\n      'p-autocomplete-option-selected': instance.isSelected(_option),\n      'p-focus': instance.focusedOptionIndex === instance.getOptionIndex(i, getItemOptions),\n      'p-disabled': instance.isOptionDisabled(_option)\n    }];\n  },\n  emptyMessage: 'p-autocomplete-empty-message'\n};\nvar AutoCompleteStyle = BaseStyle.extend({\n  name: 'autocomplete',\n  theme: theme,\n  classes: classes,\n  inlineStyles: inlineStyles\n});\nexport { AutoCompleteStyle as default };","map":{"version":3,"names":["theme","_ref","dt","concat","inlineStyles","root","position","classes","_ref2","instance","props","disabled","$invalid","focused","$filled","isNotEmpty","inputValue","overlayVisible","$fluid","pcInputText","inputMultiple","_ref3","$variant","chipItem","_ref4","i","focusedMultipleOptionIndex","pcChip","chipIcon","inputChip","loader","dropdown","overlay","listContainer","list","optionGroup","option","_ref5","_option","getItemOptions","isSelected","focusedOptionIndex","getOptionIndex","isOptionDisabled","emptyMessage","AutoCompleteStyle","BaseStyle","extend","name"],"sources":["../../../src/autocomplete/style/AutoCompleteStyle.js"],"sourcesContent":["import { isNotEmpty } from '@primeuix/utils/object';\nimport BaseStyle from '@primevue/core/base/style';\n\nconst theme = ({ dt }) => `\n.p-autocomplete {\n    display: inline-flex;\n}\n\n.p-autocomplete-loader {\n    position: absolute;\n    top: 50%;\n    margin-top: -0.5rem;\n    inset-inline-end: ${dt('autocomplete.padding.x')};\n}\n\n.p-autocomplete:has(.p-autocomplete-dropdown) .p-autocomplete-loader {\n    inset-inline-end: calc(${dt('autocomplete.dropdown.width')} + ${dt('autocomplete.padding.x')});\n}\n\n.p-autocomplete:has(.p-autocomplete-dropdown) .p-autocomplete-input {\n    flex: 1 1 auto;\n    width: 1%;\n}\n\n.p-autocomplete:has(.p-autocomplete-dropdown) .p-autocomplete-input,\n.p-autocomplete:has(.p-autocomplete-dropdown) .p-autocomplete-input-multiple {\n    border-start-end-radius: 0;\n    border-end-end-radius: 0;\n}\n\n.p-autocomplete-dropdown {\n    cursor: pointer;\n    display: inline-flex;\n    user-select: none;\n    align-items: center;\n    justify-content: center;\n    overflow: hidden;\n    position: relative;\n    width: ${dt('autocomplete.dropdown.width')};\n    border-start-end-radius: ${dt('autocomplete.dropdown.border.radius')};\n    border-end-end-radius: ${dt('autocomplete.dropdown.border.radius')};\n    background: ${dt('autocomplete.dropdown.background')};\n    border: 1px solid ${dt('autocomplete.dropdown.border.color')};\n    border-inline-start: 0 none;\n    color: ${dt('autocomplete.dropdown.color')};\n    transition: background ${dt('autocomplete.transition.duration')}, color ${dt('autocomplete.transition.duration')}, border-color ${dt('autocomplete.transition.duration')}, outline-color ${dt('autocomplete.transition.duration')}, box-shadow ${dt(\n    'autocomplete.transition.duration'\n)};\n    outline-color: transparent;\n}\n\n.p-autocomplete-dropdown:not(:disabled):hover {\n    background: ${dt('autocomplete.dropdown.hover.background')};\n    border-color: ${dt('autocomplete.dropdown.hover.border.color')};\n    color: ${dt('autocomplete.dropdown.hover.color')};\n}\n\n.p-autocomplete-dropdown:not(:disabled):active {\n    background: ${dt('autocomplete.dropdown.active.background')};\n    border-color: ${dt('autocomplete.dropdown.active.border.color')};\n    color: ${dt('autocomplete.dropdown.active.color')};\n}\n\n.p-autocomplete-dropdown:focus-visible {\n    box-shadow: ${dt('autocomplete.dropdown.focus.ring.shadow')};\n    outline: ${dt('autocomplete.dropdown.focus.ring.width')} ${dt('autocomplete.dropdown.focus.ring.style')} ${dt('autocomplete.dropdown.focus.ring.color')};\n    outline-offset: ${dt('autocomplete.dropdown.focus.ring.offset')};\n}\n\n.p-autocomplete .p-autocomplete-overlay {\n    min-width: 100%;\n}\n\n.p-autocomplete-overlay {\n    position: absolute;\n    top: 0;\n    left: 0;\n    background: ${dt('autocomplete.overlay.background')};\n    color: ${dt('autocomplete.overlay.color')};\n    border: 1px solid ${dt('autocomplete.overlay.border.color')};\n    border-radius: ${dt('autocomplete.overlay.border.radius')};\n    box-shadow: ${dt('autocomplete.overlay.shadow')};\n}\n\n.p-autocomplete-list-container {\n    overflow: auto;\n}\n\n.p-autocomplete-list {\n    margin: 0;\n    list-style-type: none;\n    display: flex;\n    flex-direction: column;\n    gap: ${dt('autocomplete.list.gap')};\n    padding: ${dt('autocomplete.list.padding')};\n}\n\n.p-autocomplete-option {\n    cursor: pointer;\n    white-space: nowrap;\n    position: relative;\n    overflow: hidden;\n    display: flex;\n    align-items: center;\n    padding: ${dt('autocomplete.option.padding')};\n    border: 0 none;\n    color: ${dt('autocomplete.option.color')};\n    background: transparent;\n    transition: background ${dt('autocomplete.transition.duration')}, color ${dt('autocomplete.transition.duration')}, border-color ${dt('autocomplete.transition.duration')};\n    border-radius: ${dt('autocomplete.option.border.radius')};\n}\n\n.p-autocomplete-option:not(.p-autocomplete-option-selected):not(.p-disabled).p-focus {\n    background: ${dt('autocomplete.option.focus.background')};\n    color: ${dt('autocomplete.option.focus.color')};\n}\n\n.p-autocomplete-option-selected {\n    background: ${dt('autocomplete.option.selected.background')};\n    color: ${dt('autocomplete.option.selected.color')};\n}\n\n.p-autocomplete-option-selected.p-focus {\n    background: ${dt('autocomplete.option.selected.focus.background')};\n    color: ${dt('autocomplete.option.selected.focus.color')};\n}\n\n.p-autocomplete-option-group {\n    margin: 0;\n    padding: ${dt('autocomplete.option.group.padding')};\n    color: ${dt('autocomplete.option.group.color')};\n    background: ${dt('autocomplete.option.group.background')};\n    font-weight: ${dt('autocomplete.option.group.font.weight')};\n}\n\n.p-autocomplete-input-multiple {\n    margin: 0;\n    list-style-type: none;\n    cursor: text;\n    overflow: hidden;\n    display: flex;\n    align-items: center;\n    flex-wrap: wrap;\n    padding: calc(${dt('autocomplete.padding.y')} / 2) ${dt('autocomplete.padding.x')};\n    gap: calc(${dt('autocomplete.padding.y')} / 2);\n    color: ${dt('autocomplete.color')};\n    background: ${dt('autocomplete.background')};\n    border: 1px solid ${dt('autocomplete.border.color')};\n    border-radius: ${dt('autocomplete.border.radius')};\n    width: 100%;\n    transition: background ${dt('autocomplete.transition.duration')}, color ${dt('autocomplete.transition.duration')}, border-color ${dt('autocomplete.transition.duration')}, outline-color ${dt('autocomplete.transition.duration')}, box-shadow ${dt(\n    'autocomplete.transition.duration'\n)};\n    outline-color: transparent;\n    box-shadow: ${dt('autocomplete.shadow')};\n}\n\n.p-autocomplete:not(.p-disabled):hover .p-autocomplete-input-multiple {\n    border-color: ${dt('autocomplete.hover.border.color')};\n}\n\n.p-autocomplete:not(.p-disabled).p-focus .p-autocomplete-input-multiple {\n    border-color: ${dt('autocomplete.focus.border.color')};\n    box-shadow: ${dt('autocomplete.focus.ring.shadow')};\n    outline: ${dt('autocomplete.focus.ring.width')} ${dt('autocomplete.focus.ring.style')} ${dt('autocomplete.focus.ring.color')};\n    outline-offset: ${dt('autocomplete.focus.ring.offset')};\n}\n\n.p-autocomplete.p-invalid .p-autocomplete-input-multiple {\n    border-color: ${dt('autocomplete.invalid.border.color')};\n}\n\n.p-variant-filled.p-autocomplete-input-multiple {\n    background: ${dt('autocomplete.filled.background')};\n}\n\n.p-autocomplete:not(.p-disabled):hover .p-variant-filled.p-autocomplete-input-multiple {\n    background: ${dt('autocomplete.filled.hover.background')};\n}\n\n.p-autocomplete:not(.p-disabled).p-focus .p-variant-filled.p-autocomplete-input-multiple  {\n    background: ${dt('autocomplete.filled.focus.background')};\n}\n\n.p-autocomplete.p-disabled .p-autocomplete-input-multiple {\n    opacity: 1;\n    background: ${dt('autocomplete.disabled.background')};\n    color: ${dt('autocomplete.disabled.color')};\n}\n\n.p-autocomplete-chip.p-chip {\n    padding-block-start: calc(${dt('autocomplete.padding.y')} / 2);\n    padding-block-end: calc(${dt('autocomplete.padding.y')} / 2);\n    border-radius: ${dt('autocomplete.chip.border.radius')};\n}\n\n.p-autocomplete-input-multiple:has(.p-autocomplete-chip) {\n    padding-inline-start: calc(${dt('autocomplete.padding.y')} / 2);\n    padding-inline-end: calc(${dt('autocomplete.padding.y')} / 2);\n}\n\n.p-autocomplete-chip-item.p-focus .p-autocomplete-chip {\n    background: ${dt('autocomplete.chip.focus.background')};\n    color: ${dt('autocomplete.chip.focus.color')};\n}\n\n.p-autocomplete-input-chip {\n    flex: 1 1 auto;\n    display: inline-flex;\n    padding-block-start: calc(${dt('autocomplete.padding.y')} / 2);\n    padding-block-end: calc(${dt('autocomplete.padding.y')} / 2);\n}\n\n.p-autocomplete-input-chip input {\n    border: 0 none;\n    outline: 0 none;\n    background: transparent;\n    margin: 0;\n    padding: 0;\n    box-shadow: none;\n    border-radius: 0;\n    width: 100%;\n    font-family: inherit;\n    font-feature-settings: inherit;\n    font-size: 1rem;\n    color: inherit;\n}\n\n.p-autocomplete-input-chip input::placeholder {\n    color: ${dt('autocomplete.placeholder.color')};\n}\n\n.p-autocomplete.p-invalid .p-autocomplete-input-chip input::placeholder {\n    color: ${dt('autocomplete.invalid.placeholder.color')};\n}\n\n.p-autocomplete-empty-message {\n    padding: ${dt('autocomplete.empty.message.padding')};\n}\n\n.p-autocomplete-fluid {\n    display: flex;\n}\n\n.p-autocomplete-fluid:has(.p-autocomplete-dropdown) .p-autocomplete-input {\n    width: 1%;\n}\n\n.p-autocomplete:has(.p-inputtext-sm) .p-autocomplete-dropdown {\n    width: ${dt('autocomplete.dropdown.sm.width')};\n}\n\n.p-autocomplete:has(.p-inputtext-sm) .p-autocomplete-dropdown .p-icon {\n    font-size: ${dt('form.field.sm.font.size')};\n    width: ${dt('form.field.sm.font.size')};\n    height: ${dt('form.field.sm.font.size')};\n}\n\n.p-autocomplete:has(.p-inputtext-lg) .p-autocomplete-dropdown {\n    width: ${dt('autocomplete.dropdown.lg.width')};\n}\n\n.p-autocomplete:has(.p-inputtext-lg) .p-autocomplete-dropdown .p-icon {\n    font-size: ${dt('form.field.lg.font.size')};\n    width: ${dt('form.field.lg.font.size')};\n    height: ${dt('form.field.lg.font.size')};\n}\n`;\n\nconst inlineStyles = {\n    root: { position: 'relative' }\n};\n\nconst classes = {\n    root: ({ instance, props }) => [\n        'p-autocomplete p-component p-inputwrapper',\n        {\n            'p-disabled': props.disabled,\n            'p-invalid': instance.$invalid,\n            'p-focus': instance.focused,\n            'p-inputwrapper-filled': instance.$filled || isNotEmpty(instance.inputValue),\n            'p-inputwrapper-focus': instance.focused,\n            'p-autocomplete-open': instance.overlayVisible,\n            'p-autocomplete-fluid': instance.$fluid\n        }\n    ],\n    pcInputText: 'p-autocomplete-input',\n    inputMultiple: ({ props, instance }) => [\n        'p-autocomplete-input-multiple',\n        {\n            'p-variant-filled': instance.$variant === 'filled'\n        }\n    ],\n    chipItem: ({ instance, i }) => [\n        'p-autocomplete-chip-item',\n        {\n            'p-focus': instance.focusedMultipleOptionIndex === i\n        }\n    ],\n    pcChip: 'p-autocomplete-chip',\n    chipIcon: 'p-autocomplete-chip-icon',\n    inputChip: 'p-autocomplete-input-chip',\n    loader: 'p-autocomplete-loader',\n    dropdown: 'p-autocomplete-dropdown',\n    overlay: 'p-autocomplete-overlay p-component',\n    listContainer: 'p-autocomplete-list-container',\n    list: 'p-autocomplete-list',\n    optionGroup: 'p-autocomplete-option-group',\n    option: ({ instance, option, i, getItemOptions }) => [\n        'p-autocomplete-option',\n        {\n            'p-autocomplete-option-selected': instance.isSelected(option),\n            'p-focus': instance.focusedOptionIndex === instance.getOptionIndex(i, getItemOptions),\n            'p-disabled': instance.isOptionDisabled(option)\n        }\n    ],\n    emptyMessage: 'p-autocomplete-empty-message'\n};\n\nexport default BaseStyle.extend({\n    name: 'autocomplete',\n    theme,\n    classes,\n    inlineStyles\n});\n"],"mappings":";;AAGA,IAAMA,KAAK,GAAG,SAARA,KAAKA,CAAAC,IAAA;EAAA,IAAMC,EAAE,GAAAD,IAAA,CAAFC,EAAE;EAAA,iLAAAC,MAAA,CASKD,EAAE,CAAC,wBAAwB,CAAC,iHAAAC,MAAA,CAIvBD,EAAE,CAAC,6BAA6B,CAAC,SAAAC,MAAA,CAAMD,EAAE,CAAC,wBAAwB,CAAC,mjBAAAC,MAAA,CAsBnFD,EAAE,CAAC,6BAA6B,CAAC,sCAAAC,MAAA,CACfD,EAAE,CAAC,qCAAqC,CAAC,oCAAAC,MAAA,CAC3CD,EAAE,CAAC,qCAAqC,CAAC,yBAAAC,MAAA,CACpDD,EAAE,CAAC,kCAAkC,CAAC,+BAAAC,MAAA,CAChCD,EAAE,CAAC,oCAAoC,CAAC,sDAAAC,MAAA,CAEnDD,EAAE,CAAC,6BAA6B,CAAC,oCAAAC,MAAA,CACjBD,EAAE,CAAC,kCAAkC,CAAC,cAAAC,MAAA,CAAWD,EAAE,CAAC,kCAAkC,CAAC,qBAAAC,MAAA,CAAkBD,EAAE,CAAC,kCAAkC,CAAC,sBAAAC,MAAA,CAAmBD,EAAE,CAAC,kCAAkC,CAAC,mBAAAC,MAAA,CAAgBD,EAAE,CACnP,kCACJ,CAAC,gHAAAC,MAAA,CAKiBD,EAAE,CAAC,wCAAwC,CAAC,2BAAAC,MAAA,CAC1CD,EAAE,CAAC,0CAA0C,CAAC,oBAAAC,MAAA,CACrDD,EAAE,CAAC,mCAAmC,CAAC,gFAAAC,MAAA,CAIlCD,EAAE,CAAC,yCAAyC,CAAC,2BAAAC,MAAA,CAC3CD,EAAE,CAAC,2CAA2C,CAAC,oBAAAC,MAAA,CACtDD,EAAE,CAAC,oCAAoC,CAAC,wEAAAC,MAAA,CAInCD,EAAE,CAAC,yCAAyC,CAAC,sBAAAC,MAAA,CAChDD,EAAE,CAAC,wCAAwC,CAAC,OAAAC,MAAA,CAAID,EAAE,CAAC,wCAAwC,CAAC,OAAAC,MAAA,CAAID,EAAE,CAAC,wCAAwC,CAAC,6BAAAC,MAAA,CACrID,EAAE,CAAC,yCAAyC,CAAC,mLAAAC,MAAA,CAWjDD,EAAE,CAAC,iCAAiC,CAAC,oBAAAC,MAAA,CAC1CD,EAAE,CAAC,4BAA4B,CAAC,+BAAAC,MAAA,CACrBD,EAAE,CAAC,mCAAmC,CAAC,4BAAAC,MAAA,CAC1CD,EAAE,CAAC,oCAAoC,CAAC,yBAAAC,MAAA,CAC3CD,EAAE,CAAC,6BAA6B,CAAC,wMAAAC,MAAA,CAYxCD,EAAE,CAAC,uBAAuB,CAAC,sBAAAC,MAAA,CACvBD,EAAE,CAAC,2BAA2B,CAAC,mMAAAC,MAAA,CAU/BD,EAAE,CAAC,6BAA6B,CAAC,yCAAAC,MAAA,CAEnCD,EAAE,CAAC,2BAA2B,CAAC,kEAAAC,MAAA,CAEfD,EAAE,CAAC,kCAAkC,CAAC,cAAAC,MAAA,CAAWD,EAAE,CAAC,kCAAkC,CAAC,qBAAAC,MAAA,CAAkBD,EAAE,CAAC,kCAAkC,CAAC,4BAAAC,MAAA,CACvJD,EAAE,CAAC,mCAAmC,CAAC,sHAAAC,MAAA,CAI1CD,EAAE,CAAC,sCAAsC,CAAC,oBAAAC,MAAA,CAC/CD,EAAE,CAAC,iCAAiC,CAAC,iEAAAC,MAAA,CAIhCD,EAAE,CAAC,yCAAyC,CAAC,oBAAAC,MAAA,CAClDD,EAAE,CAAC,oCAAoC,CAAC,yEAAAC,MAAA,CAInCD,EAAE,CAAC,+CAA+C,CAAC,oBAAAC,MAAA,CACxDD,EAAE,CAAC,0CAA0C,CAAC,2EAAAC,MAAA,CAK5CD,EAAE,CAAC,mCAAmC,CAAC,oBAAAC,MAAA,CACzCD,EAAE,CAAC,iCAAiC,CAAC,yBAAAC,MAAA,CAChCD,EAAE,CAAC,sCAAsC,CAAC,0BAAAC,MAAA,CACzCD,EAAE,CAAC,uCAAuC,CAAC,4NAAAC,MAAA,CAW1CD,EAAE,CAAC,wBAAwB,CAAC,YAAAC,MAAA,CAASD,EAAE,CAAC,wBAAwB,CAAC,uBAAAC,MAAA,CACrED,EAAE,CAAC,wBAAwB,CAAC,yBAAAC,MAAA,CAC/BD,EAAE,CAAC,oBAAoB,CAAC,yBAAAC,MAAA,CACnBD,EAAE,CAAC,yBAAyB,CAAC,+BAAAC,MAAA,CACvBD,EAAE,CAAC,2BAA2B,CAAC,4BAAAC,MAAA,CAClCD,EAAE,CAAC,4BAA4B,CAAC,sDAAAC,MAAA,CAExBD,EAAE,CAAC,kCAAkC,CAAC,cAAAC,MAAA,CAAWD,EAAE,CAAC,kCAAkC,CAAC,qBAAAC,MAAA,CAAkBD,EAAE,CAAC,kCAAkC,CAAC,sBAAAC,MAAA,CAAmBD,EAAE,CAAC,kCAAkC,CAAC,mBAAAC,MAAA,CAAgBD,EAAE,CACnP,kCACJ,CAAC,0DAAAC,MAAA,CAEiBD,EAAE,CAAC,qBAAqB,CAAC,yGAAAC,MAAA,CAIvBD,EAAE,CAAC,iCAAiC,CAAC,2GAAAC,MAAA,CAIrCD,EAAE,CAAC,iCAAiC,CAAC,yBAAAC,MAAA,CACvCD,EAAE,CAAC,gCAAgC,CAAC,sBAAAC,MAAA,CACvCD,EAAE,CAAC,+BAA+B,CAAC,OAAAC,MAAA,CAAID,EAAE,CAAC,+BAA+B,CAAC,OAAAC,MAAA,CAAID,EAAE,CAAC,+BAA+B,CAAC,6BAAAC,MAAA,CAC1GD,EAAE,CAAC,gCAAgC,CAAC,4FAAAC,MAAA,CAItCD,EAAE,CAAC,mCAAmC,CAAC,iFAAAC,MAAA,CAIzCD,EAAE,CAAC,gCAAgC,CAAC,wHAAAC,MAAA,CAIpCD,EAAE,CAAC,sCAAsC,CAAC,2HAAAC,MAAA,CAI1CD,EAAE,CAAC,sCAAsC,CAAC,4GAAAC,MAAA,CAK1CD,EAAE,CAAC,kCAAkC,CAAC,oBAAAC,MAAA,CAC3CD,EAAE,CAAC,6BAA6B,CAAC,2EAAAC,MAAA,CAIdD,EAAE,CAAC,wBAAwB,CAAC,0CAAAC,MAAA,CAC9BD,EAAE,CAAC,wBAAwB,CAAC,iCAAAC,MAAA,CACrCD,EAAE,CAAC,iCAAiC,CAAC,yGAAAC,MAAA,CAIzBD,EAAE,CAAC,wBAAwB,CAAC,2CAAAC,MAAA,CAC9BD,EAAE,CAAC,wBAAwB,CAAC,6FAAAC,MAAA,CAIzCD,EAAE,CAAC,oCAAoC,CAAC,oBAAAC,MAAA,CAC7CD,EAAE,CAAC,+BAA+B,CAAC,0HAAAC,MAAA,CAMhBD,EAAE,CAAC,wBAAwB,CAAC,0CAAAC,MAAA,CAC9BD,EAAE,CAAC,wBAAwB,CAAC,6YAAAC,MAAA,CAmB7CD,EAAE,CAAC,gCAAgC,CAAC,oGAAAC,MAAA,CAIpCD,EAAE,CAAC,wCAAwC,CAAC,4DAAAC,MAAA,CAI1CD,EAAE,CAAC,oCAAoC,CAAC,8OAAAC,MAAA,CAY1CD,EAAE,CAAC,gCAAgC,CAAC,sGAAAC,MAAA,CAIhCD,EAAE,CAAC,yBAAyB,CAAC,oBAAAC,MAAA,CACjCD,EAAE,CAAC,yBAAyB,CAAC,qBAAAC,MAAA,CAC5BD,EAAE,CAAC,yBAAyB,CAAC,0FAAAC,MAAA,CAI9BD,EAAE,CAAC,gCAAgC,CAAC,sGAAAC,MAAA,CAIhCD,EAAE,CAAC,yBAAyB,CAAC,oBAAAC,MAAA,CACjCD,EAAE,CAAC,yBAAyB,CAAC,qBAAAC,MAAA,CAC5BD,EAAE,CAAC,yBAAyB,CAAC;AAAA,CAE1C;AAED,IAAME,YAAY,GAAG;EACjBC,IAAI,EAAE;IAAEC,QAAQ,EAAE;EAAW;AACjC,CAAC;AAED,IAAMC,OAAO,GAAG;EACZF,IAAI,EAAE,SAANA,IAAIA,CAAAG,KAAA;IAAA,IAAKC,QAAQ,GAAAD,KAAA,CAARC,QAAQ;MAAEC,KAAK,GAAAF,KAAA,CAALE,KAAK;IAAA,OAAO,CAC3B,2CAA2C,EAC3C;MACI,YAAY,EAAEA,KAAK,CAACC,QAAQ;MAC5B,WAAW,EAAEF,QAAQ,CAACG,QAAQ;MAC9B,SAAS,EAAEH,QAAQ,CAACI,OAAO;MAC3B,uBAAuB,EAAEJ,QAAQ,CAACK,OAAO,IAAIC,UAAU,CAACN,QAAQ,CAACO,UAAU,CAAC;MAC5E,sBAAsB,EAAEP,QAAQ,CAACI,OAAO;MACxC,qBAAqB,EAAEJ,QAAQ,CAACQ,cAAc;MAC9C,sBAAsB,EAAER,QAAQ,CAACS;IACrC,CAAC,CACJ;EAAA;EACDC,WAAW,EAAE,sBAAsB;EACnCC,aAAa,EAAE,SAAfA,aAAaA,CAAAC,KAAA;IAAUA,KAAA,CAALX,KAAK;QAAED,QAAQ,GAAAY,KAAA,CAARZ,QAAA;IAAQ,OAAO,CACpC,+BAA+B,EAC/B;MACI,kBAAkB,EAAEA,QAAQ,CAACa,QAAQ,KAAK;IAC9C,CAAC,CACJ;EAAA;EACDC,QAAQ,EAAE,SAAVA,QAAQA,CAAAC,KAAA;IAAA,IAAKf,QAAQ,GAAAe,KAAA,CAARf,QAAQ;MAAEgB,CAAC,GAAAD,KAAA,CAADC,CAAC;IAAA,OAAO,CAC3B,0BAA0B,EAC1B;MACI,SAAS,EAAEhB,QAAQ,CAACiB,0BAA0B,KAAKD;IACvD,CAAC,CACJ;EAAA;EACDE,MAAM,EAAE,qBAAqB;EAC7BC,QAAQ,EAAE,0BAA0B;EACpCC,SAAS,EAAE,2BAA2B;EACtCC,MAAM,EAAE,uBAAuB;EAC/BC,QAAQ,EAAE,yBAAyB;EACnCC,OAAO,EAAE,oCAAoC;EAC7CC,aAAa,EAAE,+BAA+B;EAC9CC,IAAI,EAAE,qBAAqB;EAC3BC,WAAW,EAAE,6BAA6B;EAC1CC,MAAM,EAAE,SAARA,MAAMA,CAAAC,KAAA;IAAA,IAAK5B,QAAQ,GAAA4B,KAAA,CAAR5B,QAAQ;MAAE6B,OAAM,GAAAD,KAAA,CAAND,MAAM;MAAEX,CAAC,GAAAY,KAAA,CAADZ,CAAC;MAAEc,cAAc,GAAAF,KAAA,CAAdE,cAAc;IAAA,OAAO,CACjD,uBAAuB,EACvB;MACI,gCAAgC,EAAE9B,QAAQ,CAAC+B,UAAU,CAACF,OAAM,CAAC;MAC7D,SAAS,EAAE7B,QAAQ,CAACgC,kBAAkB,KAAKhC,QAAQ,CAACiC,cAAc,CAACjB,CAAC,EAAEc,cAAc,CAAC;MACrF,YAAY,EAAE9B,QAAQ,CAACkC,gBAAgB,CAACL,OAAM;IAClD,CAAC,CACJ;EAAA;EACDM,YAAY,EAAE;AAClB,CAAC;AAED,IAAAC,iBAAA,GAAeC,SAAS,CAACC,MAAM,CAAC;EAC5BC,IAAI,EAAE,cAAc;EACpBhD,KAAK,EAALA,KAAK;EACLO,OAAO,EAAPA,OAAO;EACPH,YAAY,EAAZA;AACJ,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}