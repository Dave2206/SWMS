{"ast":null,"code":"import { mergeProps, openBlock, createBlock, resolveDynamicComponent, withCtx, renderSlot, normalizeClass } from 'vue';\nimport BaseComponent from '@primevue/core/basecomponent';\nimport AccordionPanelStyle from 'primevue/accordionpanel/style';\nvar script$1 = {\n  name: 'BaseAccordionPanel',\n  \"extends\": BaseComponent,\n  props: {\n    value: {\n      type: [String, Number],\n      \"default\": undefined\n    },\n    disabled: {\n      type: Boolean,\n      \"default\": false\n    },\n    as: {\n      type: [String, Object],\n      \"default\": 'DIV'\n    },\n    asChild: {\n      type: Boolean,\n      \"default\": false\n    }\n  },\n  style: AccordionPanelStyle,\n  provide: function provide() {\n    return {\n      $pcAccordionPanel: this,\n      $parentInstance: this\n    };\n  }\n};\nvar script = {\n  name: 'AccordionPanel',\n  \"extends\": script$1,\n  inheritAttrs: false,\n  inject: ['$pcAccordion'],\n  computed: {\n    active: function active() {\n      return this.$pcAccordion.isItemActive(this.value);\n    },\n    attrs: function attrs() {\n      return mergeProps(this.a11yAttrs, this.ptmi('root', this.ptParams));\n    },\n    a11yAttrs: function a11yAttrs() {\n      return {\n        'data-pc-name': 'accordionpanel',\n        'data-p-disabled': this.disabled,\n        'data-p-active': this.active\n      };\n    },\n    ptParams: function ptParams() {\n      return {\n        context: {\n          active: this.active\n        }\n      };\n    }\n  }\n};\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  return !_ctx.asChild ? (openBlock(), createBlock(resolveDynamicComponent(_ctx.as), mergeProps({\n    key: 0,\n    \"class\": _ctx.cx('root')\n  }, $options.attrs), {\n    \"default\": withCtx(function () {\n      return [renderSlot(_ctx.$slots, \"default\")];\n    }),\n    _: 3\n  }, 16, [\"class\"])) : renderSlot(_ctx.$slots, \"default\", {\n    key: 1,\n    \"class\": normalizeClass(_ctx.cx('root')),\n    active: $options.active,\n    a11yAttrs: $options.a11yAttrs\n  });\n}\nscript.render = render;\nexport { script as default };","map":{"version":3,"names":["script$1","name","BaseComponent","props","value","type","String","Number","undefined","disabled","Boolean","as","Object","asChild","style","AccordionPanelStyle","provide","$pcAccordionPanel","$parentInstance","script","inheritAttrs","inject","computed","active","$pcAccordion","isItemActive","attrs","mergeProps","a11yAttrs","ptmi","ptParams","context","_ctx","openBlock","createBlock","resolveDynamicComponent","cx","$options","renderSlot","$slots","normalizeClass"],"sources":["../../src/accordionpanel/BaseAccordionPanel.vue","../../src/accordionpanel/AccordionPanel.vue","../../src/accordionpanel/AccordionPanel.vue?vue&type=template&id=37e9bce5&lang.js"],"sourcesContent":["<script>\nimport BaseComponent from '@primevue/core/basecomponent';\nimport AccordionPanelStyle from 'primevue/accordionpanel/style';\n\nexport default {\n    name: 'BaseAccordionPanel',\n    extends: BaseComponent,\n    props: {\n        value: {\n            type: [String, Number],\n            default: undefined\n        },\n        disabled: {\n            type: Boolean,\n            default: false\n        },\n        as: {\n            type: [String, Object],\n            default: 'DIV'\n        },\n        asChild: {\n            type: Boolean,\n            default: false\n        }\n    },\n    style: AccordionPanelStyle,\n    provide() {\n        return {\n            $pcAccordionPanel: this,\n            $parentInstance: this\n        };\n    }\n};\n</script>\n","<template>\n    <component v-if=\"!asChild\" :is=\"as\" :class=\"cx('root')\" v-bind=\"attrs\">\n        <slot></slot>\n    </component>\n    <slot v-else :class=\"cx('root')\" :active=\"active\" :a11yAttrs=\"a11yAttrs\"></slot>\n</template>\n\n<script>\nimport { mergeProps } from 'vue';\nimport BaseAccordionPanel from './BaseAccordionPanel.vue';\n\nexport default {\n    name: 'AccordionPanel',\n    extends: BaseAccordionPanel,\n    inheritAttrs: false,\n    inject: ['$pcAccordion'],\n    computed: {\n        active() {\n            return this.$pcAccordion.isItemActive(this.value);\n        },\n        attrs() {\n            return mergeProps(this.a11yAttrs, this.ptmi('root', this.ptParams));\n        },\n        a11yAttrs() {\n            return {\n                'data-pc-name': 'accordionpanel',\n                'data-p-disabled': this.disabled,\n                'data-p-active': this.active\n            };\n        },\n        ptParams() {\n            return {\n                context: {\n                    active: this.active\n                }\n            };\n        }\n    }\n};\n</script>\n","<template>\n    <component v-if=\"!asChild\" :is=\"as\" :class=\"cx('root')\" v-bind=\"attrs\">\n        <slot></slot>\n    </component>\n    <slot v-else :class=\"cx('root')\" :active=\"active\" :a11yAttrs=\"a11yAttrs\"></slot>\n</template>\n\n<script>\nimport { mergeProps } from 'vue';\nimport BaseAccordionPanel from './BaseAccordionPanel.vue';\n\nexport default {\n    name: 'AccordionPanel',\n    extends: BaseAccordionPanel,\n    inheritAttrs: false,\n    inject: ['$pcAccordion'],\n    computed: {\n        active() {\n            return this.$pcAccordion.isItemActive(this.value);\n        },\n        attrs() {\n            return mergeProps(this.a11yAttrs, this.ptmi('root', this.ptParams));\n        },\n        a11yAttrs() {\n            return {\n                'data-pc-name': 'accordionpanel',\n                'data-p-disabled': this.disabled,\n                'data-p-active': this.active\n            };\n        },\n        ptParams() {\n            return {\n                context: {\n                    active: this.active\n                }\n            };\n        }\n    }\n};\n</script>\n"],"mappings":";;;AAIA,IAAAA,QAAA,GAAe;EACXC,IAAI,EAAE,oBAAoB;EAC1B,WAASC,aAAa;EACtBC,KAAK,EAAE;IACHC,KAAK,EAAE;MACHC,IAAI,EAAE,CAACC,MAAM,EAAEC,MAAM,CAAC;MACtB,SAAS,EAAAC;KACZ;IACDC,QAAQ,EAAE;MACNJ,IAAI,EAAEK,OAAO;MACb,SAAS;KACZ;IACDC,EAAE,EAAE;MACAN,IAAI,EAAE,CAACC,MAAM,EAAEM,MAAM,CAAC;MACtB,SAAS;KACZ;IACDC,OAAO,EAAE;MACLR,IAAI,EAAEK,OAAO;MACb,SAAS;IACb;GACH;EACDI,KAAK,EAAEC,mBAAmB;EAC1BC,OAAO,WAAPA,OAAOA,CAAA,EAAG;IACN,OAAO;MACHC,iBAAiB,EAAE,IAAI;MACvBC,eAAe,EAAE;KACpB;EACL;AACJ,CAAC;ACrBD,IAAAC,MAAA,GAAe;EACXlB,IAAI,EAAE,gBAAgB;EACtB,WAASD,QAAkB;EAC3BoB,YAAY,EAAE,KAAK;EACnBC,MAAM,EAAE,CAAC,cAAc,CAAC;EACxBC,QAAQ,EAAE;IACNC,MAAM,WAANA,MAAMA,CAAA,EAAG;MACL,OAAO,IAAI,CAACC,YAAY,CAACC,YAAY,CAAC,IAAI,CAACrB,KAAK,CAAC;KACpD;IACDsB,KAAK,WAALA,KAAKA,CAAA,EAAG;MACJ,OAAOC,UAAU,CAAC,IAAI,CAACC,SAAS,EAAE,IAAI,CAACC,IAAI,CAAC,MAAM,EAAE,IAAI,CAACC,QAAQ,CAAC,CAAC;KACtE;IACDF,SAAS,WAATA,SAASA,CAAA,EAAG;MACR,OAAO;QACH,cAAc,EAAE,gBAAgB;QAChC,iBAAiB,EAAE,IAAI,CAACnB,QAAQ;QAChC,eAAe,EAAE,IAAI,CAACc;OACzB;KACJ;IACDO,QAAQ,WAARA,QAAQA,CAAA,EAAG;MACP,OAAO;QACHC,OAAO,EAAE;UACLR,MAAM,EAAE,IAAI,CAACA;QACjB;OACH;IACL;EACJ;AACJ,CAAC;;UCrCqBS,IAAO,CAAAnB,OAAA,IAAAoB,SAAA,IAAzBC,WAEW,CAAAC,uBAAA,CAFqBH,IAAE,CAAArB,EAAA,GAAlCgB,UAEW;;IAF0B,SAAOK,IAAE,CAAAI,EAAA;KAAkBC,QAAK,CAAAX,KAAA;uBACjE;MAAA,OAAY,CAAZY,UAAY,CAAAN,IAAA,CAAAO,MAAA;;;uBAEhBD,UAA+E,CAAAN,IAAA,CAAAO,MAAA;;IAAjE,SAAAC,cAAA,CAAOR,IAAE,CAAAI,EAAA;IAAWb,MAAM,EAAEc,QAAM,CAAAd,MAAA;IAAGK,SAAS,EAAES,QAAS,CAAAT","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}