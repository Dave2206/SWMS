{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport axios from 'axios';\nexport default {\n  name: \"HeaderVue\",\n  data() {\n    return {\n      showLoginModal: false,\n      // Controls modal visibility\n      isLoggedIn: false,\n      // Indicates if the user is logged in\n      email: '',\n      // email input field\n      password: '',\n      // Password input field\n      userRole: 'CZN',\n      // Default to CZN if no user is logged in\n      menuItems: [{\n        label: 'Announcement',\n        icon: 'pi pi-megaphone',\n        command: () => this.navigateTo('AnnouncementPage')\n      }, {\n        label: 'Concerns',\n        icon: 'pi pi-comments',\n        command: () => this.navigateTo('ConcernPage')\n      }, {\n        label: 'Messages',\n        icon: 'pi pi-envelope',\n        command: () => this.navigateTo('MessagePage')\n      }, {\n        label: 'Reports and Analytics',\n        icon: 'pi pi-file',\n        command: () => this.navigateTo('ReportPage')\n      }, {\n        label: 'Account Management',\n        icon: 'pi pi-users',\n        command: () => this.navigateTo('AccountManagementPage')\n      }]\n    };\n  },\n  computed: {\n    filteredMenuItems() {\n      // Filter menu items based on the user's role\n      if (!this.isLoggedIn) {\n        return []; // No menu items are shown when not logged in\n      }\n\n      // Filter according to the role\n      if (this.userRole === 'LGU') {\n        return this.menuItems.filter(item => item.label !== 'Reports and Analytics' && item.label !== 'Concerns' && item.label !== 'Account Management');\n      }\n      if (this.userRole === 'BGY_admin') {\n        return this.menuItems.filter(item => item.label !== 'Reports and Analytics' && item.label !== 'Account Management');\n      }\n      if (this.userRole === 'DVR') {\n        return this.menuItems.filter(item => item.label === 'Messages');\n      }\n      if (this.userRole === 'CZN') {\n        return this.menuItems.filter(item => item.label === 'Announcement');\n      }\n      return this.menuItems; // Default for super admin and anyone else with all access\n    }\n  },\n  methods: {\n    async login() {\n      try {\n        const response = await axios.post('http://127.0.0.1:8000/api/login', {\n          email: this.email,\n          password: this.password\n        });\n\n        // Store the token in localStorage\n        localStorage.setItem('auth_token', response.data.access_token);\n\n        // Set token in the default axios header for subsequent requests\n        // Before making the request, set the Authorization header in Axios\n        axios.defaults.headers.common['Authorization'] = `Bearer ${localStorage.getItem('auth_token')}`;\n        this.isLoggedIn = true; // Set login state to true\n        this.showLoginModal = false; // Close the modal after login\n        // Optionally redirect or update the UI\n        this.$router.push('/DashboardPage');\n      } catch (error) {\n        console.error('Login failed:', error);\n      }\n    },\n    logout() {\n      // Handle logout logic\n      console.log('Logging out');\n      this.isLoggedIn = false; // Set login state to false\n      this.userRole = 'CZN'; // Reset to default role when logged out\n    },\n    navigateTo(route) {\n      console.log(`Navigating to ${route}`);\n      // Replace with actual navigation logic, e.g.,\n      this.$router.push(`/${route}`);\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","showLoginModal","isLoggedIn","email","password","userRole","menuItems","label","icon","command","navigateTo","computed","filteredMenuItems","filter","item","methods","login","response","post","localStorage","setItem","access_token","defaults","headers","common","getItem","$router","push","error","console","logout","log","route"],"sources":["C:\\Users\\darle\\solid-waste-management-system\\src\\components\\Header.vue"],"sourcesContent":["<template>\r\n  <div class=\"header-container shadow-md\">\r\n    <!-- Menu Bar (always visible, but menu items will be filtered) -->\r\n    <Menubar :model=\"filteredMenuItems\">\r\n      <template #start>\r\n        <span class=\"text-xl font-bold text-gray-800\">Solid Waste Management System</span>\r\n      </template>\r\n      <template #end>\r\n        <!-- Button to trigger the login modal if not logged in, or logout if logged in -->\r\n        <Button \r\n          v-if=\"!isLoggedIn\" \r\n          label=\"Login\" \r\n          icon=\"pi pi-user\" \r\n          class=\"p-button-outlined p-button-lg\" \r\n          @click=\"showLoginModal = true\" \r\n        />\r\n        <Button \r\n          v-if=\"isLoggedIn\" \r\n          label=\"Logout\" \r\n          icon=\"pi pi-sign-out\" \r\n          class=\"p-button-outlined p-button-lg\" \r\n          @click=\"logout\" \r\n        />\r\n      </template>\r\n    </Menubar>\r\n  </div>\r\n\r\n  <!-- Login Modal -->\r\n  <Dialog \r\n    header=\"Login\" \r\n    v-model:visible=\"showLoginModal\" \r\n    modal \r\n    class=\"login-modal p-dialog-lg\" \r\n    style=\"width: 40vw; max-width: 500px;\">\r\n  \r\n    <!-- Logo -->\r\n    <div class=\"flex justify-center mb-6\">\r\n      <img src=\"assets/logo.png\" alt=\"Logo\" class=\"h-25 w-auto\" />\r\n    </div>\r\n    \r\n    <div class=\"p-fluid\">\r\n      <!-- email Field -->\r\n      <div class=\"p-field mb-4\">\r\n        <label for=\"email\" class=\"block text-lg font-medium text-gray-700 mb-2\">Email</label>\r\n          <InputText \r\n            id=\"email\" \r\n            v-model=\"email\" \r\n            placeholder=\"Enter your email\" \r\n            class=\"p-inputtext-lg w-full\" />\r\n      </div>\r\n\r\n      <!-- Password Field -->\r\n      <div class=\"p-field mb-6\">\r\n        <label for=\"password\" class=\"block text-lg font-medium text-gray-700 mb-2\">Password</label>\r\n          <InputText \r\n            type=\"password\" \r\n            id=\"password\" \r\n            v-model=\"password\" \r\n            placeholder=\"Enter your password\" \r\n            class=\"p-inputtext-lg w-full\" \r\n            feedback />\r\n      </div>\r\n\r\n      <!-- Button Container -->\r\n      <div class=\"p-field button-container\">\r\n        <Button \r\n          label=\"Login\" \r\n          icon=\"pi pi-sign-in\" \r\n          class=\"p-button-lg p-button-success w-full login-btn\" \r\n          @click=\"login\" />\r\n      </div>\r\n    </div>\r\n  </Dialog>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  name: \"HeaderVue\",\r\n  data() {\r\n    return {\r\n      showLoginModal: false, // Controls modal visibility\r\n      isLoggedIn: false, // Indicates if the user is logged in\r\n      email: '', // email input field\r\n      password: '', // Password input field\r\n      userRole: 'CZN', // Default to CZN if no user is logged in\r\n      menuItems: [\r\n        { label: 'Announcement', icon: 'pi pi-megaphone', command: () => this.navigateTo('AnnouncementPage') },\r\n        { label: 'Concerns', icon: 'pi pi-comments', command: () => this.navigateTo('ConcernPage') },\r\n        { label: 'Messages', icon: 'pi pi-envelope', command: () => this.navigateTo('MessagePage') },\r\n        { label: 'Reports and Analytics', icon: 'pi pi-file', command: () => this.navigateTo('ReportPage') },\r\n        { label: 'Account Management', icon: 'pi pi-users', command: () => this.navigateTo('AccountManagementPage') },\r\n      ],\r\n    };\r\n  },\r\n  computed: {\r\n    filteredMenuItems() {\r\n      // Filter menu items based on the user's role\r\n      if (!this.isLoggedIn) {\r\n        return []; // No menu items are shown when not logged in\r\n      }\r\n\r\n      // Filter according to the role\r\n      if (this.userRole === 'LGU') {\r\n        return this.menuItems.filter(item => item.label !== 'Reports and Analytics' && item.label !== 'Concerns' && item.label !== 'Account Management');\r\n      }\r\n      if (this.userRole === 'BGY_admin') {\r\n        return this.menuItems.filter(item => item.label !== 'Reports and Analytics' && item.label !== 'Account Management');\r\n      }\r\n      if (this.userRole === 'DVR') {\r\n        return this.menuItems.filter(item => item.label === 'Messages');\r\n      }\r\n      if (this.userRole === 'CZN') {\r\n        return this.menuItems.filter(item => item.label === 'Announcement');\r\n      }\r\n      return this.menuItems; // Default for super admin and anyone else with all access\r\n    }\r\n  },\r\n  methods: {\r\n    async login() {\r\n      try {\r\n        const response = await axios.post('http://127.0.0.1:8000/api/login', {\r\n          email: this.email,\r\n          password: this.password,\r\n        });\r\n\r\n        // Store the token in localStorage\r\n        localStorage.setItem('auth_token', response.data.access_token);\r\n\r\n        // Set token in the default axios header for subsequent requests\r\n       // Before making the request, set the Authorization header in Axios\r\n        axios.defaults.headers.common['Authorization'] = `Bearer ${localStorage.getItem('auth_token')}`;\r\n\r\n        \r\n        this.isLoggedIn = true; // Set login state to true\r\n        this.showLoginModal = false; // Close the modal after login\r\n        // Optionally redirect or update the UI\r\n        this.$router.push('/DashboardPage');\r\n      } catch (error) {\r\n        console.error('Login failed:', error);\r\n      }\r\n    },\r\n    logout() {\r\n      // Handle logout logic\r\n      console.log('Logging out');\r\n      this.isLoggedIn = false; // Set login state to false\r\n      this.userRole = 'CZN'; // Reset to default role when logged out\r\n    },\r\n    navigateTo(route) {\r\n      console.log(`Navigating to ${route}`);\r\n      // Replace with actual navigation logic, e.g.,\r\n      this.$router.push(`/${route}`);\r\n    }\r\n  }\r\n};\r\n</script>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}