{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, withModifiers as _withModifiers } from \"vue\";\nconst _hoisted_1 = {\n  class: \"complaint-form\"\n};\nconst _hoisted_2 = {\n  class: \"form-container\"\n};\nconst _hoisted_3 = {\n  class: \"p-field\"\n};\nconst _hoisted_4 = {\n  class: \"p-field\"\n};\nconst _hoisted_5 = {\n  class: \"p-field\"\n};\nconst _hoisted_6 = {\n  class: \"p-field\"\n};\nconst _hoisted_7 = {\n  key: 0,\n  id: \"map\",\n  style: {\n    \"height\": \"300px\",\n    \"width\": \"100%\",\n    \"margin-top\": \"1em\"\n  }\n};\nconst _hoisted_8 = {\n  class: \"p-field\"\n};\nconst _hoisted_9 = {\n  class: \"p-field\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Select = _resolveComponent(\"Select\");\n  const _component_InputText = _resolveComponent(\"InputText\");\n  const _component_Button = _resolveComponent(\"Button\");\n  const _component_Textarea = _resolveComponent(\"Textarea\");\n  const _component_FileUpload = _resolveComponent(\"FileUpload\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_cache[11] || (_cache[11] = _createElementVNode(\"h2\", null, \"Submit a Solid Waste Disposal Complaint\", -1 /* HOISTED */)), _createElementVNode(\"form\", {\n    onSubmit: _cache[5] || (_cache[5] = _withModifiers((...args) => $setup.submitComplaint && $setup.submitComplaint(...args), [\"prevent\"]))\n  }, [_createCommentVNode(\" Subject Dropdown \"), _createElementVNode(\"div\", _hoisted_3, [_cache[6] || (_cache[6] = _createElementVNode(\"label\", {\n    for: \"subject\"\n  }, \"Subject:\", -1 /* HOISTED */)), _createVNode(_component_Select, {\n    modelValue: $setup.form.subject,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.form.subject = $event),\n    options: $setup.subjectOptions,\n    optionLabel: \"label\",\n    optionValue: \"value\",\n    placeholder: \"Select Subject\",\n    required: \"\",\n    class: \"w-full\"\n  }, null, 8 /* PROPS */, [\"modelValue\", \"options\"])]), _createCommentVNode(\" Email Input \"), _createElementVNode(\"div\", _hoisted_4, [_cache[7] || (_cache[7] = _createElementVNode(\"label\", {\n    for: \"email\"\n  }, \"Email:\", -1 /* HOISTED */)), _createVNode(_component_InputText, {\n    modelValue: $setup.form.email,\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.form.email = $event),\n    id: \"email\",\n    type: \"email\",\n    placeholder: \"Enter your email\",\n    required: \"\",\n    class: \"w-full\"\n  }, null, 8 /* PROPS */, [\"modelValue\"])]), _createCommentVNode(\" Address Input \"), _createElementVNode(\"div\", _hoisted_5, [_cache[8] || (_cache[8] = _createElementVNode(\"label\", {\n    for: \"address\"\n  }, \"Address:\", -1 /* HOISTED */)), _createVNode(_component_InputText, {\n    modelValue: $setup.form.address,\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.form.address = $event),\n    id: \"address\",\n    type: \"text\",\n    placeholder: \"Click on map to select address\",\n    readonly: \"\",\n    class: \"w-full\"\n  }, null, 8 /* PROPS */, [\"modelValue\"])]), _createCommentVNode(\" Get My Location Button \"), _createElementVNode(\"div\", _hoisted_6, [_createVNode(_component_Button, {\n    label: \"Get My Location\",\n    icon: \"pi pi-location\",\n    onClick: $setup.getUserLocation,\n    class: \"p-button-primary w-full\"\n  }, null, 8 /* PROPS */, [\"onClick\"])]), _createCommentVNode(\" Map Display (Visible only after clicking 'Get My Location') \"), $setup.showMap ? (_openBlock(), _createElementBlock(\"div\", _hoisted_7)) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Description Textarea \"), _createElementVNode(\"div\", _hoisted_8, [_cache[9] || (_cache[9] = _createElementVNode(\"label\", {\n    for: \"description\"\n  }, \"Description:\", -1 /* HOISTED */)), _createVNode(_component_Textarea, {\n    modelValue: $setup.form.description,\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $setup.form.description = $event),\n    id: \"description\",\n    rows: \"5\",\n    placeholder: \"Describe the issue\",\n    required: \"\",\n    class: \"w-full\"\n  }, null, 8 /* PROPS */, [\"modelValue\"])]), _createCommentVNode(\" File Upload \"), _createElementVNode(\"div\", _hoisted_9, [_cache[10] || (_cache[10] = _createElementVNode(\"label\", {\n    for: \"file\"\n  }, \"Attachment:\", -1 /* HOISTED */)), _createVNode(_component_FileUpload, {\n    modelValue: $setup.form.file,\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $setup.form.file = $event),\n    name: \"file\",\n    chooseLabel: \"Choose File\",\n    uploadLabel: \"Upload\",\n    class: \"w-full\"\n  }, null, 8 /* PROPS */, [\"modelValue\"])]), _createCommentVNode(\" Submit Button \"), _createVNode(_component_Button, {\n    label: \"Submit Complaint\",\n    type: \"submit\",\n    icon: \"pi pi-send\",\n    class: \"p-button-rounded p-button-success w-full\"\n  })], 32 /* NEED_HYDRATION */)])]);\n}","map":{"version":3,"names":["class","key","id","style","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","onSubmit","_cache","_withModifiers","args","$setup","submitComplaint","_createCommentVNode","_hoisted_3","for","_createVNode","_component_Select","modelValue","form","subject","$event","options","subjectOptions","optionLabel","optionValue","placeholder","required","_hoisted_4","_component_InputText","email","type","_hoisted_5","address","readonly","_hoisted_6","_component_Button","label","icon","onClick","getUserLocation","showMap","_hoisted_7","_hoisted_8","_component_Textarea","description","rows","_hoisted_9","_component_FileUpload","file","name","chooseLabel","uploadLabel"],"sources":["C:\\Users\\darle\\solid-waste-management-system\\src\\components\\ComplainPage.vue"],"sourcesContent":["<template>\r\n  <div class=\"complaint-form\">\r\n    <div class=\"form-container\">\r\n      <h2>Submit a Solid Waste Disposal Complaint</h2>\r\n      \r\n      <form @submit.prevent=\"submitComplaint\">\r\n        <!-- Subject Dropdown -->\r\n        <div class=\"p-field\">\r\n          <label for=\"subject\">Subject:</label>\r\n          <Select v-model=\"form.subject\" :options=\"subjectOptions\" optionLabel=\"label\" optionValue=\"value\" placeholder=\"Select Subject\" required class=\"w-full\"/>\r\n        </div>\r\n\r\n        <!-- Email Input -->\r\n        <div class=\"p-field\">\r\n          <label for=\"email\">Email:</label>\r\n          <InputText v-model=\"form.email\" id=\"email\" type=\"email\" placeholder=\"Enter your email\" required class=\"w-full\"/>\r\n        </div>\r\n\r\n        <!-- Address Input -->\r\n        <div class=\"p-field\">\r\n          <label for=\"address\">Address:</label>\r\n          <InputText v-model=\"form.address\" id=\"address\" type=\"text\" placeholder=\"Click on map to select address\" readonly class=\"w-full\"/>\r\n        </div>\r\n\r\n        <!-- Get My Location Button -->\r\n        <div class=\"p-field\">\r\n          <Button label=\"Get My Location\" icon=\"pi pi-location\" @click=\"getUserLocation\" class=\"p-button-primary w-full\"/>\r\n        </div>\r\n\r\n        <!-- Map Display (Visible only after clicking 'Get My Location') -->\r\n        <div v-if=\"showMap\" id=\"map\" style=\"height: 300px; width: 100%; margin-top: 1em;\"></div>\r\n\r\n        <!-- Description Textarea -->\r\n        <div class=\"p-field\">\r\n          <label for=\"description\">Description:</label>\r\n          <Textarea v-model=\"form.description\" id=\"description\" rows=\"5\" placeholder=\"Describe the issue\" required class=\"w-full\"/>\r\n        </div>\r\n\r\n        <!-- File Upload -->\r\n        <div class=\"p-field\">\r\n          <label for=\"file\">Attachment:</label>\r\n          <FileUpload v-model=\"form.file\" name=\"file\" chooseLabel=\"Choose File\" uploadLabel=\"Upload\" class=\"w-full\"/>\r\n        </div>\r\n\r\n        <!-- Submit Button -->\r\n        <Button label=\"Submit Complaint\" type=\"submit\" icon=\"pi pi-send\" class=\"p-button-rounded p-button-success w-full\" />\r\n      </form>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, nextTick } from 'vue';\r\nimport Select from 'primevue/select';\r\nimport  InputText  from 'primevue/inputtext';\r\nimport  Textarea  from 'primevue/textarea';\r\nimport  FileUpload  from 'primevue/fileupload';\r\nimport  Button  from 'primevue/button';\r\nimport L from 'leaflet';\r\n\r\nexport default {\r\n  name: \"ComplainPage\",\r\n  components: {\r\n    Select,\r\n    InputText,\r\n    Textarea,\r\n    FileUpload,\r\n    Button\r\n  },\r\n  setup() {\r\n    const subjectOptions = [\r\n      { label: 'Garbage not picked up', value: 'garbage_not_picked_up' },\r\n      { label: 'No garbage pickup truck', value: 'no_garbage_truck' },\r\n      { label: 'Request for garbage pickup', value: 'request_pickup' },\r\n      { label: 'Too many garbage on the streets', value: 'too_much_garbage' }\r\n    ];\r\n\r\n    const form = ref({\r\n      subject: null,\r\n      email: '',\r\n      address: '',\r\n      description: '',\r\n      file: null,\r\n      latitude: null,\r\n      longitude: null\r\n    });\r\n\r\n    const showMap = ref(false); // Controls map visibility\r\n    let map;\r\n    let marker;\r\n\r\n    const initMap = () => {\r\n      // Initialize the map only after the container is available\r\n      nextTick(() => {\r\n        if (!map) {\r\n          map = L.map('map').setView([51.505, -0.09], 13); // Default to a specific lat/lon (London)\r\n          \r\n          // Tile layer (OpenStreetMap)\r\n          L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\r\n            attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n          }).addTo(map);\r\n\r\n          // Add a default marker at the center of the map\r\n          marker = L.marker([51.505, -0.09], { draggable: true }).addTo(map);\r\n\r\n          // Listen for marker drag and update address\r\n          marker.on('dragend', function(e) {\r\n            const latLng = e.target.getLatLng();\r\n            fetchAddress(latLng.lat, latLng.lng);\r\n          });\r\n\r\n          // Listen for map click to add a marker\r\n          map.on('click', function(e) {\r\n            const latLng = e.latlng;\r\n            marker.setLatLng(latLng);\r\n            fetchAddress(latLng.lat, latLng.lng);\r\n          });\r\n        }\r\n      });\r\n    };\r\n\r\n    // Fetch address from reverse geocoding API (OpenStreetMap Nominatim API)\r\n    const fetchAddress = async (lat, lon) => {\r\n      const response = await fetch(`https://nominatim.openstreetmap.org/reverse?format=json&lat=${lat}&lon=${lon}&addressdetails=1`);\r\n      const data = await response.json();\r\n      if (data && data.address) {\r\n        const address = `${data.address.road || ''}, ${data.address.city || ''}, ${data.address.country || ''}`;\r\n        form.value.address = address;\r\n        form.value.latitude = lat;\r\n        form.value.longitude = lon;\r\n      }\r\n    };\r\n\r\n    // Function to get the user's current location\r\n    const getUserLocation = () => {\r\n      if (navigator.geolocation) {\r\n        navigator.geolocation.getCurrentPosition((position) => {\r\n          const { latitude, longitude } = position.coords;\r\n          form.value.latitude = latitude;\r\n          form.value.longitude = longitude;\r\n          form.value.address = 'Getting address...';\r\n\r\n          // Center map to user's location\r\n          if (showMap.value) {\r\n            map.setView([latitude, longitude], 13);\r\n            marker.setLatLng([latitude, longitude]);\r\n            fetchAddress(latitude, longitude);\r\n          }\r\n        });\r\n      } else {\r\n        alert(\"Geolocation is not supported by this browser.\");\r\n      }\r\n      showMap.value = true; // Show map after clicking the button\r\n      initMap(); // Initialize map after clicking\r\n    };\r\n\r\n    const submitComplaint = () => {\r\n      console.log('Complaint submitted:', form.value);\r\n      // Handle the form submission logic here\r\n    };\r\n\r\n    return {\r\n      subjectOptions,\r\n      form,\r\n      submitComplaint,\r\n      getUserLocation,\r\n      showMap\r\n    };\r\n  }\r\n};\r\n</script>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}