{"ast":null,"code":"import BaseComponent from '@primevue/core/basecomponent';\nimport DeferredContentStyle from 'primevue/deferredcontent/style';\nimport { openBlock, createElementBlock, mergeProps, renderSlot, createCommentVNode } from 'vue';\nvar script = {\n  name: 'DeferredContent',\n  \"extends\": BaseComponent,\n  inheritAttrs: false,\n  emits: ['load'],\n  style: DeferredContentStyle,\n  data: function data() {\n    return {\n      loaded: false\n    };\n  },\n  mounted: function mounted() {\n    if (!this.loaded) {\n      if (this.shouldLoad()) this.load();else this.bindScrollListener();\n    }\n  },\n  beforeUnmount: function beforeUnmount() {\n    this.unbindScrollListener();\n  },\n  methods: {\n    bindScrollListener: function bindScrollListener() {\n      var _this = this;\n      this.documentScrollListener = function () {\n        if (_this.shouldLoad()) {\n          _this.load();\n          _this.unbindScrollListener();\n        }\n      };\n      window.addEventListener('scroll', this.documentScrollListener);\n    },\n    unbindScrollListener: function unbindScrollListener() {\n      if (this.documentScrollListener) {\n        window.removeEventListener('scroll', this.documentScrollListener);\n        this.documentScrollListener = null;\n      }\n    },\n    shouldLoad: function shouldLoad() {\n      if (this.loaded) {\n        return false;\n      } else {\n        var rect = this.$refs.container.getBoundingClientRect();\n        var docElement = document.documentElement;\n        var winHeight = docElement.clientHeight;\n        return winHeight >= rect.top;\n      }\n    },\n    load: function load(event) {\n      this.loaded = true;\n      this.$emit('load', event);\n    }\n  }\n};\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  return openBlock(), createElementBlock(\"div\", mergeProps({\n    ref: \"container\"\n  }, _ctx.ptmi('root')), [$data.loaded ? renderSlot(_ctx.$slots, \"default\", {\n    key: 0\n  }) : createCommentVNode(\"\", true)], 16);\n}\nscript.render = render;\nexport { script as default };","map":{"version":3,"names":["script","name","BaseComponent","inheritAttrs","emits","style","DeferredContentStyle","data","loaded","mounted","shouldLoad","load","bindScrollListener","beforeUnmount","unbindScrollListener","methods","_this","documentScrollListener","window","addEventListener","removeEventListener","rect","$refs","container","getBoundingClientRect","docElement","document","documentElement","winHeight","clientHeight","top","event","$emit","openBlock","createElementBlock","mergeProps","ref","_ctx","ptmi","$data","renderSlot","$slots","key","createCommentVNode"],"sources":["../../src/deferredcontent/DeferredContent.vue","../../src/deferredcontent/DeferredContent.vue?vue&type=template&id=a323cf8a&lang.js"],"sourcesContent":["<template>\n    <div ref=\"container\" v-bind=\"ptmi('root')\">\n        <slot v-if=\"loaded\"></slot>\n    </div>\n</template>\n\n<script>\nimport BaseComponent from '@primevue/core/basecomponent';\nimport DeferredContentStyle from 'primevue/deferredcontent/style';\n\nexport default {\n    name: 'DeferredContent',\n    extends: BaseComponent,\n    inheritAttrs: false,\n    emits: ['load'],\n    style: DeferredContentStyle,\n    data() {\n        return {\n            loaded: false\n        };\n    },\n    mounted() {\n        if (!this.loaded) {\n            if (this.shouldLoad()) this.load();\n            else this.bindScrollListener();\n        }\n    },\n    beforeUnmount() {\n        this.unbindScrollListener();\n    },\n    methods: {\n        bindScrollListener() {\n            this.documentScrollListener = () => {\n                if (this.shouldLoad()) {\n                    this.load();\n                    this.unbindScrollListener();\n                }\n            };\n\n            window.addEventListener('scroll', this.documentScrollListener);\n        },\n        unbindScrollListener() {\n            if (this.documentScrollListener) {\n                window.removeEventListener('scroll', this.documentScrollListener);\n                this.documentScrollListener = null;\n            }\n        },\n        shouldLoad() {\n            if (this.loaded) {\n                return false;\n            } else {\n                const rect = this.$refs.container.getBoundingClientRect();\n                const docElement = document.documentElement;\n                const winHeight = docElement.clientHeight;\n\n                return winHeight >= rect.top;\n            }\n        },\n        load(event) {\n            this.loaded = true;\n            this.$emit('load', event);\n        }\n    }\n};\n</script>\n","<template>\n    <div ref=\"container\" v-bind=\"ptmi('root')\">\n        <slot v-if=\"loaded\"></slot>\n    </div>\n</template>\n\n<script>\nimport BaseComponent from '@primevue/core/basecomponent';\nimport DeferredContentStyle from 'primevue/deferredcontent/style';\n\nexport default {\n    name: 'DeferredContent',\n    extends: BaseComponent,\n    inheritAttrs: false,\n    emits: ['load'],\n    style: DeferredContentStyle,\n    data() {\n        return {\n            loaded: false\n        };\n    },\n    mounted() {\n        if (!this.loaded) {\n            if (this.shouldLoad()) this.load();\n            else this.bindScrollListener();\n        }\n    },\n    beforeUnmount() {\n        this.unbindScrollListener();\n    },\n    methods: {\n        bindScrollListener() {\n            this.documentScrollListener = () => {\n                if (this.shouldLoad()) {\n                    this.load();\n                    this.unbindScrollListener();\n                }\n            };\n\n            window.addEventListener('scroll', this.documentScrollListener);\n        },\n        unbindScrollListener() {\n            if (this.documentScrollListener) {\n                window.removeEventListener('scroll', this.documentScrollListener);\n                this.documentScrollListener = null;\n            }\n        },\n        shouldLoad() {\n            if (this.loaded) {\n                return false;\n            } else {\n                const rect = this.$refs.container.getBoundingClientRect();\n                const docElement = document.documentElement;\n                const winHeight = docElement.clientHeight;\n\n                return winHeight >= rect.top;\n            }\n        },\n        load(event) {\n            this.loaded = true;\n            this.$emit('load', event);\n        }\n    }\n};\n</script>\n"],"mappings":";;;AAUA,IAAAA,MAAA,GAAe;EACXC,IAAI,EAAE,iBAAiB;EACvB,WAASC,aAAa;EACtBC,YAAY,EAAE,KAAK;EACnBC,KAAK,EAAE,CAAC,MAAM,CAAC;EACfC,KAAK,EAAEC,oBAAoB;EAC3BC,IAAI,WAAJA,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,MAAM,EAAE;KACX;GACJ;EACDC,OAAO,WAAPA,OAAOA,CAAA,EAAG;IACN,IAAI,CAAC,IAAI,CAACD,MAAM,EAAE;MACd,IAAI,IAAI,CAACE,UAAU,EAAE,EAAE,IAAI,CAACC,IAAI,EAAE,MAC7B,IAAI,CAACC,kBAAkB,EAAE;IAClC;GACH;EACDC,aAAa,WAAbA,aAAaA,CAAA,EAAG;IACZ,IAAI,CAACC,oBAAoB,EAAE;GAC9B;EACDC,OAAO,EAAE;IACLH,kBAAkB,WAAlBA,kBAAkBA,CAAA,EAAG;MAAA,IAAAI,KAAA;MACjB,IAAI,CAACC,sBAAuB,GAAE,YAAM;QAChC,IAAID,KAAI,CAACN,UAAU,EAAE,EAAE;UACnBM,KAAI,CAACL,IAAI,EAAE;UACXK,KAAI,CAACF,oBAAoB,EAAE;QAC/B;OACH;MAEDI,MAAM,CAACC,gBAAgB,CAAC,QAAQ,EAAE,IAAI,CAACF,sBAAsB,CAAC;KACjE;IACDH,oBAAoB,WAApBA,oBAAoBA,CAAA,EAAG;MACnB,IAAI,IAAI,CAACG,sBAAsB,EAAE;QAC7BC,MAAM,CAACE,mBAAmB,CAAC,QAAQ,EAAE,IAAI,CAACH,sBAAsB,CAAC;QACjE,IAAI,CAACA,sBAAuB,GAAE,IAAI;MACtC;KACH;IACDP,UAAU,WAAVA,UAAUA,CAAA,EAAG;MACT,IAAI,IAAI,CAACF,MAAM,EAAE;QACb,OAAO,KAAK;MAChB,CAAE,MAAK;QACH,IAAMa,IAAG,GAAI,IAAI,CAACC,KAAK,CAACC,SAAS,CAACC,qBAAqB,EAAE;QACzD,IAAMC,UAAA,GAAaC,QAAQ,CAACC,eAAe;QAC3C,IAAMC,SAAQ,GAAIH,UAAU,CAACI,YAAY;QAEzC,OAAOD,SAAQ,IAAKP,IAAI,CAACS,GAAG;MAChC;KACH;IACDnB,IAAI,EAAJ,SAAAA,IAAIA,CAACoB,KAAK,EAAE;MACR,IAAI,CAACvB,MAAO,GAAE,IAAI;MAClB,IAAI,CAACwB,KAAK,CAAC,MAAM,EAAED,KAAK,CAAC;IAC7B;EACJ;AACJ,CAAC;;EC9DG,OAAAE,SAAA,IAAAC,kBAAA,CAEK,OAFLC,UAEK;IAFAC,GAAG,EAAC;KAAoBC,IAAI,CAAAC,IAAA,YACjBC,KAAM,CAAA/B,MAAA,GAAlBgC,UAA0B,CAAAH,IAAA,CAAAI,MAAA;IAAAC,GAAA;GAAA,IAAAC,kBAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}