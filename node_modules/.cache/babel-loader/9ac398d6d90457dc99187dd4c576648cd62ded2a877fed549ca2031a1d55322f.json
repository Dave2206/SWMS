{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.for-each.js\";\nimport \"core-js/modules/esnext.iterator.reduce.js\";\nimport { UniqueComponentId } from '@primevue/core/utils';\nimport { getWidth, getAttribute, findSingle, focus, getOffset } from '@primeuix/utils/dom';\nimport ChevronLeftIcon from '@primevue/icons/chevronleft';\nimport ChevronRightIcon from '@primevue/icons/chevronright';\nimport Ripple from 'primevue/ripple';\nimport { mergeProps, resolveDirective, openBlock, createElementBlock, createElementVNode, withDirectives, renderSlot, createBlock, resolveDynamicComponent, createCommentVNode, Fragment, renderList, toDisplayString, vShow } from 'vue';\nimport BaseComponent from '@primevue/core/basecomponent';\nimport TabViewStyle from 'primevue/tabview/style';\nvar script$1 = {\n  name: 'BaseTabView',\n  \"extends\": BaseComponent,\n  props: {\n    activeIndex: {\n      type: Number,\n      \"default\": 0\n    },\n    lazy: {\n      type: Boolean,\n      \"default\": false\n    },\n    scrollable: {\n      type: Boolean,\n      \"default\": false\n    },\n    tabindex: {\n      type: Number,\n      \"default\": 0\n    },\n    selectOnFocus: {\n      type: Boolean,\n      \"default\": false\n    },\n    prevButtonProps: {\n      type: null,\n      \"default\": null\n    },\n    nextButtonProps: {\n      type: null,\n      \"default\": null\n    },\n    prevIcon: {\n      type: String,\n      \"default\": undefined\n    },\n    nextIcon: {\n      type: String,\n      \"default\": undefined\n    }\n  },\n  style: TabViewStyle,\n  provide: function provide() {\n    return {\n      $pcTabs: undefined,\n      // Backwards compatible to prevent <TabPanel> component from breaking\n      $pcTabView: this,\n      $parentInstance: this\n    };\n  }\n};\nvar script = {\n  name: 'TabView',\n  \"extends\": script$1,\n  inheritAttrs: false,\n  emits: ['update:activeIndex', 'tab-change', 'tab-click'],\n  data: function data() {\n    return {\n      id: this.$attrs.id,\n      d_activeIndex: this.activeIndex,\n      isPrevButtonDisabled: true,\n      isNextButtonDisabled: false\n    };\n  },\n  watch: {\n    '$attrs.id': function $attrsId(newValue) {\n      this.id = newValue || UniqueComponentId();\n    },\n    activeIndex: function activeIndex(newValue) {\n      this.d_activeIndex = newValue;\n      this.scrollInView({\n        index: newValue\n      });\n    }\n  },\n  mounted: function mounted() {\n    console.warn('Deprecated since v4. Use Tabs component instead.');\n    this.id = this.id || UniqueComponentId();\n    this.updateInkBar();\n    this.scrollable && this.updateButtonState();\n  },\n  updated: function updated() {\n    this.updateInkBar();\n    this.scrollable && this.updateButtonState();\n  },\n  methods: {\n    isTabPanel: function isTabPanel(child) {\n      return child.type.name === 'TabPanel';\n    },\n    isTabActive: function isTabActive(index) {\n      return this.d_activeIndex === index;\n    },\n    getTabProp: function getTabProp(tab, name) {\n      return tab.props ? tab.props[name] : undefined;\n    },\n    getKey: function getKey(tab, index) {\n      return this.getTabProp(tab, 'header') || index;\n    },\n    getTabHeaderActionId: function getTabHeaderActionId(index) {\n      return \"\".concat(this.id, \"_\").concat(index, \"_header_action\");\n    },\n    getTabContentId: function getTabContentId(index) {\n      return \"\".concat(this.id, \"_\").concat(index, \"_content\");\n    },\n    getTabPT: function getTabPT(tab, key, index) {\n      var count = this.tabs.length;\n      var tabMetaData = {\n        props: tab.props,\n        parent: {\n          instance: this,\n          props: this.$props,\n          state: this.$data\n        },\n        context: {\n          index: index,\n          count: count,\n          first: index === 0,\n          last: index === count - 1,\n          active: this.isTabActive(index)\n        }\n      };\n      return mergeProps(this.ptm(\"tabpanel.\".concat(key), {\n        tabpanel: tabMetaData\n      }), this.ptm(\"tabpanel.\".concat(key), tabMetaData), this.ptmo(this.getTabProp(tab, 'pt'), key, tabMetaData));\n    },\n    onScroll: function onScroll(event) {\n      this.scrollable && this.updateButtonState();\n      event.preventDefault();\n    },\n    onPrevButtonClick: function onPrevButtonClick() {\n      var content = this.$refs.content;\n      var width = getWidth(content);\n      var pos = content.scrollLeft - width;\n      content.scrollLeft = pos <= 0 ? 0 : pos;\n    },\n    onNextButtonClick: function onNextButtonClick() {\n      var content = this.$refs.content;\n      var width = getWidth(content) - this.getVisibleButtonWidths();\n      var pos = content.scrollLeft + width;\n      var lastPos = content.scrollWidth - width;\n      content.scrollLeft = pos >= lastPos ? lastPos : pos;\n    },\n    onTabClick: function onTabClick(event, tab, index) {\n      this.changeActiveIndex(event, tab, index);\n      this.$emit('tab-click', {\n        originalEvent: event,\n        index: index\n      });\n    },\n    onTabKeyDown: function onTabKeyDown(event, tab, index) {\n      switch (event.code) {\n        case 'ArrowLeft':\n          this.onTabArrowLeftKey(event);\n          break;\n        case 'ArrowRight':\n          this.onTabArrowRightKey(event);\n          break;\n        case 'Home':\n          this.onTabHomeKey(event);\n          break;\n        case 'End':\n          this.onTabEndKey(event);\n          break;\n        case 'PageDown':\n          this.onPageDownKey(event);\n          break;\n        case 'PageUp':\n          this.onPageUpKey(event);\n          break;\n        case 'Enter':\n        case 'NumpadEnter':\n        case 'Space':\n          this.onTabEnterKey(event, tab, index);\n          break;\n      }\n    },\n    onTabArrowRightKey: function onTabArrowRightKey(event) {\n      var nextHeaderAction = this.findNextHeaderAction(event.target.parentElement);\n      nextHeaderAction ? this.changeFocusedTab(event, nextHeaderAction) : this.onTabHomeKey(event);\n      event.preventDefault();\n    },\n    onTabArrowLeftKey: function onTabArrowLeftKey(event) {\n      var prevHeaderAction = this.findPrevHeaderAction(event.target.parentElement);\n      prevHeaderAction ? this.changeFocusedTab(event, prevHeaderAction) : this.onTabEndKey(event);\n      event.preventDefault();\n    },\n    onTabHomeKey: function onTabHomeKey(event) {\n      var firstHeaderAction = this.findFirstHeaderAction();\n      this.changeFocusedTab(event, firstHeaderAction);\n      event.preventDefault();\n    },\n    onTabEndKey: function onTabEndKey(event) {\n      var lastHeaderAction = this.findLastHeaderAction();\n      this.changeFocusedTab(event, lastHeaderAction);\n      event.preventDefault();\n    },\n    onPageDownKey: function onPageDownKey(event) {\n      this.scrollInView({\n        index: this.$refs.nav.children.length - 2\n      });\n      event.preventDefault();\n    },\n    onPageUpKey: function onPageUpKey(event) {\n      this.scrollInView({\n        index: 0\n      });\n      event.preventDefault();\n    },\n    onTabEnterKey: function onTabEnterKey(event, tab, index) {\n      this.changeActiveIndex(event, tab, index);\n      event.preventDefault();\n    },\n    findNextHeaderAction: function findNextHeaderAction(tabElement) {\n      var selfCheck = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var headerElement = selfCheck ? tabElement : tabElement.nextElementSibling;\n      return headerElement ? getAttribute(headerElement, 'data-p-disabled') || getAttribute(headerElement, 'data-pc-section') === 'inkbar' ? this.findNextHeaderAction(headerElement) : findSingle(headerElement, '[data-pc-section=\"headeraction\"]') : null;\n    },\n    findPrevHeaderAction: function findPrevHeaderAction(tabElement) {\n      var selfCheck = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var headerElement = selfCheck ? tabElement : tabElement.previousElementSibling;\n      return headerElement ? getAttribute(headerElement, 'data-p-disabled') || getAttribute(headerElement, 'data-pc-section') === 'inkbar' ? this.findPrevHeaderAction(headerElement) : findSingle(headerElement, '[data-pc-section=\"headeraction\"]') : null;\n    },\n    findFirstHeaderAction: function findFirstHeaderAction() {\n      return this.findNextHeaderAction(this.$refs.nav.firstElementChild, true);\n    },\n    findLastHeaderAction: function findLastHeaderAction() {\n      return this.findPrevHeaderAction(this.$refs.nav.lastElementChild, true);\n    },\n    changeActiveIndex: function changeActiveIndex(event, tab, index) {\n      if (!this.getTabProp(tab, 'disabled') && this.d_activeIndex !== index) {\n        this.d_activeIndex = index;\n        this.$emit('update:activeIndex', index);\n        this.$emit('tab-change', {\n          originalEvent: event,\n          index: index\n        });\n        this.scrollInView({\n          index: index\n        });\n      }\n    },\n    changeFocusedTab: function changeFocusedTab(event, element) {\n      if (element) {\n        focus(element);\n        this.scrollInView({\n          element: element\n        });\n        if (this.selectOnFocus) {\n          var index = parseInt(element.parentElement.dataset.pcIndex, 10);\n          var tab = this.tabs[index];\n          this.changeActiveIndex(event, tab, index);\n        }\n      }\n    },\n    scrollInView: function scrollInView(_ref) {\n      var element = _ref.element,\n        _ref$index = _ref.index,\n        index = _ref$index === void 0 ? -1 : _ref$index;\n      var currentElement = element || this.$refs.nav.children[index];\n      if (currentElement) {\n        currentElement.scrollIntoView && currentElement.scrollIntoView({\n          block: 'nearest'\n        });\n      }\n    },\n    updateInkBar: function updateInkBar() {\n      var tabHeader = this.$refs.nav.children[this.d_activeIndex];\n      this.$refs.inkbar.style.width = getWidth(tabHeader) + 'px';\n      this.$refs.inkbar.style.left = getOffset(tabHeader).left - getOffset(this.$refs.nav).left + 'px';\n    },\n    updateButtonState: function updateButtonState() {\n      var content = this.$refs.content;\n      var scrollLeft = content.scrollLeft,\n        scrollWidth = content.scrollWidth;\n      var width = getWidth(content);\n      this.isPrevButtonDisabled = scrollLeft === 0;\n      this.isNextButtonDisabled = parseInt(scrollLeft) === scrollWidth - width;\n    },\n    getVisibleButtonWidths: function getVisibleButtonWidths() {\n      var _this$$refs = this.$refs,\n        prevBtn = _this$$refs.prevBtn,\n        nextBtn = _this$$refs.nextBtn;\n      return [prevBtn, nextBtn].reduce(function (acc, el) {\n        return el ? acc + getWidth(el) : acc;\n      }, 0);\n    }\n  },\n  computed: {\n    tabs: function tabs() {\n      var _this = this;\n      return this.$slots[\"default\"]().reduce(function (tabs, child) {\n        if (_this.isTabPanel(child)) {\n          tabs.push(child);\n        } else if (child.children && child.children instanceof Array) {\n          child.children.forEach(function (nestedChild) {\n            if (_this.isTabPanel(nestedChild)) {\n              tabs.push(nestedChild);\n            }\n          });\n        }\n        return tabs;\n      }, []);\n    },\n    prevButtonAriaLabel: function prevButtonAriaLabel() {\n      return this.$primevue.config.locale.aria ? this.$primevue.config.locale.aria.previous : undefined;\n    },\n    nextButtonAriaLabel: function nextButtonAriaLabel() {\n      return this.$primevue.config.locale.aria ? this.$primevue.config.locale.aria.next : undefined;\n    }\n  },\n  directives: {\n    ripple: Ripple\n  },\n  components: {\n    ChevronLeftIcon: ChevronLeftIcon,\n    ChevronRightIcon: ChevronRightIcon\n  }\n};\nfunction _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nfunction _objectSpread(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      _defineProperty(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}\nfunction _defineProperty(e, r, t) {\n  return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nvar _hoisted_1 = [\"tabindex\", \"aria-label\"];\nvar _hoisted_2 = [\"data-p-active\", \"data-p-disabled\", \"data-pc-index\"];\nvar _hoisted_3 = [\"id\", \"tabindex\", \"aria-disabled\", \"aria-selected\", \"aria-controls\", \"onClick\", \"onKeydown\"];\nvar _hoisted_4 = [\"tabindex\", \"aria-label\"];\nvar _hoisted_5 = [\"id\", \"aria-labelledby\", \"data-pc-index\", \"data-p-active\"];\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _directive_ripple = resolveDirective(\"ripple\");\n  return openBlock(), createElementBlock(\"div\", mergeProps({\n    \"class\": _ctx.cx('root'),\n    role: \"tablist\"\n  }, _ctx.ptmi('root')), [createElementVNode(\"div\", mergeProps({\n    \"class\": _ctx.cx('navContainer')\n  }, _ctx.ptm('navContainer')), [_ctx.scrollable && !$data.isPrevButtonDisabled ? withDirectives((openBlock(), createElementBlock(\"button\", mergeProps({\n    key: 0,\n    ref: \"prevBtn\",\n    type: \"button\",\n    \"class\": _ctx.cx('prevButton'),\n    tabindex: _ctx.tabindex,\n    \"aria-label\": $options.prevButtonAriaLabel,\n    onClick: _cache[0] || (_cache[0] = function () {\n      return $options.onPrevButtonClick && $options.onPrevButtonClick.apply($options, arguments);\n    })\n  }, _objectSpread(_objectSpread({}, _ctx.prevButtonProps), _ctx.ptm('prevButton')), {\n    \"data-pc-group-section\": \"navbutton\"\n  }), [renderSlot(_ctx.$slots, \"previcon\", {}, function () {\n    return [(openBlock(), createBlock(resolveDynamicComponent(_ctx.prevIcon ? 'span' : 'ChevronLeftIcon'), mergeProps({\n      \"aria-hidden\": \"true\",\n      \"class\": _ctx.prevIcon\n    }, _ctx.ptm('prevIcon')), null, 16, [\"class\"]))];\n  })], 16, _hoisted_1)), [[_directive_ripple]]) : createCommentVNode(\"\", true), createElementVNode(\"div\", mergeProps({\n    ref: \"content\",\n    \"class\": _ctx.cx('navContent'),\n    onScroll: _cache[1] || (_cache[1] = function () {\n      return $options.onScroll && $options.onScroll.apply($options, arguments);\n    })\n  }, _ctx.ptm('navContent')), [createElementVNode(\"ul\", mergeProps({\n    ref: \"nav\",\n    \"class\": _ctx.cx('nav')\n  }, _ctx.ptm('nav')), [(openBlock(true), createElementBlock(Fragment, null, renderList($options.tabs, function (tab, index) {\n    return openBlock(), createElementBlock(\"li\", mergeProps({\n      key: $options.getKey(tab, index),\n      style: $options.getTabProp(tab, 'headerStyle'),\n      \"class\": _ctx.cx('tab.header', {\n        tab: tab,\n        index: index\n      }),\n      role: \"presentation\",\n      ref_for: true\n    }, _objectSpread(_objectSpread(_objectSpread({}, $options.getTabProp(tab, 'headerProps')), $options.getTabPT(tab, 'root', index)), $options.getTabPT(tab, 'header', index)), {\n      \"data-pc-name\": \"tabpanel\",\n      \"data-p-active\": $data.d_activeIndex === index,\n      \"data-p-disabled\": $options.getTabProp(tab, 'disabled'),\n      \"data-pc-index\": index\n    }), [withDirectives((openBlock(), createElementBlock(\"a\", mergeProps({\n      id: $options.getTabHeaderActionId(index),\n      \"class\": _ctx.cx('tab.headerAction'),\n      tabindex: $options.getTabProp(tab, 'disabled') || !$options.isTabActive(index) ? -1 : _ctx.tabindex,\n      role: \"tab\",\n      \"aria-disabled\": $options.getTabProp(tab, 'disabled'),\n      \"aria-selected\": $options.isTabActive(index),\n      \"aria-controls\": $options.getTabContentId(index),\n      onClick: function onClick($event) {\n        return $options.onTabClick($event, tab, index);\n      },\n      onKeydown: function onKeydown($event) {\n        return $options.onTabKeyDown($event, tab, index);\n      },\n      ref_for: true\n    }, _objectSpread(_objectSpread({}, $options.getTabProp(tab, 'headerActionProps')), $options.getTabPT(tab, 'headerAction', index))), [tab.props && tab.props.header ? (openBlock(), createElementBlock(\"span\", mergeProps({\n      key: 0,\n      \"class\": _ctx.cx('tab.headerTitle'),\n      ref_for: true\n    }, $options.getTabPT(tab, 'headerTitle', index)), toDisplayString(tab.props.header), 17)) : createCommentVNode(\"\", true), tab.children && tab.children.header ? (openBlock(), createBlock(resolveDynamicComponent(tab.children.header), {\n      key: 1\n    })) : createCommentVNode(\"\", true)], 16, _hoisted_3)), [[_directive_ripple]])], 16, _hoisted_2);\n  }), 128)), createElementVNode(\"li\", mergeProps({\n    ref: \"inkbar\",\n    \"class\": _ctx.cx('inkbar'),\n    role: \"presentation\",\n    \"aria-hidden\": \"true\"\n  }, _ctx.ptm('inkbar')), null, 16)], 16)], 16), _ctx.scrollable && !$data.isNextButtonDisabled ? withDirectives((openBlock(), createElementBlock(\"button\", mergeProps({\n    key: 1,\n    ref: \"nextBtn\",\n    type: \"button\",\n    \"class\": _ctx.cx('nextButton'),\n    tabindex: _ctx.tabindex,\n    \"aria-label\": $options.nextButtonAriaLabel,\n    onClick: _cache[2] || (_cache[2] = function () {\n      return $options.onNextButtonClick && $options.onNextButtonClick.apply($options, arguments);\n    })\n  }, _objectSpread(_objectSpread({}, _ctx.nextButtonProps), _ctx.ptm('nextButton')), {\n    \"data-pc-group-section\": \"navbutton\"\n  }), [renderSlot(_ctx.$slots, \"nexticon\", {}, function () {\n    return [(openBlock(), createBlock(resolveDynamicComponent(_ctx.nextIcon ? 'span' : 'ChevronRightIcon'), mergeProps({\n      \"aria-hidden\": \"true\",\n      \"class\": _ctx.nextIcon\n    }, _ctx.ptm('nextIcon')), null, 16, [\"class\"]))];\n  })], 16, _hoisted_4)), [[_directive_ripple]]) : createCommentVNode(\"\", true)], 16), createElementVNode(\"div\", mergeProps({\n    \"class\": _ctx.cx('panelContainer')\n  }, _ctx.ptm('panelContainer')), [(openBlock(true), createElementBlock(Fragment, null, renderList($options.tabs, function (tab, index) {\n    return openBlock(), createElementBlock(Fragment, {\n      key: $options.getKey(tab, index)\n    }, [(_ctx.lazy ? $options.isTabActive(index) : true) ? withDirectives((openBlock(), createElementBlock(\"div\", mergeProps({\n      key: 0,\n      id: $options.getTabContentId(index),\n      style: $options.getTabProp(tab, 'contentStyle'),\n      \"class\": _ctx.cx('tab.content', {\n        tab: tab\n      }),\n      role: \"tabpanel\",\n      \"aria-labelledby\": $options.getTabHeaderActionId(index),\n      ref_for: true\n    }, _objectSpread(_objectSpread(_objectSpread({}, $options.getTabProp(tab, 'contentProps')), $options.getTabPT(tab, 'root', index)), $options.getTabPT(tab, 'content', index)), {\n      \"data-pc-name\": \"tabpanel\",\n      \"data-pc-index\": index,\n      \"data-p-active\": $data.d_activeIndex === index\n    }), [(openBlock(), createBlock(resolveDynamicComponent(tab)))], 16, _hoisted_5)), [[vShow, _ctx.lazy ? true : $options.isTabActive(index)]]) : createCommentVNode(\"\", true)], 64);\n  }), 128))], 16)], 16);\n}\nscript.render = render;\nexport { script as default };","map":{"version":3,"names":["script$1","name","BaseComponent","props","activeIndex","type","Number","lazy","Boolean","scrollable","tabindex","selectOnFocus","prevButtonProps","nextButtonProps","prevIcon","String","undefined","nextIcon","style","TabViewStyle","provide","$pcTabs","$pcTabView","$parentInstance","script","inheritAttrs","emits","data","id","$attrs","d_activeIndex","isPrevButtonDisabled","isNextButtonDisabled","watch","$attrsId","newValue","UniqueComponentId","scrollInView","index","mounted","console","warn","updateInkBar","updateButtonState","updated","methods","isTabPanel","child","isTabActive","getTabProp","tab","getKey","getTabHeaderActionId","concat","getTabContentId","getTabPT","key","count","tabs","length","tabMetaData","parent","instance","$props","state","$data","context","first","last","active","mergeProps","ptm","tabpanel","ptmo","onScroll","event","preventDefault","onPrevButtonClick","content","$refs","width","getWidth","pos","scrollLeft","onNextButtonClick","getVisibleButtonWidths","lastPos","scrollWidth","onTabClick","changeActiveIndex","$emit","originalEvent","onTabKeyDown","code","onTabArrowLeftKey","onTabArrowRightKey","onTabHomeKey","onTabEndKey","onPageDownKey","onPageUpKey","onTabEnterKey","nextHeaderAction","findNextHeaderAction","target","parentElement","changeFocusedTab","prevHeaderAction","findPrevHeaderAction","firstHeaderAction","findFirstHeaderAction","lastHeaderAction","findLastHeaderAction","nav","children","tabElement","selfCheck","arguments","headerElement","nextElementSibling","getAttribute","findSingle","previousElementSibling","firstElementChild","lastElementChild","element","focus","parseInt","dataset","pcIndex","_ref","_ref$index","currentElement","scrollIntoView","block","tabHeader","inkbar","left","getOffset","_this$$refs","prevBtn","nextBtn","reduce","acc","el","computed","_this","$slots","push","Array","forEach","nestedChild","prevButtonAriaLabel","$primevue","config","locale","aria","previous","nextButtonAriaLabel","next","directives","ripple","Ripple","components","ChevronLeftIcon","ChevronRightIcon","openBlock","createElementBlock","_ctx","cx","role","ptmi","createElementVNode","withDirectives","ref","$options","onClick","_cache","apply","_objectSpread","renderSlot","createBlock","resolveDynamicComponent","Fragment","renderList","$event","onKeydown","header","toDisplayString","createCommentVNode","_hoisted_3","_directive_ripple","_hoisted_2","_hoisted_5","vShow"],"sources":["../../src/tabview/BaseTabView.vue","../../src/tabview/TabView.vue","../../src/tabview/TabView.vue?vue&type=template&id=0ec101ee&lang.js"],"sourcesContent":["<script>\nimport BaseComponent from '@primevue/core/basecomponent';\nimport TabViewStyle from 'primevue/tabview/style';\n\nexport default {\n    name: 'BaseTabView',\n    extends: BaseComponent,\n    props: {\n        activeIndex: {\n            type: Number,\n            default: 0\n        },\n        lazy: {\n            type: Boolean,\n            default: false\n        },\n        scrollable: {\n            type: Boolean,\n            default: false\n        },\n        tabindex: {\n            type: Number,\n            default: 0\n        },\n        selectOnFocus: {\n            type: Boolean,\n            default: false\n        },\n        prevButtonProps: {\n            type: null,\n            default: null\n        },\n        nextButtonProps: {\n            type: null,\n            default: null\n        },\n        prevIcon: {\n            type: String,\n            default: undefined\n        },\n        nextIcon: {\n            type: String,\n            default: undefined\n        }\n    },\n    style: TabViewStyle,\n    provide() {\n        return {\n            $pcTabs: undefined, // Backwards compatible to prevent <TabPanel> component from breaking\n            $pcTabView: this,\n            $parentInstance: this\n        };\n    }\n};\n</script>\n","<template>\n    <div :class=\"cx('root')\" role=\"tablist\" v-bind=\"ptmi('root')\">\n        <div :class=\"cx('navContainer')\" v-bind=\"ptm('navContainer')\">\n            <button\n                v-if=\"scrollable && !isPrevButtonDisabled\"\n                ref=\"prevBtn\"\n                v-ripple\n                type=\"button\"\n                :class=\"cx('prevButton')\"\n                :tabindex=\"tabindex\"\n                :aria-label=\"prevButtonAriaLabel\"\n                @click=\"onPrevButtonClick\"\n                v-bind=\"{ ...prevButtonProps, ...ptm('prevButton') }\"\n                data-pc-group-section=\"navbutton\"\n            >\n                <slot name=\"previcon\">\n                    <component :is=\"prevIcon ? 'span' : 'ChevronLeftIcon'\" aria-hidden=\"true\" :class=\"prevIcon\" v-bind=\"ptm('prevIcon')\" />\n                </slot>\n            </button>\n            <div ref=\"content\" :class=\"cx('navContent')\" @scroll=\"onScroll\" v-bind=\"ptm('navContent')\">\n                <ul ref=\"nav\" :class=\"cx('nav')\" v-bind=\"ptm('nav')\">\n                    <li\n                        v-for=\"(tab, index) of tabs\"\n                        :key=\"getKey(tab, index)\"\n                        :style=\"getTabProp(tab, 'headerStyle')\"\n                        :class=\"cx('tab.header', { tab, index })\"\n                        role=\"presentation\"\n                        v-bind=\"{ ...getTabProp(tab, 'headerProps'), ...getTabPT(tab, 'root', index), ...getTabPT(tab, 'header', index) }\"\n                        data-pc-name=\"tabpanel\"\n                        :data-p-active=\"d_activeIndex === index\"\n                        :data-p-disabled=\"getTabProp(tab, 'disabled')\"\n                        :data-pc-index=\"index\"\n                    >\n                        <a\n                            :id=\"getTabHeaderActionId(index)\"\n                            v-ripple\n                            :class=\"cx('tab.headerAction')\"\n                            :tabindex=\"getTabProp(tab, 'disabled') || !isTabActive(index) ? -1 : tabindex\"\n                            role=\"tab\"\n                            :aria-disabled=\"getTabProp(tab, 'disabled')\"\n                            :aria-selected=\"isTabActive(index)\"\n                            :aria-controls=\"getTabContentId(index)\"\n                            @click=\"onTabClick($event, tab, index)\"\n                            @keydown=\"onTabKeyDown($event, tab, index)\"\n                            v-bind=\"{ ...getTabProp(tab, 'headerActionProps'), ...getTabPT(tab, 'headerAction', index) }\"\n                        >\n                            <span v-if=\"tab.props && tab.props.header\" :class=\"cx('tab.headerTitle')\" v-bind=\"getTabPT(tab, 'headerTitle', index)\">{{ tab.props.header }}</span>\n                            <component v-if=\"tab.children && tab.children.header\" :is=\"tab.children.header\"></component>\n                        </a>\n                    </li>\n                    <li ref=\"inkbar\" :class=\"cx('inkbar')\" role=\"presentation\" aria-hidden=\"true\" v-bind=\"ptm('inkbar')\"></li>\n                </ul>\n            </div>\n            <button\n                v-if=\"scrollable && !isNextButtonDisabled\"\n                ref=\"nextBtn\"\n                v-ripple\n                type=\"button\"\n                :class=\"cx('nextButton')\"\n                :tabindex=\"tabindex\"\n                :aria-label=\"nextButtonAriaLabel\"\n                @click=\"onNextButtonClick\"\n                v-bind=\"{ ...nextButtonProps, ...ptm('nextButton') }\"\n                data-pc-group-section=\"navbutton\"\n            >\n                <slot name=\"nexticon\">\n                    <component :is=\"nextIcon ? 'span' : 'ChevronRightIcon'\" aria-hidden=\"true\" :class=\"nextIcon\" v-bind=\"ptm('nextIcon')\" />\n                </slot>\n            </button>\n        </div>\n        <div :class=\"cx('panelContainer')\" v-bind=\"ptm('panelContainer')\">\n            <template v-for=\"(tab, index) of tabs\" :key=\"getKey(tab, index)\">\n                <div\n                    v-if=\"lazy ? isTabActive(index) : true\"\n                    v-show=\"lazy ? true : isTabActive(index)\"\n                    :id=\"getTabContentId(index)\"\n                    :style=\"getTabProp(tab, 'contentStyle')\"\n                    :class=\"cx('tab.content', { tab })\"\n                    role=\"tabpanel\"\n                    :aria-labelledby=\"getTabHeaderActionId(index)\"\n                    v-bind=\"{ ...getTabProp(tab, 'contentProps'), ...getTabPT(tab, 'root', index), ...getTabPT(tab, 'content', index) }\"\n                    data-pc-name=\"tabpanel\"\n                    :data-pc-index=\"index\"\n                    :data-p-active=\"d_activeIndex === index\"\n                >\n                    <component :is=\"tab\"></component>\n                </div>\n            </template>\n        </div>\n    </div>\n</template>\n\n<script>\nimport { UniqueComponentId } from '@primevue/core/utils';\nimport { getWidth, getAttribute, findSingle, focus, getOffset } from '@primeuix/utils/dom';\nimport ChevronLeftIcon from '@primevue/icons/chevronleft';\nimport ChevronRightIcon from '@primevue/icons/chevronright';\nimport Ripple from 'primevue/ripple';\nimport { mergeProps } from 'vue';\nimport BaseTabView from './BaseTabView.vue';\n\nexport default {\n    name: 'TabView',\n    extends: BaseTabView,\n    inheritAttrs: false,\n    emits: ['update:activeIndex', 'tab-change', 'tab-click'],\n    data() {\n        return {\n            id: this.$attrs.id,\n            d_activeIndex: this.activeIndex,\n            isPrevButtonDisabled: true,\n            isNextButtonDisabled: false\n        };\n    },\n    watch: {\n        '$attrs.id': function (newValue) {\n            this.id = newValue || UniqueComponentId();\n        },\n        activeIndex(newValue) {\n            this.d_activeIndex = newValue;\n\n            this.scrollInView({ index: newValue });\n        }\n    },\n    mounted() {\n        console.warn('Deprecated since v4. Use Tabs component instead.');\n\n        this.id = this.id || UniqueComponentId();\n        this.updateInkBar();\n        this.scrollable && this.updateButtonState();\n    },\n    updated() {\n        this.updateInkBar();\n        this.scrollable && this.updateButtonState();\n    },\n    methods: {\n        isTabPanel(child) {\n            return child.type.name === 'TabPanel';\n        },\n        isTabActive(index) {\n            return this.d_activeIndex === index;\n        },\n        getTabProp(tab, name) {\n            return tab.props ? tab.props[name] : undefined;\n        },\n        getKey(tab, index) {\n            return this.getTabProp(tab, 'header') || index;\n        },\n        getTabHeaderActionId(index) {\n            return `${this.id}_${index}_header_action`;\n        },\n        getTabContentId(index) {\n            return `${this.id}_${index}_content`;\n        },\n        getTabPT(tab, key, index) {\n            const count = this.tabs.length;\n            const tabMetaData = {\n                props: tab.props,\n                parent: {\n                    instance: this,\n                    props: this.$props,\n                    state: this.$data\n                },\n                context: {\n                    index,\n                    count,\n                    first: index === 0,\n                    last: index === count - 1,\n                    active: this.isTabActive(index)\n                }\n            };\n\n            return mergeProps(this.ptm(`tabpanel.${key}`, { tabpanel: tabMetaData }), this.ptm(`tabpanel.${key}`, tabMetaData), this.ptmo(this.getTabProp(tab, 'pt'), key, tabMetaData));\n        },\n        onScroll(event) {\n            this.scrollable && this.updateButtonState();\n\n            event.preventDefault();\n        },\n        onPrevButtonClick() {\n            const content = this.$refs.content;\n            const width = getWidth(content);\n            const pos = content.scrollLeft - width;\n\n            content.scrollLeft = pos <= 0 ? 0 : pos;\n        },\n        onNextButtonClick() {\n            const content = this.$refs.content;\n            const width = getWidth(content) - this.getVisibleButtonWidths();\n            const pos = content.scrollLeft + width;\n            const lastPos = content.scrollWidth - width;\n\n            content.scrollLeft = pos >= lastPos ? lastPos : pos;\n        },\n        onTabClick(event, tab, index) {\n            this.changeActiveIndex(event, tab, index);\n            this.$emit('tab-click', { originalEvent: event, index });\n        },\n        onTabKeyDown(event, tab, index) {\n            switch (event.code) {\n                case 'ArrowLeft':\n                    this.onTabArrowLeftKey(event);\n                    break;\n\n                case 'ArrowRight':\n                    this.onTabArrowRightKey(event);\n                    break;\n\n                case 'Home':\n                    this.onTabHomeKey(event);\n                    break;\n\n                case 'End':\n                    this.onTabEndKey(event);\n                    break;\n\n                case 'PageDown':\n                    this.onPageDownKey(event);\n                    break;\n\n                case 'PageUp':\n                    this.onPageUpKey(event);\n                    break;\n\n                case 'Enter':\n                case 'NumpadEnter':\n                case 'Space':\n                    this.onTabEnterKey(event, tab, index);\n                    break;\n\n                default:\n                    break;\n            }\n        },\n        onTabArrowRightKey(event) {\n            const nextHeaderAction = this.findNextHeaderAction(event.target.parentElement);\n\n            nextHeaderAction ? this.changeFocusedTab(event, nextHeaderAction) : this.onTabHomeKey(event);\n            event.preventDefault();\n        },\n        onTabArrowLeftKey(event) {\n            const prevHeaderAction = this.findPrevHeaderAction(event.target.parentElement);\n\n            prevHeaderAction ? this.changeFocusedTab(event, prevHeaderAction) : this.onTabEndKey(event);\n            event.preventDefault();\n        },\n        onTabHomeKey(event) {\n            const firstHeaderAction = this.findFirstHeaderAction();\n\n            this.changeFocusedTab(event, firstHeaderAction);\n            event.preventDefault();\n        },\n        onTabEndKey(event) {\n            const lastHeaderAction = this.findLastHeaderAction();\n\n            this.changeFocusedTab(event, lastHeaderAction);\n            event.preventDefault();\n        },\n        onPageDownKey(event) {\n            this.scrollInView({ index: this.$refs.nav.children.length - 2 });\n            event.preventDefault();\n        },\n        onPageUpKey(event) {\n            this.scrollInView({ index: 0 });\n            event.preventDefault();\n        },\n        onTabEnterKey(event, tab, index) {\n            this.changeActiveIndex(event, tab, index);\n\n            event.preventDefault();\n        },\n        findNextHeaderAction(tabElement, selfCheck = false) {\n            const headerElement = selfCheck ? tabElement : tabElement.nextElementSibling;\n\n            return headerElement\n                ? getAttribute(headerElement, 'data-p-disabled') || getAttribute(headerElement, 'data-pc-section') === 'inkbar'\n                    ? this.findNextHeaderAction(headerElement)\n                    : findSingle(headerElement, '[data-pc-section=\"headeraction\"]')\n                : null;\n        },\n        findPrevHeaderAction(tabElement, selfCheck = false) {\n            const headerElement = selfCheck ? tabElement : tabElement.previousElementSibling;\n\n            return headerElement\n                ? getAttribute(headerElement, 'data-p-disabled') || getAttribute(headerElement, 'data-pc-section') === 'inkbar'\n                    ? this.findPrevHeaderAction(headerElement)\n                    : findSingle(headerElement, '[data-pc-section=\"headeraction\"]')\n                : null;\n        },\n        findFirstHeaderAction() {\n            return this.findNextHeaderAction(this.$refs.nav.firstElementChild, true);\n        },\n        findLastHeaderAction() {\n            return this.findPrevHeaderAction(this.$refs.nav.lastElementChild, true);\n        },\n        changeActiveIndex(event, tab, index) {\n            if (!this.getTabProp(tab, 'disabled') && this.d_activeIndex !== index) {\n                this.d_activeIndex = index;\n\n                this.$emit('update:activeIndex', index);\n                this.$emit('tab-change', { originalEvent: event, index });\n\n                this.scrollInView({ index });\n            }\n        },\n        changeFocusedTab(event, element) {\n            if (element) {\n                focus(element);\n                this.scrollInView({ element });\n\n                if (this.selectOnFocus) {\n                    const index = parseInt(element.parentElement.dataset.pcIndex, 10);\n                    const tab = this.tabs[index];\n\n                    this.changeActiveIndex(event, tab, index);\n                }\n            }\n        },\n        scrollInView({ element, index = -1 }) {\n            const currentElement = element || this.$refs.nav.children[index];\n\n            if (currentElement) {\n                currentElement.scrollIntoView && currentElement.scrollIntoView({ block: 'nearest' });\n            }\n        },\n        updateInkBar() {\n            let tabHeader = this.$refs.nav.children[this.d_activeIndex];\n\n            this.$refs.inkbar.style.width = getWidth(tabHeader) + 'px';\n            this.$refs.inkbar.style.left = getOffset(tabHeader).left - getOffset(this.$refs.nav).left + 'px';\n        },\n        updateButtonState() {\n            const content = this.$refs.content;\n            const { scrollLeft, scrollWidth } = content;\n            const width = getWidth(content);\n\n            this.isPrevButtonDisabled = scrollLeft === 0;\n            this.isNextButtonDisabled = parseInt(scrollLeft) === scrollWidth - width;\n        },\n        getVisibleButtonWidths() {\n            const { prevBtn, nextBtn } = this.$refs;\n\n            return [prevBtn, nextBtn].reduce((acc, el) => (el ? acc + getWidth(el) : acc), 0);\n        }\n    },\n    computed: {\n        tabs() {\n            return this.$slots.default().reduce((tabs, child) => {\n                if (this.isTabPanel(child)) {\n                    tabs.push(child);\n                } else if (child.children && child.children instanceof Array) {\n                    child.children.forEach((nestedChild) => {\n                        if (this.isTabPanel(nestedChild)) {\n                            tabs.push(nestedChild);\n                        }\n                    });\n                }\n\n                return tabs;\n            }, []);\n        },\n        prevButtonAriaLabel() {\n            return this.$primevue.config.locale.aria ? this.$primevue.config.locale.aria.previous : undefined;\n        },\n        nextButtonAriaLabel() {\n            return this.$primevue.config.locale.aria ? this.$primevue.config.locale.aria.next : undefined;\n        }\n    },\n    directives: {\n        ripple: Ripple\n    },\n    components: {\n        ChevronLeftIcon,\n        ChevronRightIcon\n    }\n};\n</script>\n","<template>\n    <div :class=\"cx('root')\" role=\"tablist\" v-bind=\"ptmi('root')\">\n        <div :class=\"cx('navContainer')\" v-bind=\"ptm('navContainer')\">\n            <button\n                v-if=\"scrollable && !isPrevButtonDisabled\"\n                ref=\"prevBtn\"\n                v-ripple\n                type=\"button\"\n                :class=\"cx('prevButton')\"\n                :tabindex=\"tabindex\"\n                :aria-label=\"prevButtonAriaLabel\"\n                @click=\"onPrevButtonClick\"\n                v-bind=\"{ ...prevButtonProps, ...ptm('prevButton') }\"\n                data-pc-group-section=\"navbutton\"\n            >\n                <slot name=\"previcon\">\n                    <component :is=\"prevIcon ? 'span' : 'ChevronLeftIcon'\" aria-hidden=\"true\" :class=\"prevIcon\" v-bind=\"ptm('prevIcon')\" />\n                </slot>\n            </button>\n            <div ref=\"content\" :class=\"cx('navContent')\" @scroll=\"onScroll\" v-bind=\"ptm('navContent')\">\n                <ul ref=\"nav\" :class=\"cx('nav')\" v-bind=\"ptm('nav')\">\n                    <li\n                        v-for=\"(tab, index) of tabs\"\n                        :key=\"getKey(tab, index)\"\n                        :style=\"getTabProp(tab, 'headerStyle')\"\n                        :class=\"cx('tab.header', { tab, index })\"\n                        role=\"presentation\"\n                        v-bind=\"{ ...getTabProp(tab, 'headerProps'), ...getTabPT(tab, 'root', index), ...getTabPT(tab, 'header', index) }\"\n                        data-pc-name=\"tabpanel\"\n                        :data-p-active=\"d_activeIndex === index\"\n                        :data-p-disabled=\"getTabProp(tab, 'disabled')\"\n                        :data-pc-index=\"index\"\n                    >\n                        <a\n                            :id=\"getTabHeaderActionId(index)\"\n                            v-ripple\n                            :class=\"cx('tab.headerAction')\"\n                            :tabindex=\"getTabProp(tab, 'disabled') || !isTabActive(index) ? -1 : tabindex\"\n                            role=\"tab\"\n                            :aria-disabled=\"getTabProp(tab, 'disabled')\"\n                            :aria-selected=\"isTabActive(index)\"\n                            :aria-controls=\"getTabContentId(index)\"\n                            @click=\"onTabClick($event, tab, index)\"\n                            @keydown=\"onTabKeyDown($event, tab, index)\"\n                            v-bind=\"{ ...getTabProp(tab, 'headerActionProps'), ...getTabPT(tab, 'headerAction', index) }\"\n                        >\n                            <span v-if=\"tab.props && tab.props.header\" :class=\"cx('tab.headerTitle')\" v-bind=\"getTabPT(tab, 'headerTitle', index)\">{{ tab.props.header }}</span>\n                            <component v-if=\"tab.children && tab.children.header\" :is=\"tab.children.header\"></component>\n                        </a>\n                    </li>\n                    <li ref=\"inkbar\" :class=\"cx('inkbar')\" role=\"presentation\" aria-hidden=\"true\" v-bind=\"ptm('inkbar')\"></li>\n                </ul>\n            </div>\n            <button\n                v-if=\"scrollable && !isNextButtonDisabled\"\n                ref=\"nextBtn\"\n                v-ripple\n                type=\"button\"\n                :class=\"cx('nextButton')\"\n                :tabindex=\"tabindex\"\n                :aria-label=\"nextButtonAriaLabel\"\n                @click=\"onNextButtonClick\"\n                v-bind=\"{ ...nextButtonProps, ...ptm('nextButton') }\"\n                data-pc-group-section=\"navbutton\"\n            >\n                <slot name=\"nexticon\">\n                    <component :is=\"nextIcon ? 'span' : 'ChevronRightIcon'\" aria-hidden=\"true\" :class=\"nextIcon\" v-bind=\"ptm('nextIcon')\" />\n                </slot>\n            </button>\n        </div>\n        <div :class=\"cx('panelContainer')\" v-bind=\"ptm('panelContainer')\">\n            <template v-for=\"(tab, index) of tabs\" :key=\"getKey(tab, index)\">\n                <div\n                    v-if=\"lazy ? isTabActive(index) : true\"\n                    v-show=\"lazy ? true : isTabActive(index)\"\n                    :id=\"getTabContentId(index)\"\n                    :style=\"getTabProp(tab, 'contentStyle')\"\n                    :class=\"cx('tab.content', { tab })\"\n                    role=\"tabpanel\"\n                    :aria-labelledby=\"getTabHeaderActionId(index)\"\n                    v-bind=\"{ ...getTabProp(tab, 'contentProps'), ...getTabPT(tab, 'root', index), ...getTabPT(tab, 'content', index) }\"\n                    data-pc-name=\"tabpanel\"\n                    :data-pc-index=\"index\"\n                    :data-p-active=\"d_activeIndex === index\"\n                >\n                    <component :is=\"tab\"></component>\n                </div>\n            </template>\n        </div>\n    </div>\n</template>\n\n<script>\nimport { UniqueComponentId } from '@primevue/core/utils';\nimport { getWidth, getAttribute, findSingle, focus, getOffset } from '@primeuix/utils/dom';\nimport ChevronLeftIcon from '@primevue/icons/chevronleft';\nimport ChevronRightIcon from '@primevue/icons/chevronright';\nimport Ripple from 'primevue/ripple';\nimport { mergeProps } from 'vue';\nimport BaseTabView from './BaseTabView.vue';\n\nexport default {\n    name: 'TabView',\n    extends: BaseTabView,\n    inheritAttrs: false,\n    emits: ['update:activeIndex', 'tab-change', 'tab-click'],\n    data() {\n        return {\n            id: this.$attrs.id,\n            d_activeIndex: this.activeIndex,\n            isPrevButtonDisabled: true,\n            isNextButtonDisabled: false\n        };\n    },\n    watch: {\n        '$attrs.id': function (newValue) {\n            this.id = newValue || UniqueComponentId();\n        },\n        activeIndex(newValue) {\n            this.d_activeIndex = newValue;\n\n            this.scrollInView({ index: newValue });\n        }\n    },\n    mounted() {\n        console.warn('Deprecated since v4. Use Tabs component instead.');\n\n        this.id = this.id || UniqueComponentId();\n        this.updateInkBar();\n        this.scrollable && this.updateButtonState();\n    },\n    updated() {\n        this.updateInkBar();\n        this.scrollable && this.updateButtonState();\n    },\n    methods: {\n        isTabPanel(child) {\n            return child.type.name === 'TabPanel';\n        },\n        isTabActive(index) {\n            return this.d_activeIndex === index;\n        },\n        getTabProp(tab, name) {\n            return tab.props ? tab.props[name] : undefined;\n        },\n        getKey(tab, index) {\n            return this.getTabProp(tab, 'header') || index;\n        },\n        getTabHeaderActionId(index) {\n            return `${this.id}_${index}_header_action`;\n        },\n        getTabContentId(index) {\n            return `${this.id}_${index}_content`;\n        },\n        getTabPT(tab, key, index) {\n            const count = this.tabs.length;\n            const tabMetaData = {\n                props: tab.props,\n                parent: {\n                    instance: this,\n                    props: this.$props,\n                    state: this.$data\n                },\n                context: {\n                    index,\n                    count,\n                    first: index === 0,\n                    last: index === count - 1,\n                    active: this.isTabActive(index)\n                }\n            };\n\n            return mergeProps(this.ptm(`tabpanel.${key}`, { tabpanel: tabMetaData }), this.ptm(`tabpanel.${key}`, tabMetaData), this.ptmo(this.getTabProp(tab, 'pt'), key, tabMetaData));\n        },\n        onScroll(event) {\n            this.scrollable && this.updateButtonState();\n\n            event.preventDefault();\n        },\n        onPrevButtonClick() {\n            const content = this.$refs.content;\n            const width = getWidth(content);\n            const pos = content.scrollLeft - width;\n\n            content.scrollLeft = pos <= 0 ? 0 : pos;\n        },\n        onNextButtonClick() {\n            const content = this.$refs.content;\n            const width = getWidth(content) - this.getVisibleButtonWidths();\n            const pos = content.scrollLeft + width;\n            const lastPos = content.scrollWidth - width;\n\n            content.scrollLeft = pos >= lastPos ? lastPos : pos;\n        },\n        onTabClick(event, tab, index) {\n            this.changeActiveIndex(event, tab, index);\n            this.$emit('tab-click', { originalEvent: event, index });\n        },\n        onTabKeyDown(event, tab, index) {\n            switch (event.code) {\n                case 'ArrowLeft':\n                    this.onTabArrowLeftKey(event);\n                    break;\n\n                case 'ArrowRight':\n                    this.onTabArrowRightKey(event);\n                    break;\n\n                case 'Home':\n                    this.onTabHomeKey(event);\n                    break;\n\n                case 'End':\n                    this.onTabEndKey(event);\n                    break;\n\n                case 'PageDown':\n                    this.onPageDownKey(event);\n                    break;\n\n                case 'PageUp':\n                    this.onPageUpKey(event);\n                    break;\n\n                case 'Enter':\n                case 'NumpadEnter':\n                case 'Space':\n                    this.onTabEnterKey(event, tab, index);\n                    break;\n\n                default:\n                    break;\n            }\n        },\n        onTabArrowRightKey(event) {\n            const nextHeaderAction = this.findNextHeaderAction(event.target.parentElement);\n\n            nextHeaderAction ? this.changeFocusedTab(event, nextHeaderAction) : this.onTabHomeKey(event);\n            event.preventDefault();\n        },\n        onTabArrowLeftKey(event) {\n            const prevHeaderAction = this.findPrevHeaderAction(event.target.parentElement);\n\n            prevHeaderAction ? this.changeFocusedTab(event, prevHeaderAction) : this.onTabEndKey(event);\n            event.preventDefault();\n        },\n        onTabHomeKey(event) {\n            const firstHeaderAction = this.findFirstHeaderAction();\n\n            this.changeFocusedTab(event, firstHeaderAction);\n            event.preventDefault();\n        },\n        onTabEndKey(event) {\n            const lastHeaderAction = this.findLastHeaderAction();\n\n            this.changeFocusedTab(event, lastHeaderAction);\n            event.preventDefault();\n        },\n        onPageDownKey(event) {\n            this.scrollInView({ index: this.$refs.nav.children.length - 2 });\n            event.preventDefault();\n        },\n        onPageUpKey(event) {\n            this.scrollInView({ index: 0 });\n            event.preventDefault();\n        },\n        onTabEnterKey(event, tab, index) {\n            this.changeActiveIndex(event, tab, index);\n\n            event.preventDefault();\n        },\n        findNextHeaderAction(tabElement, selfCheck = false) {\n            const headerElement = selfCheck ? tabElement : tabElement.nextElementSibling;\n\n            return headerElement\n                ? getAttribute(headerElement, 'data-p-disabled') || getAttribute(headerElement, 'data-pc-section') === 'inkbar'\n                    ? this.findNextHeaderAction(headerElement)\n                    : findSingle(headerElement, '[data-pc-section=\"headeraction\"]')\n                : null;\n        },\n        findPrevHeaderAction(tabElement, selfCheck = false) {\n            const headerElement = selfCheck ? tabElement : tabElement.previousElementSibling;\n\n            return headerElement\n                ? getAttribute(headerElement, 'data-p-disabled') || getAttribute(headerElement, 'data-pc-section') === 'inkbar'\n                    ? this.findPrevHeaderAction(headerElement)\n                    : findSingle(headerElement, '[data-pc-section=\"headeraction\"]')\n                : null;\n        },\n        findFirstHeaderAction() {\n            return this.findNextHeaderAction(this.$refs.nav.firstElementChild, true);\n        },\n        findLastHeaderAction() {\n            return this.findPrevHeaderAction(this.$refs.nav.lastElementChild, true);\n        },\n        changeActiveIndex(event, tab, index) {\n            if (!this.getTabProp(tab, 'disabled') && this.d_activeIndex !== index) {\n                this.d_activeIndex = index;\n\n                this.$emit('update:activeIndex', index);\n                this.$emit('tab-change', { originalEvent: event, index });\n\n                this.scrollInView({ index });\n            }\n        },\n        changeFocusedTab(event, element) {\n            if (element) {\n                focus(element);\n                this.scrollInView({ element });\n\n                if (this.selectOnFocus) {\n                    const index = parseInt(element.parentElement.dataset.pcIndex, 10);\n                    const tab = this.tabs[index];\n\n                    this.changeActiveIndex(event, tab, index);\n                }\n            }\n        },\n        scrollInView({ element, index = -1 }) {\n            const currentElement = element || this.$refs.nav.children[index];\n\n            if (currentElement) {\n                currentElement.scrollIntoView && currentElement.scrollIntoView({ block: 'nearest' });\n            }\n        },\n        updateInkBar() {\n            let tabHeader = this.$refs.nav.children[this.d_activeIndex];\n\n            this.$refs.inkbar.style.width = getWidth(tabHeader) + 'px';\n            this.$refs.inkbar.style.left = getOffset(tabHeader).left - getOffset(this.$refs.nav).left + 'px';\n        },\n        updateButtonState() {\n            const content = this.$refs.content;\n            const { scrollLeft, scrollWidth } = content;\n            const width = getWidth(content);\n\n            this.isPrevButtonDisabled = scrollLeft === 0;\n            this.isNextButtonDisabled = parseInt(scrollLeft) === scrollWidth - width;\n        },\n        getVisibleButtonWidths() {\n            const { prevBtn, nextBtn } = this.$refs;\n\n            return [prevBtn, nextBtn].reduce((acc, el) => (el ? acc + getWidth(el) : acc), 0);\n        }\n    },\n    computed: {\n        tabs() {\n            return this.$slots.default().reduce((tabs, child) => {\n                if (this.isTabPanel(child)) {\n                    tabs.push(child);\n                } else if (child.children && child.children instanceof Array) {\n                    child.children.forEach((nestedChild) => {\n                        if (this.isTabPanel(nestedChild)) {\n                            tabs.push(nestedChild);\n                        }\n                    });\n                }\n\n                return tabs;\n            }, []);\n        },\n        prevButtonAriaLabel() {\n            return this.$primevue.config.locale.aria ? this.$primevue.config.locale.aria.previous : undefined;\n        },\n        nextButtonAriaLabel() {\n            return this.$primevue.config.locale.aria ? this.$primevue.config.locale.aria.next : undefined;\n        }\n    },\n    directives: {\n        ripple: Ripple\n    },\n    components: {\n        ChevronLeftIcon,\n        ChevronRightIcon\n    }\n};\n</script>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}