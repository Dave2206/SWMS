{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"complaint-form\"\n};\nconst _hoisted_2 = {\n  class: \"form-container\"\n};\nconst _hoisted_3 = {\n  class: \"p-field\"\n};\nconst _hoisted_4 = {\n  class: \"p-field\"\n};\nconst _hoisted_5 = {\n  class: \"p-field\"\n};\nconst _hoisted_6 = {\n  class: \"p-field\"\n};\nconst _hoisted_7 = {\n  class: \"p-field\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Dropdown = _resolveComponent(\"Dropdown\");\n  const _component_InputText = _resolveComponent(\"InputText\");\n  const _component_Textarea = _resolveComponent(\"Textarea\");\n  const _component_FileUpload = _resolveComponent(\"FileUpload\");\n  const _component_Button = _resolveComponent(\"Button\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_cache[12] || (_cache[12] = _createElementVNode(\"h2\", null, \"Submit a Solid Waste Disposal Complaint\", -1 /* HOISTED */)), _createElementVNode(\"form\", {\n    onSubmit: _cache[5] || (_cache[5] = _withModifiers((...args) => $setup.submitComplaint && $setup.submitComplaint(...args), [\"prevent\"]))\n  }, [_createCommentVNode(\" Subject Dropdown \"), _createElementVNode(\"div\", _hoisted_3, [_cache[6] || (_cache[6] = _createElementVNode(\"label\", {\n    for: \"subject\"\n  }, \"Subject:\", -1 /* HOISTED */)), _createVNode(_component_Dropdown, {\n    modelValue: $setup.form.subject,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.form.subject = $event),\n    options: $setup.subjectOptions,\n    optionLabel: \"label\",\n    optionValue: \"value\",\n    placeholder: \"Select Subject\",\n    required: \"\",\n    class: \"w-full\"\n  }, null, 8 /* PROPS */, [\"modelValue\", \"options\"])]), _createCommentVNode(\" Email Input \"), _createElementVNode(\"div\", _hoisted_4, [_cache[7] || (_cache[7] = _createElementVNode(\"label\", {\n    for: \"email\"\n  }, \"Email:\", -1 /* HOISTED */)), _createVNode(_component_InputText, {\n    modelValue: $setup.form.email,\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.form.email = $event),\n    id: \"email\",\n    type: \"email\",\n    placeholder: \"Enter your email\",\n    required: \"\",\n    class: \"w-full\"\n  }, null, 8 /* PROPS */, [\"modelValue\"])]), _createCommentVNode(\" Address Input (Based on Map Pin) \"), _createElementVNode(\"div\", _hoisted_5, [_cache[8] || (_cache[8] = _createElementVNode(\"label\", {\n    for: \"address\"\n  }, \"Address:\", -1 /* HOISTED */)), _createVNode(_component_InputText, {\n    modelValue: $setup.form.address,\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.form.address = $event),\n    id: \"address\",\n    type: \"text\",\n    placeholder: \"Click on map to select address\",\n    readonly: \"\",\n    class: \"w-full\"\n  }, null, 8 /* PROPS */, [\"modelValue\"])]), _createCommentVNode(\" Map Display with Pin \"), _cache[11] || (_cache[11] = _createElementVNode(\"div\", {\n    id: \"map\",\n    style: {\n      \"height\": \"400px\",\n      \"width\": \"100%\"\n    }\n  }, null, -1 /* HOISTED */)), _createCommentVNode(\" Description Textarea \"), _createElementVNode(\"div\", _hoisted_6, [_cache[9] || (_cache[9] = _createElementVNode(\"label\", {\n    for: \"description\"\n  }, \"Description:\", -1 /* HOISTED */)), _createVNode(_component_Textarea, {\n    modelValue: $setup.form.description,\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $setup.form.description = $event),\n    id: \"description\",\n    rows: \"5\",\n    placeholder: \"Describe the issue\",\n    required: \"\",\n    class: \"w-full\"\n  }, null, 8 /* PROPS */, [\"modelValue\"])]), _createCommentVNode(\" File Upload \"), _createElementVNode(\"div\", _hoisted_7, [_cache[10] || (_cache[10] = _createElementVNode(\"label\", {\n    for: \"file\"\n  }, \"Attachment:\", -1 /* HOISTED */)), _createVNode(_component_FileUpload, {\n    modelValue: $setup.form.file,\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $setup.form.file = $event),\n    name: \"file\",\n    chooseLabel: \"Choose File\",\n    uploadLabel: \"Upload\",\n    class: \"w-full\"\n  }, null, 8 /* PROPS */, [\"modelValue\"])]), _createCommentVNode(\" Submit Button \"), _createVNode(_component_Button, {\n    label: \"Submit Complaint\",\n    type: \"submit\",\n    icon: \"pi pi-send\",\n    class: \"p-button-rounded p-button-success w-full\"\n  })], 32 /* NEED_HYDRATION */)])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","onSubmit","_cache","_withModifiers","args","$setup","submitComplaint","_createCommentVNode","_hoisted_3","for","_createVNode","_component_Dropdown","modelValue","form","subject","$event","options","subjectOptions","optionLabel","optionValue","placeholder","required","_hoisted_4","_component_InputText","email","id","type","_hoisted_5","address","readonly","style","_hoisted_6","_component_Textarea","description","rows","_hoisted_7","_component_FileUpload","file","name","chooseLabel","uploadLabel","_component_Button","label","icon"],"sources":["C:\\Users\\darle\\solid-waste-management-system\\src\\components\\ComplainPage.vue"],"sourcesContent":["<template>\r\n  <div class=\"complaint-form\">\r\n    <div class=\"form-container\">\r\n      <h2>Submit a Solid Waste Disposal Complaint</h2>\r\n      \r\n      <form @submit.prevent=\"submitComplaint\">\r\n        <!-- Subject Dropdown -->\r\n        <div class=\"p-field\">\r\n          <label for=\"subject\">Subject:</label>\r\n          <Dropdown v-model=\"form.subject\" :options=\"subjectOptions\" optionLabel=\"label\" optionValue=\"value\" placeholder=\"Select Subject\" required class=\"w-full\"/>\r\n        </div>\r\n\r\n        <!-- Email Input -->\r\n        <div class=\"p-field\">\r\n          <label for=\"email\">Email:</label>\r\n          <InputText v-model=\"form.email\" id=\"email\" type=\"email\" placeholder=\"Enter your email\" required class=\"w-full\"/>\r\n        </div>\r\n\r\n        <!-- Address Input (Based on Map Pin) -->\r\n        <div class=\"p-field\">\r\n          <label for=\"address\">Address:</label>\r\n          <InputText v-model=\"form.address\" id=\"address\" type=\"text\" placeholder=\"Click on map to select address\" readonly class=\"w-full\"/>\r\n        </div>\r\n\r\n        <!-- Map Display with Pin -->\r\n        <div id=\"map\" style=\"height: 400px; width: 100%\"></div>\r\n\r\n        <!-- Description Textarea -->\r\n        <div class=\"p-field\">\r\n          <label for=\"description\">Description:</label>\r\n          <Textarea v-model=\"form.description\" id=\"description\" rows=\"5\" placeholder=\"Describe the issue\" required class=\"w-full\"/>\r\n        </div>\r\n\r\n        <!-- File Upload -->\r\n        <div class=\"p-field\">\r\n          <label for=\"file\">Attachment:</label>\r\n          <FileUpload v-model=\"form.file\" name=\"file\" chooseLabel=\"Choose File\" uploadLabel=\"Upload\" class=\"w-full\"/>\r\n        </div>\r\n\r\n        <!-- Submit Button -->\r\n        <Button label=\"Submit Complaint\" type=\"submit\" icon=\"pi pi-send\" class=\"p-button-rounded p-button-success w-full\" />\r\n      </form>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, onMounted } from 'vue';\r\nimport Select from 'primevue/select';\r\nimport  InputText  from 'primevue/inputtext';\r\nimport  Textarea  from 'primevue/textarea';\r\nimport  FileUpload  from 'primevue/fileupload';\r\nimport  Button  from 'primevue/button';\r\n\r\nimport L from 'leaflet';\r\n\r\nexport default {\r\n  name: \"ComplainPage\",\r\n  components: {\r\n    Dropdown,\r\n    InputText,\r\n    Textarea,\r\n    FileUpload,\r\n    Button\r\n  },\r\n  setup() {\r\n    const subjectOptions = [\r\n      { label: 'Garbage not picked up', value: 'garbage_not_picked_up' },\r\n      { label: 'No garbage pickup truck', value: 'no_garbage_truck' },\r\n      { label: 'Request for garbage pickup', value: 'request_pickup' },\r\n      { label: 'Too many garbage on the streets', value: 'too_much_garbage' }\r\n    ];\r\n\r\n    const form = ref({\r\n      subject: null,\r\n      email: '',\r\n      address: '',\r\n      description: '',\r\n      file: null,\r\n      latitude: null,\r\n      longitude: null\r\n    });\r\n\r\n    let map;\r\n    let marker;\r\n\r\n    // Initialize the Leaflet map\r\n    const initMap = () => {\r\n      map = L.map('map').setView([51.505, -0.09], 13); // Default to a specific lat/lon (London)\r\n      \r\n      // Tile layer (OpenStreetMap)\r\n      L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\r\n        attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n      }).addTo(map);\r\n\r\n      // Add a default marker at the center of the map\r\n      marker = L.marker([51.505, -0.09]).addTo(map);\r\n\r\n      // Listen for marker drag and update address\r\n      marker.on('dragend', function(e) {\r\n        const latLng = e.target.getLatLng();\r\n        fetchAddress(latLng.lat, latLng.lng);\r\n      });\r\n\r\n      // Listen for map click to add a marker\r\n      map.on('click', function(e) {\r\n        const latLng = e.latlng;\r\n        marker.setLatLng(latLng);\r\n        fetchAddress(latLng.lat, latLng.lng);\r\n      });\r\n    };\r\n\r\n    // Fetch address from reverse geocoding API (OpenStreetMap Nominatim API)\r\n    const fetchAddress = async (lat, lon) => {\r\n      // Reverse geocoding API (OpenStreetMap)\r\n      const response = await fetch(`https://nominatim.openstreetmap.org/reverse?format=json&lat=${lat}&lon=${lon}&addressdetails=1`);\r\n      const data = await response.json();\r\n      if (data && data.address) {\r\n        const address = `${data.address.road || ''}, ${data.address.city || ''}, ${data.address.country || ''}`;\r\n        form.value.address = address;\r\n        form.value.latitude = lat;\r\n        form.value.longitude = lon;\r\n      }\r\n    };\r\n\r\n    const submitComplaint = () => {\r\n      console.log('Complaint submitted:', form.value);\r\n      // Handle the form submission logic here\r\n    };\r\n\r\n    onMounted(() => {\r\n      initMap();\r\n    });\r\n\r\n    return {\r\n      subjectOptions,\r\n      form,\r\n      submitComplaint\r\n    };\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.complaint-form {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 100vh;\r\n  background-color: #f0f4f8;\r\n}\r\n\r\n.form-container {\r\n  background-color: #ffffff;\r\n  padding: 30px;\r\n  border-radius: 10px;\r\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\r\n  width: 100%;\r\n  max-width: 700px;\r\n}\r\n\r\nh2 {\r\n  text-align: center;\r\n  color: #333;\r\n  font-size: 24px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.p-field {\r\n  margin-bottom: 1.5em;\r\n}\r\n\r\n.p-field label {\r\n  font-weight: bold;\r\n}\r\n\r\nbutton {\r\n  width: 100%;\r\n  padding: 10px;\r\n}\r\n\r\n.p-button-rounded {\r\n  border-radius: 50px;\r\n}\r\n\r\n.p-button-success {\r\n  background-color: #28a745;\r\n  border: none;\r\n}\r\n\r\n.p-button-success:hover {\r\n  background-color: #218838;\r\n}\r\n\r\n#map {\r\n  height: 400px;\r\n  width: 100%;\r\n  margin-bottom: 1em;\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .form-container {\r\n    padding: 20px;\r\n  }\r\n\r\n  h2 {\r\n    font-size: 20px;\r\n  }\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}