{"ast":null,"code":"import { UniqueComponentId, ConnectedOverlayScrollHandler } from '@primevue/core/utils';\nimport { focus, find, findSingle, addStyle, absolutePosition, getOuterWidth, isTouchDevice } from '@primeuix/utils/dom';\nimport { ZIndex } from '@primeuix/utils/zindex';\nimport OverlayEventBus from 'primevue/overlayeventbus';\nimport Portal from 'primevue/portal';\nimport BaseComponent from '@primevue/core/basecomponent';\nimport MenuStyle from 'primevue/menu/style';\nimport { resolve } from '@primeuix/utils/object';\nimport Ripple from 'primevue/ripple';\nimport { mergeProps, resolveDirective, openBlock, createElementBlock, createElementVNode, withDirectives, createBlock, resolveDynamicComponent, normalizeClass, createCommentVNode, toDisplayString, resolveComponent, withCtx, createVNode, Transition, renderSlot, Fragment, renderList, createTextVNode } from 'vue';\nvar script$2 = {\n  name: 'BaseMenu',\n  \"extends\": BaseComponent,\n  props: {\n    popup: {\n      type: Boolean,\n      \"default\": false\n    },\n    model: {\n      type: Array,\n      \"default\": null\n    },\n    appendTo: {\n      type: [String, Object],\n      \"default\": 'body'\n    },\n    autoZIndex: {\n      type: Boolean,\n      \"default\": true\n    },\n    baseZIndex: {\n      type: Number,\n      \"default\": 0\n    },\n    tabindex: {\n      type: Number,\n      \"default\": 0\n    },\n    ariaLabel: {\n      type: String,\n      \"default\": null\n    },\n    ariaLabelledby: {\n      type: String,\n      \"default\": null\n    }\n  },\n  style: MenuStyle,\n  provide: function provide() {\n    return {\n      $pcMenu: this,\n      $parentInstance: this\n    };\n  }\n};\nvar script$1 = {\n  name: 'Menuitem',\n  hostName: 'Menu',\n  \"extends\": BaseComponent,\n  inheritAttrs: false,\n  emits: ['item-click', 'item-mousemove'],\n  props: {\n    item: null,\n    templates: null,\n    id: null,\n    focusedOptionId: null,\n    index: null\n  },\n  methods: {\n    getItemProp: function getItemProp(processedItem, name) {\n      return processedItem && processedItem.item ? resolve(processedItem.item[name]) : undefined;\n    },\n    getPTOptions: function getPTOptions(key) {\n      return this.ptm(key, {\n        context: {\n          item: this.item,\n          index: this.index,\n          focused: this.isItemFocused(),\n          disabled: this.disabled()\n        }\n      });\n    },\n    isItemFocused: function isItemFocused() {\n      return this.focusedOptionId === this.id;\n    },\n    onItemClick: function onItemClick(event) {\n      var command = this.getItemProp(this.item, 'command');\n      command && command({\n        originalEvent: event,\n        item: this.item.item\n      });\n      this.$emit('item-click', {\n        originalEvent: event,\n        item: this.item,\n        id: this.id\n      });\n    },\n    onItemMouseMove: function onItemMouseMove(event) {\n      this.$emit('item-mousemove', {\n        originalEvent: event,\n        item: this.item,\n        id: this.id\n      });\n    },\n    visible: function visible() {\n      return typeof this.item.visible === 'function' ? this.item.visible() : this.item.visible !== false;\n    },\n    disabled: function disabled() {\n      return typeof this.item.disabled === 'function' ? this.item.disabled() : this.item.disabled;\n    },\n    label: function label() {\n      return typeof this.item.label === 'function' ? this.item.label() : this.item.label;\n    },\n    getMenuItemProps: function getMenuItemProps(item) {\n      return {\n        action: mergeProps({\n          \"class\": this.cx('itemLink'),\n          tabindex: '-1'\n        }, this.getPTOptions('itemLink')),\n        icon: mergeProps({\n          \"class\": [this.cx('itemIcon'), item.icon]\n        }, this.getPTOptions('itemIcon')),\n        label: mergeProps({\n          \"class\": this.cx('itemLabel')\n        }, this.getPTOptions('itemLabel'))\n      };\n    }\n  },\n  directives: {\n    ripple: Ripple\n  }\n};\nvar _hoisted_1$1 = [\"id\", \"aria-label\", \"aria-disabled\", \"data-p-focused\", \"data-p-disabled\"];\nvar _hoisted_2$1 = [\"href\", \"target\"];\nfunction render$1(_ctx, _cache, $props, $setup, $data, $options) {\n  var _directive_ripple = resolveDirective(\"ripple\");\n  return $options.visible() ? (openBlock(), createElementBlock(\"li\", mergeProps({\n    key: 0,\n    id: $props.id,\n    \"class\": [_ctx.cx('item'), $props.item[\"class\"]],\n    role: \"menuitem\",\n    style: $props.item.style,\n    \"aria-label\": $options.label(),\n    \"aria-disabled\": $options.disabled()\n  }, $options.getPTOptions('item'), {\n    \"data-p-focused\": $options.isItemFocused(),\n    \"data-p-disabled\": $options.disabled() || false\n  }), [createElementVNode(\"div\", mergeProps({\n    \"class\": _ctx.cx('itemContent'),\n    onClick: _cache[0] || (_cache[0] = function ($event) {\n      return $options.onItemClick($event);\n    }),\n    onMousemove: _cache[1] || (_cache[1] = function ($event) {\n      return $options.onItemMouseMove($event);\n    })\n  }, $options.getPTOptions('itemContent')), [!$props.templates.item ? withDirectives((openBlock(), createElementBlock(\"a\", mergeProps({\n    key: 0,\n    href: $props.item.url,\n    \"class\": _ctx.cx('itemLink'),\n    target: $props.item.target,\n    tabindex: \"-1\"\n  }, $options.getPTOptions('itemLink')), [$props.templates.itemicon ? (openBlock(), createBlock(resolveDynamicComponent($props.templates.itemicon), {\n    key: 0,\n    item: $props.item,\n    \"class\": normalizeClass(_ctx.cx('itemIcon'))\n  }, null, 8, [\"item\", \"class\"])) : $props.item.icon ? (openBlock(), createElementBlock(\"span\", mergeProps({\n    key: 1,\n    \"class\": [_ctx.cx('itemIcon'), $props.item.icon]\n  }, $options.getPTOptions('itemIcon')), null, 16)) : createCommentVNode(\"\", true), createElementVNode(\"span\", mergeProps({\n    \"class\": _ctx.cx('itemLabel')\n  }, $options.getPTOptions('itemLabel')), toDisplayString($options.label()), 17)], 16, _hoisted_2$1)), [[_directive_ripple]]) : $props.templates.item ? (openBlock(), createBlock(resolveDynamicComponent($props.templates.item), {\n    key: 1,\n    item: $props.item,\n    label: $options.label(),\n    props: $options.getMenuItemProps($props.item)\n  }, null, 8, [\"item\", \"label\", \"props\"])) : createCommentVNode(\"\", true)], 16)], 16, _hoisted_1$1)) : createCommentVNode(\"\", true);\n}\nscript$1.render = render$1;\nfunction _toConsumableArray(r) {\n  return _arrayWithoutHoles(r) || _iterableToArray(r) || _unsupportedIterableToArray(r) || _nonIterableSpread();\n}\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _unsupportedIterableToArray(r, a) {\n  if (r) {\n    if (\"string\" == typeof r) return _arrayLikeToArray(r, a);\n    var t = {}.toString.call(r).slice(8, -1);\n    return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0;\n  }\n}\nfunction _iterableToArray(r) {\n  if (\"undefined\" != typeof Symbol && null != r[Symbol.iterator] || null != r[\"@@iterator\"]) return Array.from(r);\n}\nfunction _arrayWithoutHoles(r) {\n  if (Array.isArray(r)) return _arrayLikeToArray(r);\n}\nfunction _arrayLikeToArray(r, a) {\n  (null == a || a > r.length) && (a = r.length);\n  for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];\n  return n;\n}\nvar script = {\n  name: 'Menu',\n  \"extends\": script$2,\n  inheritAttrs: false,\n  emits: ['show', 'hide', 'focus', 'blur'],\n  data: function data() {\n    return {\n      id: this.$attrs.id,\n      overlayVisible: false,\n      focused: false,\n      focusedOptionIndex: -1,\n      selectedOptionIndex: -1\n    };\n  },\n  watch: {\n    '$attrs.id': function $attrsId(newValue) {\n      this.id = newValue || UniqueComponentId();\n    }\n  },\n  target: null,\n  outsideClickListener: null,\n  scrollHandler: null,\n  resizeListener: null,\n  container: null,\n  list: null,\n  mounted: function mounted() {\n    this.id = this.id || UniqueComponentId();\n    if (!this.popup) {\n      this.bindResizeListener();\n      this.bindOutsideClickListener();\n    }\n  },\n  beforeUnmount: function beforeUnmount() {\n    this.unbindResizeListener();\n    this.unbindOutsideClickListener();\n    if (this.scrollHandler) {\n      this.scrollHandler.destroy();\n      this.scrollHandler = null;\n    }\n    this.target = null;\n    if (this.container && this.autoZIndex) {\n      ZIndex.clear(this.container);\n    }\n    this.container = null;\n  },\n  methods: {\n    itemClick: function itemClick(event) {\n      var item = event.item;\n      if (this.disabled(item)) {\n        return;\n      }\n      if (item.command) {\n        item.command(event);\n      }\n      if (this.overlayVisible) this.hide();\n      if (!this.popup && this.focusedOptionIndex !== event.id) {\n        this.focusedOptionIndex = event.id;\n      }\n    },\n    itemMouseMove: function itemMouseMove(event) {\n      if (this.focused) {\n        this.focusedOptionIndex = event.id;\n      }\n    },\n    onListFocus: function onListFocus(event) {\n      this.focused = true;\n      !this.popup && this.changeFocusedOptionIndex(0);\n      this.$emit('focus', event);\n    },\n    onListBlur: function onListBlur(event) {\n      this.focused = false;\n      this.focusedOptionIndex = -1;\n      this.$emit('blur', event);\n    },\n    onListKeyDown: function onListKeyDown(event) {\n      switch (event.code) {\n        case 'ArrowDown':\n          this.onArrowDownKey(event);\n          break;\n        case 'ArrowUp':\n          this.onArrowUpKey(event);\n          break;\n        case 'Home':\n          this.onHomeKey(event);\n          break;\n        case 'End':\n          this.onEndKey(event);\n          break;\n        case 'Enter':\n        case 'NumpadEnter':\n          this.onEnterKey(event);\n          break;\n        case 'Space':\n          this.onSpaceKey(event);\n          break;\n        case 'Escape':\n          if (this.popup) {\n            focus(this.target);\n            this.hide();\n          }\n        case 'Tab':\n          this.overlayVisible && this.hide();\n          break;\n      }\n    },\n    onArrowDownKey: function onArrowDownKey(event) {\n      var optionIndex = this.findNextOptionIndex(this.focusedOptionIndex);\n      this.changeFocusedOptionIndex(optionIndex);\n      event.preventDefault();\n    },\n    onArrowUpKey: function onArrowUpKey(event) {\n      if (event.altKey && this.popup) {\n        focus(this.target);\n        this.hide();\n        event.preventDefault();\n      } else {\n        var optionIndex = this.findPrevOptionIndex(this.focusedOptionIndex);\n        this.changeFocusedOptionIndex(optionIndex);\n        event.preventDefault();\n      }\n    },\n    onHomeKey: function onHomeKey(event) {\n      this.changeFocusedOptionIndex(0);\n      event.preventDefault();\n    },\n    onEndKey: function onEndKey(event) {\n      this.changeFocusedOptionIndex(find(this.container, 'li[data-pc-section=\"item\"][data-p-disabled=\"false\"]').length - 1);\n      event.preventDefault();\n    },\n    onEnterKey: function onEnterKey(event) {\n      var element = findSingle(this.list, \"li[id=\\\"\".concat(\"\".concat(this.focusedOptionIndex), \"\\\"]\"));\n      var anchorElement = element && findSingle(element, 'a[data-pc-section=\"itemlink\"]');\n      this.popup && focus(this.target);\n      anchorElement ? anchorElement.click() : element && element.click();\n      event.preventDefault();\n    },\n    onSpaceKey: function onSpaceKey(event) {\n      this.onEnterKey(event);\n    },\n    findNextOptionIndex: function findNextOptionIndex(index) {\n      var links = find(this.container, 'li[data-pc-section=\"item\"][data-p-disabled=\"false\"]');\n      var matchedOptionIndex = _toConsumableArray(links).findIndex(function (link) {\n        return link.id === index;\n      });\n      return matchedOptionIndex > -1 ? matchedOptionIndex + 1 : 0;\n    },\n    findPrevOptionIndex: function findPrevOptionIndex(index) {\n      var links = find(this.container, 'li[data-pc-section=\"item\"][data-p-disabled=\"false\"]');\n      var matchedOptionIndex = _toConsumableArray(links).findIndex(function (link) {\n        return link.id === index;\n      });\n      return matchedOptionIndex > -1 ? matchedOptionIndex - 1 : 0;\n    },\n    changeFocusedOptionIndex: function changeFocusedOptionIndex(index) {\n      var links = find(this.container, 'li[data-pc-section=\"item\"][data-p-disabled=\"false\"]');\n      var order = index >= links.length ? links.length - 1 : index < 0 ? 0 : index;\n      order > -1 && (this.focusedOptionIndex = links[order].getAttribute('id'));\n    },\n    toggle: function toggle(event) {\n      if (this.overlayVisible) this.hide();else this.show(event);\n    },\n    show: function show(event) {\n      this.overlayVisible = true;\n      this.target = event.currentTarget;\n    },\n    hide: function hide() {\n      this.overlayVisible = false;\n      this.target = null;\n    },\n    onEnter: function onEnter(el) {\n      addStyle(el, {\n        position: 'absolute',\n        top: '0',\n        left: '0'\n      });\n      this.alignOverlay();\n      this.bindOutsideClickListener();\n      this.bindResizeListener();\n      this.bindScrollListener();\n      if (this.autoZIndex) {\n        ZIndex.set('menu', el, this.baseZIndex + this.$primevue.config.zIndex.menu);\n      }\n      if (this.popup) {\n        focus(this.list);\n      }\n      this.$emit('show');\n    },\n    onLeave: function onLeave() {\n      this.unbindOutsideClickListener();\n      this.unbindResizeListener();\n      this.unbindScrollListener();\n      this.$emit('hide');\n    },\n    onAfterLeave: function onAfterLeave(el) {\n      if (this.autoZIndex) {\n        ZIndex.clear(el);\n      }\n    },\n    alignOverlay: function alignOverlay() {\n      absolutePosition(this.container, this.target);\n      var targetWidth = getOuterWidth(this.target);\n      if (targetWidth > getOuterWidth(this.container)) {\n        this.container.style.minWidth = getOuterWidth(this.target) + 'px';\n      }\n    },\n    bindOutsideClickListener: function bindOutsideClickListener() {\n      var _this = this;\n      if (!this.outsideClickListener) {\n        this.outsideClickListener = function (event) {\n          var isOutsideContainer = _this.container && !_this.container.contains(event.target);\n          var isOutsideTarget = !(_this.target && (_this.target === event.target || _this.target.contains(event.target)));\n          if (_this.overlayVisible && isOutsideContainer && isOutsideTarget) {\n            _this.hide();\n          } else if (!_this.popup && isOutsideContainer && isOutsideTarget) {\n            _this.focusedOptionIndex = -1;\n          }\n        };\n        document.addEventListener('click', this.outsideClickListener);\n      }\n    },\n    unbindOutsideClickListener: function unbindOutsideClickListener() {\n      if (this.outsideClickListener) {\n        document.removeEventListener('click', this.outsideClickListener);\n        this.outsideClickListener = null;\n      }\n    },\n    bindScrollListener: function bindScrollListener() {\n      var _this2 = this;\n      if (!this.scrollHandler) {\n        this.scrollHandler = new ConnectedOverlayScrollHandler(this.target, function () {\n          if (_this2.overlayVisible) {\n            _this2.hide();\n          }\n        });\n      }\n      this.scrollHandler.bindScrollListener();\n    },\n    unbindScrollListener: function unbindScrollListener() {\n      if (this.scrollHandler) {\n        this.scrollHandler.unbindScrollListener();\n      }\n    },\n    bindResizeListener: function bindResizeListener() {\n      var _this3 = this;\n      if (!this.resizeListener) {\n        this.resizeListener = function () {\n          if (_this3.overlayVisible && !isTouchDevice()) {\n            _this3.hide();\n          }\n        };\n        window.addEventListener('resize', this.resizeListener);\n      }\n    },\n    unbindResizeListener: function unbindResizeListener() {\n      if (this.resizeListener) {\n        window.removeEventListener('resize', this.resizeListener);\n        this.resizeListener = null;\n      }\n    },\n    visible: function visible(item) {\n      return typeof item.visible === 'function' ? item.visible() : item.visible !== false;\n    },\n    disabled: function disabled(item) {\n      return typeof item.disabled === 'function' ? item.disabled() : item.disabled;\n    },\n    label: function label(item) {\n      return typeof item.label === 'function' ? item.label() : item.label;\n    },\n    onOverlayClick: function onOverlayClick(event) {\n      OverlayEventBus.emit('overlay-click', {\n        originalEvent: event,\n        target: this.target\n      });\n    },\n    containerRef: function containerRef(el) {\n      this.container = el;\n    },\n    listRef: function listRef(el) {\n      this.list = el;\n    }\n  },\n  computed: {\n    focusedOptionId: function focusedOptionId() {\n      return this.focusedOptionIndex !== -1 ? this.focusedOptionIndex : null;\n    }\n  },\n  components: {\n    PVMenuitem: script$1,\n    Portal: Portal\n  }\n};\nvar _hoisted_1 = [\"id\"];\nvar _hoisted_2 = [\"id\", \"tabindex\", \"aria-activedescendant\", \"aria-label\", \"aria-labelledby\"];\nvar _hoisted_3 = [\"id\"];\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_PVMenuitem = resolveComponent(\"PVMenuitem\");\n  var _component_Portal = resolveComponent(\"Portal\");\n  return openBlock(), createBlock(_component_Portal, {\n    appendTo: _ctx.appendTo,\n    disabled: !_ctx.popup\n  }, {\n    \"default\": withCtx(function () {\n      return [createVNode(Transition, mergeProps({\n        name: \"p-connected-overlay\",\n        onEnter: $options.onEnter,\n        onLeave: $options.onLeave,\n        onAfterLeave: $options.onAfterLeave\n      }, _ctx.ptm('transition')), {\n        \"default\": withCtx(function () {\n          return [(_ctx.popup ? $data.overlayVisible : true) ? (openBlock(), createElementBlock(\"div\", mergeProps({\n            key: 0,\n            ref: $options.containerRef,\n            id: $data.id,\n            \"class\": _ctx.cx('root'),\n            onClick: _cache[3] || (_cache[3] = function () {\n              return $options.onOverlayClick && $options.onOverlayClick.apply($options, arguments);\n            })\n          }, _ctx.ptmi('root')), [_ctx.$slots.start ? (openBlock(), createElementBlock(\"div\", mergeProps({\n            key: 0,\n            \"class\": _ctx.cx('start')\n          }, _ctx.ptm('start')), [renderSlot(_ctx.$slots, \"start\")], 16)) : createCommentVNode(\"\", true), createElementVNode(\"ul\", mergeProps({\n            ref: $options.listRef,\n            id: $data.id + '_list',\n            \"class\": _ctx.cx('list'),\n            role: \"menu\",\n            tabindex: _ctx.tabindex,\n            \"aria-activedescendant\": $data.focused ? $options.focusedOptionId : undefined,\n            \"aria-label\": _ctx.ariaLabel,\n            \"aria-labelledby\": _ctx.ariaLabelledby,\n            onFocus: _cache[0] || (_cache[0] = function () {\n              return $options.onListFocus && $options.onListFocus.apply($options, arguments);\n            }),\n            onBlur: _cache[1] || (_cache[1] = function () {\n              return $options.onListBlur && $options.onListBlur.apply($options, arguments);\n            }),\n            onKeydown: _cache[2] || (_cache[2] = function () {\n              return $options.onListKeyDown && $options.onListKeyDown.apply($options, arguments);\n            })\n          }, _ctx.ptm('list')), [(openBlock(true), createElementBlock(Fragment, null, renderList(_ctx.model, function (item, i) {\n            return openBlock(), createElementBlock(Fragment, {\n              key: $options.label(item) + i.toString()\n            }, [item.items && $options.visible(item) && !item.separator ? (openBlock(), createElementBlock(Fragment, {\n              key: 0\n            }, [item.items ? (openBlock(), createElementBlock(\"li\", mergeProps({\n              key: 0,\n              id: $data.id + '_' + i,\n              \"class\": [_ctx.cx('submenuLabel'), item[\"class\"]],\n              role: \"none\",\n              ref_for: true\n            }, _ctx.ptm('submenuLabel')), [renderSlot(_ctx.$slots, _ctx.$slots.submenulabel ? 'submenulabel' : 'submenuheader', {\n              item: item\n            }, function () {\n              return [createTextVNode(toDisplayString($options.label(item)), 1)];\n            })], 16, _hoisted_3)) : createCommentVNode(\"\", true), (openBlock(true), createElementBlock(Fragment, null, renderList(item.items, function (child, j) {\n              return openBlock(), createElementBlock(Fragment, {\n                key: child.label + i + '_' + j\n              }, [$options.visible(child) && !child.separator ? (openBlock(), createBlock(_component_PVMenuitem, {\n                key: 0,\n                id: $data.id + '_' + i + '_' + j,\n                item: child,\n                templates: _ctx.$slots,\n                focusedOptionId: $options.focusedOptionId,\n                unstyled: _ctx.unstyled,\n                onItemClick: $options.itemClick,\n                onItemMousemove: $options.itemMouseMove,\n                pt: _ctx.pt\n              }, null, 8, [\"id\", \"item\", \"templates\", \"focusedOptionId\", \"unstyled\", \"onItemClick\", \"onItemMousemove\", \"pt\"])) : $options.visible(child) && child.separator ? (openBlock(), createElementBlock(\"li\", mergeProps({\n                key: 'separator' + i + j,\n                \"class\": [_ctx.cx('separator'), item[\"class\"]],\n                style: child.style,\n                role: \"separator\",\n                ref_for: true\n              }, _ctx.ptm('separator')), null, 16)) : createCommentVNode(\"\", true)], 64);\n            }), 128))], 64)) : $options.visible(item) && item.separator ? (openBlock(), createElementBlock(\"li\", mergeProps({\n              key: 'separator' + i.toString(),\n              \"class\": [_ctx.cx('separator'), item[\"class\"]],\n              style: item.style,\n              role: \"separator\",\n              ref_for: true\n            }, _ctx.ptm('separator')), null, 16)) : (openBlock(), createBlock(_component_PVMenuitem, {\n              key: $options.label(item) + i.toString(),\n              id: $data.id + '_' + i,\n              item: item,\n              index: i,\n              templates: _ctx.$slots,\n              focusedOptionId: $options.focusedOptionId,\n              unstyled: _ctx.unstyled,\n              onItemClick: $options.itemClick,\n              onItemMousemove: $options.itemMouseMove,\n              pt: _ctx.pt\n            }, null, 8, [\"id\", \"item\", \"index\", \"templates\", \"focusedOptionId\", \"unstyled\", \"onItemClick\", \"onItemMousemove\", \"pt\"]))], 64);\n          }), 128))], 16, _hoisted_2), _ctx.$slots.end ? (openBlock(), createElementBlock(\"div\", mergeProps({\n            key: 1,\n            \"class\": _ctx.cx('end')\n          }, _ctx.ptm('end')), [renderSlot(_ctx.$slots, \"end\")], 16)) : createCommentVNode(\"\", true)], 16, _hoisted_1)) : createCommentVNode(\"\", true)];\n        }),\n        _: 3\n      }, 16, [\"onEnter\", \"onLeave\", \"onAfterLeave\"])];\n    }),\n    _: 3\n  }, 8, [\"appendTo\", \"disabled\"]);\n}\nscript.render = render;\nexport { script as default };","map":{"version":3,"names":["script$2","name","BaseComponent","props","popup","type","Boolean","model","Array","appendTo","String","Object","autoZIndex","baseZIndex","Number","tabindex","ariaLabel","ariaLabelledby","style","MenuStyle","provide","$pcMenu","$parentInstance","script$1","hostName","inheritAttrs","emits","item","templates","id","focusedOptionId","index","methods","getItemProp","processedItem","resolve","undefined","getPTOptions","key","ptm","context","focused","isItemFocused","disabled","onItemClick","event","command","originalEvent","$emit","onItemMouseMove","visible","label","getMenuItemProps","action","mergeProps","cx","icon","directives","ripple","Ripple","$options","openBlock","createElementBlock","$props","_ctx","role","createElementVNode","onClick","_cache","$event","onMousemove","withDirectives","href","url","target","itemicon","createBlock","resolveDynamicComponent","normalizeClass","createCommentVNode","toDisplayString","_hoisted_2$1","_directive_ripple","script","data","$attrs","overlayVisible","focusedOptionIndex","selectedOptionIndex","watch","$attrsId","newValue","UniqueComponentId","outsideClickListener","scrollHandler","resizeListener","container","list","mounted","bindResizeListener","bindOutsideClickListener","beforeUnmount","unbindResizeListener","unbindOutsideClickListener","destroy","ZIndex","clear","itemClick","hide","itemMouseMove","onListFocus","changeFocusedOptionIndex","onListBlur","onListKeyDown","code","onArrowDownKey","onArrowUpKey","onHomeKey","onEndKey","onEnterKey","onSpaceKey","focus","optionIndex","findNextOptionIndex","preventDefault","altKey","findPrevOptionIndex","find","length","element","findSingle","concat","anchorElement","click","links","matchedOptionIndex","_toConsumableArray","findIndex","link","order","getAttribute","toggle","show","currentTarget","onEnter","el","addStyle","position","top","left","alignOverlay","bindScrollListener","set","$primevue","config","zIndex","menu","onLeave","unbindScrollListener","onAfterLeave","absolutePosition","targetWidth","getOuterWidth","minWidth","_this","isOutsideContainer","contains","isOutsideTarget","document","addEventListener","removeEventListener","_this2","ConnectedOverlayScrollHandler","_this3","isTouchDevice","window","onOverlayClick","OverlayEventBus","emit","containerRef","listRef","computed","components","PVMenuitem","Portal","_component_Portal","createVNode","Transition","$data","ref","apply","arguments","ptmi","$slots","start","renderSlot","onFocus","onBlur","onKeydown","Fragment","renderList","i","toString","items","separator","submenulabel","createTextVNode","child","j","_component_PVMenuitem","unstyled","onItemMousemove","pt","end","_hoisted_1"],"sources":["../../src/menu/BaseMenu.vue","../../src/menu/Menuitem.vue","../../src/menu/Menuitem.vue?vue&type=template&id=e64d2dd2&lang.js","../../src/menu/Menu.vue","../../src/menu/Menu.vue?vue&type=template&id=068ae026&lang.js"],"sourcesContent":["<script>\nimport BaseComponent from '@primevue/core/basecomponent';\nimport MenuStyle from 'primevue/menu/style';\n\nexport default {\n    name: 'BaseMenu',\n    extends: BaseComponent,\n    props: {\n        popup: {\n            type: Boolean,\n            default: false\n        },\n        model: {\n            type: Array,\n            default: null\n        },\n        appendTo: {\n            type: [String, Object],\n            default: 'body'\n        },\n        autoZIndex: {\n            type: Boolean,\n            default: true\n        },\n        baseZIndex: {\n            type: Number,\n            default: 0\n        },\n        tabindex: {\n            type: Number,\n            default: 0\n        },\n        ariaLabel: {\n            type: String,\n            default: null\n        },\n        ariaLabelledby: {\n            type: String,\n            default: null\n        }\n    },\n    style: MenuStyle,\n    provide() {\n        return {\n            $pcMenu: this,\n            $parentInstance: this\n        };\n    }\n};\n</script>\n","<template>\n    <li\n        v-if=\"visible()\"\n        :id=\"id\"\n        :class=\"[cx('item'), item.class]\"\n        role=\"menuitem\"\n        :style=\"item.style\"\n        :aria-label=\"label()\"\n        :aria-disabled=\"disabled()\"\n        v-bind=\"getPTOptions('item')\"\n        :data-p-focused=\"isItemFocused()\"\n        :data-p-disabled=\"disabled() || false\"\n    >\n        <div :class=\"cx('itemContent')\" @click=\"onItemClick($event)\" @mousemove=\"onItemMouseMove($event)\" v-bind=\"getPTOptions('itemContent')\">\n            <template v-if=\"!templates.item\">\n                <a v-ripple :href=\"item.url\" :class=\"cx('itemLink')\" :target=\"item.target\" tabindex=\"-1\" v-bind=\"getPTOptions('itemLink')\">\n                    <component v-if=\"templates.itemicon\" :is=\"templates.itemicon\" :item=\"item\" :class=\"cx('itemIcon')\" />\n                    <span v-else-if=\"item.icon\" :class=\"[cx('itemIcon'), item.icon]\" v-bind=\"getPTOptions('itemIcon')\" />\n                    <span :class=\"cx('itemLabel')\" v-bind=\"getPTOptions('itemLabel')\">{{ label() }}</span>\n                </a>\n            </template>\n            <component v-else-if=\"templates.item\" :is=\"templates.item\" :item=\"item\" :label=\"label()\" :props=\"getMenuItemProps(item)\"></component>\n        </div>\n    </li>\n</template>\n\n<script>\nimport { resolve } from '@primeuix/utils/object';\nimport BaseComponent from '@primevue/core/basecomponent';\nimport Ripple from 'primevue/ripple';\nimport { mergeProps } from 'vue';\n\nexport default {\n    name: 'Menuitem',\n    hostName: 'Menu',\n    extends: BaseComponent,\n    inheritAttrs: false,\n    emits: ['item-click', 'item-mousemove'],\n    props: {\n        item: null,\n        templates: null,\n        id: null,\n        focusedOptionId: null,\n        index: null\n    },\n    methods: {\n        getItemProp(processedItem, name) {\n            return processedItem && processedItem.item ? resolve(processedItem.item[name]) : undefined;\n        },\n        getPTOptions(key) {\n            return this.ptm(key, {\n                context: {\n                    item: this.item,\n                    index: this.index,\n                    focused: this.isItemFocused(),\n                    disabled: this.disabled()\n                }\n            });\n        },\n        isItemFocused() {\n            return this.focusedOptionId === this.id;\n        },\n        onItemClick(event) {\n            const command = this.getItemProp(this.item, 'command');\n\n            command && command({ originalEvent: event, item: this.item.item });\n            this.$emit('item-click', { originalEvent: event, item: this.item, id: this.id });\n        },\n        onItemMouseMove(event) {\n            this.$emit('item-mousemove', { originalEvent: event, item: this.item, id: this.id });\n        },\n        visible() {\n            return typeof this.item.visible === 'function' ? this.item.visible() : this.item.visible !== false;\n        },\n        disabled() {\n            return typeof this.item.disabled === 'function' ? this.item.disabled() : this.item.disabled;\n        },\n        label() {\n            return typeof this.item.label === 'function' ? this.item.label() : this.item.label;\n        },\n        getMenuItemProps(item) {\n            return {\n                action: mergeProps(\n                    {\n                        class: this.cx('itemLink'),\n                        tabindex: '-1'\n                    },\n                    this.getPTOptions('itemLink')\n                ),\n                icon: mergeProps(\n                    {\n                        class: [this.cx('itemIcon'), item.icon]\n                    },\n                    this.getPTOptions('itemIcon')\n                ),\n                label: mergeProps(\n                    {\n                        class: this.cx('itemLabel')\n                    },\n                    this.getPTOptions('itemLabel')\n                )\n            };\n        }\n    },\n    directives: {\n        ripple: Ripple\n    }\n};\n</script>\n","<template>\n    <li\n        v-if=\"visible()\"\n        :id=\"id\"\n        :class=\"[cx('item'), item.class]\"\n        role=\"menuitem\"\n        :style=\"item.style\"\n        :aria-label=\"label()\"\n        :aria-disabled=\"disabled()\"\n        v-bind=\"getPTOptions('item')\"\n        :data-p-focused=\"isItemFocused()\"\n        :data-p-disabled=\"disabled() || false\"\n    >\n        <div :class=\"cx('itemContent')\" @click=\"onItemClick($event)\" @mousemove=\"onItemMouseMove($event)\" v-bind=\"getPTOptions('itemContent')\">\n            <template v-if=\"!templates.item\">\n                <a v-ripple :href=\"item.url\" :class=\"cx('itemLink')\" :target=\"item.target\" tabindex=\"-1\" v-bind=\"getPTOptions('itemLink')\">\n                    <component v-if=\"templates.itemicon\" :is=\"templates.itemicon\" :item=\"item\" :class=\"cx('itemIcon')\" />\n                    <span v-else-if=\"item.icon\" :class=\"[cx('itemIcon'), item.icon]\" v-bind=\"getPTOptions('itemIcon')\" />\n                    <span :class=\"cx('itemLabel')\" v-bind=\"getPTOptions('itemLabel')\">{{ label() }}</span>\n                </a>\n            </template>\n            <component v-else-if=\"templates.item\" :is=\"templates.item\" :item=\"item\" :label=\"label()\" :props=\"getMenuItemProps(item)\"></component>\n        </div>\n    </li>\n</template>\n\n<script>\nimport { resolve } from '@primeuix/utils/object';\nimport BaseComponent from '@primevue/core/basecomponent';\nimport Ripple from 'primevue/ripple';\nimport { mergeProps } from 'vue';\n\nexport default {\n    name: 'Menuitem',\n    hostName: 'Menu',\n    extends: BaseComponent,\n    inheritAttrs: false,\n    emits: ['item-click', 'item-mousemove'],\n    props: {\n        item: null,\n        templates: null,\n        id: null,\n        focusedOptionId: null,\n        index: null\n    },\n    methods: {\n        getItemProp(processedItem, name) {\n            return processedItem && processedItem.item ? resolve(processedItem.item[name]) : undefined;\n        },\n        getPTOptions(key) {\n            return this.ptm(key, {\n                context: {\n                    item: this.item,\n                    index: this.index,\n                    focused: this.isItemFocused(),\n                    disabled: this.disabled()\n                }\n            });\n        },\n        isItemFocused() {\n            return this.focusedOptionId === this.id;\n        },\n        onItemClick(event) {\n            const command = this.getItemProp(this.item, 'command');\n\n            command && command({ originalEvent: event, item: this.item.item });\n            this.$emit('item-click', { originalEvent: event, item: this.item, id: this.id });\n        },\n        onItemMouseMove(event) {\n            this.$emit('item-mousemove', { originalEvent: event, item: this.item, id: this.id });\n        },\n        visible() {\n            return typeof this.item.visible === 'function' ? this.item.visible() : this.item.visible !== false;\n        },\n        disabled() {\n            return typeof this.item.disabled === 'function' ? this.item.disabled() : this.item.disabled;\n        },\n        label() {\n            return typeof this.item.label === 'function' ? this.item.label() : this.item.label;\n        },\n        getMenuItemProps(item) {\n            return {\n                action: mergeProps(\n                    {\n                        class: this.cx('itemLink'),\n                        tabindex: '-1'\n                    },\n                    this.getPTOptions('itemLink')\n                ),\n                icon: mergeProps(\n                    {\n                        class: [this.cx('itemIcon'), item.icon]\n                    },\n                    this.getPTOptions('itemIcon')\n                ),\n                label: mergeProps(\n                    {\n                        class: this.cx('itemLabel')\n                    },\n                    this.getPTOptions('itemLabel')\n                )\n            };\n        }\n    },\n    directives: {\n        ripple: Ripple\n    }\n};\n</script>\n","<template>\n    <Portal :appendTo=\"appendTo\" :disabled=\"!popup\">\n        <transition name=\"p-connected-overlay\" @enter=\"onEnter\" @leave=\"onLeave\" @after-leave=\"onAfterLeave\" v-bind=\"ptm('transition')\">\n            <div v-if=\"popup ? overlayVisible : true\" :ref=\"containerRef\" :id=\"id\" :class=\"cx('root')\" @click=\"onOverlayClick\" v-bind=\"ptmi('root')\">\n                <div v-if=\"$slots.start\" :class=\"cx('start')\" v-bind=\"ptm('start')\">\n                    <slot name=\"start\"></slot>\n                </div>\n                <ul\n                    :ref=\"listRef\"\n                    :id=\"id + '_list'\"\n                    :class=\"cx('list')\"\n                    role=\"menu\"\n                    :tabindex=\"tabindex\"\n                    :aria-activedescendant=\"focused ? focusedOptionId : undefined\"\n                    :aria-label=\"ariaLabel\"\n                    :aria-labelledby=\"ariaLabelledby\"\n                    @focus=\"onListFocus\"\n                    @blur=\"onListBlur\"\n                    @keydown=\"onListKeyDown\"\n                    v-bind=\"ptm('list')\"\n                >\n                    <template v-for=\"(item, i) of model\" :key=\"label(item) + i.toString()\">\n                        <template v-if=\"item.items && visible(item) && !item.separator\">\n                            <li v-if=\"item.items\" :id=\"id + '_' + i\" :class=\"[cx('submenuLabel'), item.class]\" role=\"none\" v-bind=\"ptm('submenuLabel')\">\n                                <!--TODO: submenuheader deprecated since v4.0. Use submenulabel-->\n                                <slot :name=\"$slots.submenulabel ? 'submenulabel' : 'submenuheader'\" :item=\"item\">{{ label(item) }}</slot>\n                            </li>\n                            <template v-for=\"(child, j) of item.items\" :key=\"child.label + i + '_' + j\">\n                                <PVMenuitem\n                                    v-if=\"visible(child) && !child.separator\"\n                                    :id=\"id + '_' + i + '_' + j\"\n                                    :item=\"child\"\n                                    :templates=\"$slots\"\n                                    :focusedOptionId=\"focusedOptionId\"\n                                    :unstyled=\"unstyled\"\n                                    @item-click=\"itemClick\"\n                                    @item-mousemove=\"itemMouseMove\"\n                                    :pt=\"pt\"\n                                />\n                                <li v-else-if=\"visible(child) && child.separator\" :key=\"'separator' + i + j\" :class=\"[cx('separator'), item.class]\" :style=\"child.style\" role=\"separator\" v-bind=\"ptm('separator')\"></li>\n                            </template>\n                        </template>\n                        <li v-else-if=\"visible(item) && item.separator\" :key=\"'separator' + i.toString()\" :class=\"[cx('separator'), item.class]\" :style=\"item.style\" role=\"separator\" v-bind=\"ptm('separator')\"></li>\n                        <PVMenuitem\n                            v-else\n                            :key=\"label(item) + i.toString()\"\n                            :id=\"id + '_' + i\"\n                            :item=\"item\"\n                            :index=\"i\"\n                            :templates=\"$slots\"\n                            :focusedOptionId=\"focusedOptionId\"\n                            :unstyled=\"unstyled\"\n                            @item-click=\"itemClick\"\n                            @item-mousemove=\"itemMouseMove\"\n                            :pt=\"pt\"\n                        />\n                    </template>\n                </ul>\n                <div v-if=\"$slots.end\" :class=\"cx('end')\" v-bind=\"ptm('end')\">\n                    <slot name=\"end\"></slot>\n                </div>\n            </div>\n        </transition>\n    </Portal>\n</template>\n\n<script>\nimport { ConnectedOverlayScrollHandler, UniqueComponentId } from '@primevue/core/utils';\nimport { focus, find, findSingle, addStyle, absolutePosition, getOuterWidth, isTouchDevice } from '@primeuix/utils/dom';\nimport { ZIndex } from '@primeuix/utils/zindex';\nimport OverlayEventBus from 'primevue/overlayeventbus';\nimport Portal from 'primevue/portal';\nimport BaseMenu from './BaseMenu.vue';\nimport Menuitem from './Menuitem.vue';\n\nexport default {\n    name: 'Menu',\n    extends: BaseMenu,\n    inheritAttrs: false,\n    emits: ['show', 'hide', 'focus', 'blur'],\n    data() {\n        return {\n            id: this.$attrs.id,\n            overlayVisible: false,\n            focused: false,\n            focusedOptionIndex: -1,\n            selectedOptionIndex: -1\n        };\n    },\n    watch: {\n        '$attrs.id': function (newValue) {\n            this.id = newValue || UniqueComponentId();\n        }\n    },\n    target: null,\n    outsideClickListener: null,\n    scrollHandler: null,\n    resizeListener: null,\n    container: null,\n    list: null,\n    mounted() {\n        this.id = this.id || UniqueComponentId();\n\n        if (!this.popup) {\n            this.bindResizeListener();\n            this.bindOutsideClickListener();\n        }\n    },\n    beforeUnmount() {\n        this.unbindResizeListener();\n        this.unbindOutsideClickListener();\n\n        if (this.scrollHandler) {\n            this.scrollHandler.destroy();\n            this.scrollHandler = null;\n        }\n\n        this.target = null;\n\n        if (this.container && this.autoZIndex) {\n            ZIndex.clear(this.container);\n        }\n\n        this.container = null;\n    },\n    methods: {\n        itemClick(event) {\n            const item = event.item;\n\n            if (this.disabled(item)) {\n                return;\n            }\n\n            if (item.command) {\n                item.command(event);\n            }\n\n            if (this.overlayVisible) this.hide();\n\n            if (!this.popup && this.focusedOptionIndex !== event.id) {\n                this.focusedOptionIndex = event.id;\n            }\n        },\n        itemMouseMove(event) {\n            if (this.focused) {\n                this.focusedOptionIndex = event.id;\n            }\n        },\n        onListFocus(event) {\n            this.focused = true;\n            !this.popup && this.changeFocusedOptionIndex(0);\n\n            this.$emit('focus', event);\n        },\n        onListBlur(event) {\n            this.focused = false;\n            this.focusedOptionIndex = -1;\n            this.$emit('blur', event);\n        },\n        onListKeyDown(event) {\n            switch (event.code) {\n                case 'ArrowDown':\n                    this.onArrowDownKey(event);\n                    break;\n\n                case 'ArrowUp':\n                    this.onArrowUpKey(event);\n                    break;\n\n                case 'Home':\n                    this.onHomeKey(event);\n                    break;\n\n                case 'End':\n                    this.onEndKey(event);\n                    break;\n\n                case 'Enter':\n                case 'NumpadEnter':\n                    this.onEnterKey(event);\n                    break;\n\n                case 'Space':\n                    this.onSpaceKey(event);\n                    break;\n\n                case 'Escape':\n                    if (this.popup) {\n                        focus(this.target);\n                        this.hide();\n                    }\n\n                case 'Tab':\n                    this.overlayVisible && this.hide();\n                    break;\n\n                default:\n                    break;\n            }\n        },\n        onArrowDownKey(event) {\n            const optionIndex = this.findNextOptionIndex(this.focusedOptionIndex);\n\n            this.changeFocusedOptionIndex(optionIndex);\n            event.preventDefault();\n        },\n        onArrowUpKey(event) {\n            if (event.altKey && this.popup) {\n                focus(this.target);\n                this.hide();\n                event.preventDefault();\n            } else {\n                const optionIndex = this.findPrevOptionIndex(this.focusedOptionIndex);\n\n                this.changeFocusedOptionIndex(optionIndex);\n                event.preventDefault();\n            }\n        },\n        onHomeKey(event) {\n            this.changeFocusedOptionIndex(0);\n            event.preventDefault();\n        },\n        onEndKey(event) {\n            this.changeFocusedOptionIndex(find(this.container, 'li[data-pc-section=\"item\"][data-p-disabled=\"false\"]').length - 1);\n            event.preventDefault();\n        },\n        onEnterKey(event) {\n            const element = findSingle(this.list, `li[id=\"${`${this.focusedOptionIndex}`}\"]`);\n            const anchorElement = element && findSingle(element, 'a[data-pc-section=\"itemlink\"]');\n\n            this.popup && focus(this.target);\n            anchorElement ? anchorElement.click() : element && element.click();\n\n            event.preventDefault();\n        },\n        onSpaceKey(event) {\n            this.onEnterKey(event);\n        },\n        findNextOptionIndex(index) {\n            const links = find(this.container, 'li[data-pc-section=\"item\"][data-p-disabled=\"false\"]');\n            const matchedOptionIndex = [...links].findIndex((link) => link.id === index);\n\n            return matchedOptionIndex > -1 ? matchedOptionIndex + 1 : 0;\n        },\n        findPrevOptionIndex(index) {\n            const links = find(this.container, 'li[data-pc-section=\"item\"][data-p-disabled=\"false\"]');\n            const matchedOptionIndex = [...links].findIndex((link) => link.id === index);\n\n            return matchedOptionIndex > -1 ? matchedOptionIndex - 1 : 0;\n        },\n        changeFocusedOptionIndex(index) {\n            const links = find(this.container, 'li[data-pc-section=\"item\"][data-p-disabled=\"false\"]');\n            let order = index >= links.length ? links.length - 1 : index < 0 ? 0 : index;\n\n            order > -1 && (this.focusedOptionIndex = links[order].getAttribute('id'));\n        },\n        toggle(event) {\n            if (this.overlayVisible) this.hide();\n            else this.show(event);\n        },\n        show(event) {\n            this.overlayVisible = true;\n            this.target = event.currentTarget;\n        },\n        hide() {\n            this.overlayVisible = false;\n            this.target = null;\n        },\n        onEnter(el) {\n            addStyle(el, { position: 'absolute', top: '0', left: '0' });\n            this.alignOverlay();\n            this.bindOutsideClickListener();\n            this.bindResizeListener();\n            this.bindScrollListener();\n\n            if (this.autoZIndex) {\n                ZIndex.set('menu', el, this.baseZIndex + this.$primevue.config.zIndex.menu);\n            }\n\n            if (this.popup) {\n                focus(this.list);\n            }\n\n            this.$emit('show');\n        },\n        onLeave() {\n            this.unbindOutsideClickListener();\n            this.unbindResizeListener();\n            this.unbindScrollListener();\n            this.$emit('hide');\n        },\n        onAfterLeave(el) {\n            if (this.autoZIndex) {\n                ZIndex.clear(el);\n            }\n        },\n        alignOverlay() {\n            absolutePosition(this.container, this.target);\n            const targetWidth = getOuterWidth(this.target);\n\n            if (targetWidth > getOuterWidth(this.container)) {\n                this.container.style.minWidth = getOuterWidth(this.target) + 'px';\n            }\n        },\n        bindOutsideClickListener() {\n            if (!this.outsideClickListener) {\n                this.outsideClickListener = (event) => {\n                    const isOutsideContainer = this.container && !this.container.contains(event.target);\n                    const isOutsideTarget = !(this.target && (this.target === event.target || this.target.contains(event.target)));\n\n                    if (this.overlayVisible && isOutsideContainer && isOutsideTarget) {\n                        this.hide();\n                    } else if (!this.popup && isOutsideContainer && isOutsideTarget) {\n                        this.focusedOptionIndex = -1;\n                    }\n                };\n\n                document.addEventListener('click', this.outsideClickListener);\n            }\n        },\n        unbindOutsideClickListener() {\n            if (this.outsideClickListener) {\n                document.removeEventListener('click', this.outsideClickListener);\n                this.outsideClickListener = null;\n            }\n        },\n        bindScrollListener() {\n            if (!this.scrollHandler) {\n                this.scrollHandler = new ConnectedOverlayScrollHandler(this.target, () => {\n                    if (this.overlayVisible) {\n                        this.hide();\n                    }\n                });\n            }\n\n            this.scrollHandler.bindScrollListener();\n        },\n        unbindScrollListener() {\n            if (this.scrollHandler) {\n                this.scrollHandler.unbindScrollListener();\n            }\n        },\n        bindResizeListener() {\n            if (!this.resizeListener) {\n                this.resizeListener = () => {\n                    if (this.overlayVisible && !isTouchDevice()) {\n                        this.hide();\n                    }\n                };\n\n                window.addEventListener('resize', this.resizeListener);\n            }\n        },\n        unbindResizeListener() {\n            if (this.resizeListener) {\n                window.removeEventListener('resize', this.resizeListener);\n                this.resizeListener = null;\n            }\n        },\n        visible(item) {\n            return typeof item.visible === 'function' ? item.visible() : item.visible !== false;\n        },\n        disabled(item) {\n            return typeof item.disabled === 'function' ? item.disabled() : item.disabled;\n        },\n        label(item) {\n            return typeof item.label === 'function' ? item.label() : item.label;\n        },\n        onOverlayClick(event) {\n            OverlayEventBus.emit('overlay-click', {\n                originalEvent: event,\n                target: this.target\n            });\n        },\n        containerRef(el) {\n            this.container = el;\n        },\n        listRef(el) {\n            this.list = el;\n        }\n    },\n    computed: {\n        focusedOptionId() {\n            return this.focusedOptionIndex !== -1 ? this.focusedOptionIndex : null;\n        }\n    },\n    components: {\n        PVMenuitem: Menuitem,\n        Portal: Portal\n    }\n};\n</script>\n","<template>\n    <Portal :appendTo=\"appendTo\" :disabled=\"!popup\">\n        <transition name=\"p-connected-overlay\" @enter=\"onEnter\" @leave=\"onLeave\" @after-leave=\"onAfterLeave\" v-bind=\"ptm('transition')\">\n            <div v-if=\"popup ? overlayVisible : true\" :ref=\"containerRef\" :id=\"id\" :class=\"cx('root')\" @click=\"onOverlayClick\" v-bind=\"ptmi('root')\">\n                <div v-if=\"$slots.start\" :class=\"cx('start')\" v-bind=\"ptm('start')\">\n                    <slot name=\"start\"></slot>\n                </div>\n                <ul\n                    :ref=\"listRef\"\n                    :id=\"id + '_list'\"\n                    :class=\"cx('list')\"\n                    role=\"menu\"\n                    :tabindex=\"tabindex\"\n                    :aria-activedescendant=\"focused ? focusedOptionId : undefined\"\n                    :aria-label=\"ariaLabel\"\n                    :aria-labelledby=\"ariaLabelledby\"\n                    @focus=\"onListFocus\"\n                    @blur=\"onListBlur\"\n                    @keydown=\"onListKeyDown\"\n                    v-bind=\"ptm('list')\"\n                >\n                    <template v-for=\"(item, i) of model\" :key=\"label(item) + i.toString()\">\n                        <template v-if=\"item.items && visible(item) && !item.separator\">\n                            <li v-if=\"item.items\" :id=\"id + '_' + i\" :class=\"[cx('submenuLabel'), item.class]\" role=\"none\" v-bind=\"ptm('submenuLabel')\">\n                                <!--TODO: submenuheader deprecated since v4.0. Use submenulabel-->\n                                <slot :name=\"$slots.submenulabel ? 'submenulabel' : 'submenuheader'\" :item=\"item\">{{ label(item) }}</slot>\n                            </li>\n                            <template v-for=\"(child, j) of item.items\" :key=\"child.label + i + '_' + j\">\n                                <PVMenuitem\n                                    v-if=\"visible(child) && !child.separator\"\n                                    :id=\"id + '_' + i + '_' + j\"\n                                    :item=\"child\"\n                                    :templates=\"$slots\"\n                                    :focusedOptionId=\"focusedOptionId\"\n                                    :unstyled=\"unstyled\"\n                                    @item-click=\"itemClick\"\n                                    @item-mousemove=\"itemMouseMove\"\n                                    :pt=\"pt\"\n                                />\n                                <li v-else-if=\"visible(child) && child.separator\" :key=\"'separator' + i + j\" :class=\"[cx('separator'), item.class]\" :style=\"child.style\" role=\"separator\" v-bind=\"ptm('separator')\"></li>\n                            </template>\n                        </template>\n                        <li v-else-if=\"visible(item) && item.separator\" :key=\"'separator' + i.toString()\" :class=\"[cx('separator'), item.class]\" :style=\"item.style\" role=\"separator\" v-bind=\"ptm('separator')\"></li>\n                        <PVMenuitem\n                            v-else\n                            :key=\"label(item) + i.toString()\"\n                            :id=\"id + '_' + i\"\n                            :item=\"item\"\n                            :index=\"i\"\n                            :templates=\"$slots\"\n                            :focusedOptionId=\"focusedOptionId\"\n                            :unstyled=\"unstyled\"\n                            @item-click=\"itemClick\"\n                            @item-mousemove=\"itemMouseMove\"\n                            :pt=\"pt\"\n                        />\n                    </template>\n                </ul>\n                <div v-if=\"$slots.end\" :class=\"cx('end')\" v-bind=\"ptm('end')\">\n                    <slot name=\"end\"></slot>\n                </div>\n            </div>\n        </transition>\n    </Portal>\n</template>\n\n<script>\nimport { ConnectedOverlayScrollHandler, UniqueComponentId } from '@primevue/core/utils';\nimport { focus, find, findSingle, addStyle, absolutePosition, getOuterWidth, isTouchDevice } from '@primeuix/utils/dom';\nimport { ZIndex } from '@primeuix/utils/zindex';\nimport OverlayEventBus from 'primevue/overlayeventbus';\nimport Portal from 'primevue/portal';\nimport BaseMenu from './BaseMenu.vue';\nimport Menuitem from './Menuitem.vue';\n\nexport default {\n    name: 'Menu',\n    extends: BaseMenu,\n    inheritAttrs: false,\n    emits: ['show', 'hide', 'focus', 'blur'],\n    data() {\n        return {\n            id: this.$attrs.id,\n            overlayVisible: false,\n            focused: false,\n            focusedOptionIndex: -1,\n            selectedOptionIndex: -1\n        };\n    },\n    watch: {\n        '$attrs.id': function (newValue) {\n            this.id = newValue || UniqueComponentId();\n        }\n    },\n    target: null,\n    outsideClickListener: null,\n    scrollHandler: null,\n    resizeListener: null,\n    container: null,\n    list: null,\n    mounted() {\n        this.id = this.id || UniqueComponentId();\n\n        if (!this.popup) {\n            this.bindResizeListener();\n            this.bindOutsideClickListener();\n        }\n    },\n    beforeUnmount() {\n        this.unbindResizeListener();\n        this.unbindOutsideClickListener();\n\n        if (this.scrollHandler) {\n            this.scrollHandler.destroy();\n            this.scrollHandler = null;\n        }\n\n        this.target = null;\n\n        if (this.container && this.autoZIndex) {\n            ZIndex.clear(this.container);\n        }\n\n        this.container = null;\n    },\n    methods: {\n        itemClick(event) {\n            const item = event.item;\n\n            if (this.disabled(item)) {\n                return;\n            }\n\n            if (item.command) {\n                item.command(event);\n            }\n\n            if (this.overlayVisible) this.hide();\n\n            if (!this.popup && this.focusedOptionIndex !== event.id) {\n                this.focusedOptionIndex = event.id;\n            }\n        },\n        itemMouseMove(event) {\n            if (this.focused) {\n                this.focusedOptionIndex = event.id;\n            }\n        },\n        onListFocus(event) {\n            this.focused = true;\n            !this.popup && this.changeFocusedOptionIndex(0);\n\n            this.$emit('focus', event);\n        },\n        onListBlur(event) {\n            this.focused = false;\n            this.focusedOptionIndex = -1;\n            this.$emit('blur', event);\n        },\n        onListKeyDown(event) {\n            switch (event.code) {\n                case 'ArrowDown':\n                    this.onArrowDownKey(event);\n                    break;\n\n                case 'ArrowUp':\n                    this.onArrowUpKey(event);\n                    break;\n\n                case 'Home':\n                    this.onHomeKey(event);\n                    break;\n\n                case 'End':\n                    this.onEndKey(event);\n                    break;\n\n                case 'Enter':\n                case 'NumpadEnter':\n                    this.onEnterKey(event);\n                    break;\n\n                case 'Space':\n                    this.onSpaceKey(event);\n                    break;\n\n                case 'Escape':\n                    if (this.popup) {\n                        focus(this.target);\n                        this.hide();\n                    }\n\n                case 'Tab':\n                    this.overlayVisible && this.hide();\n                    break;\n\n                default:\n                    break;\n            }\n        },\n        onArrowDownKey(event) {\n            const optionIndex = this.findNextOptionIndex(this.focusedOptionIndex);\n\n            this.changeFocusedOptionIndex(optionIndex);\n            event.preventDefault();\n        },\n        onArrowUpKey(event) {\n            if (event.altKey && this.popup) {\n                focus(this.target);\n                this.hide();\n                event.preventDefault();\n            } else {\n                const optionIndex = this.findPrevOptionIndex(this.focusedOptionIndex);\n\n                this.changeFocusedOptionIndex(optionIndex);\n                event.preventDefault();\n            }\n        },\n        onHomeKey(event) {\n            this.changeFocusedOptionIndex(0);\n            event.preventDefault();\n        },\n        onEndKey(event) {\n            this.changeFocusedOptionIndex(find(this.container, 'li[data-pc-section=\"item\"][data-p-disabled=\"false\"]').length - 1);\n            event.preventDefault();\n        },\n        onEnterKey(event) {\n            const element = findSingle(this.list, `li[id=\"${`${this.focusedOptionIndex}`}\"]`);\n            const anchorElement = element && findSingle(element, 'a[data-pc-section=\"itemlink\"]');\n\n            this.popup && focus(this.target);\n            anchorElement ? anchorElement.click() : element && element.click();\n\n            event.preventDefault();\n        },\n        onSpaceKey(event) {\n            this.onEnterKey(event);\n        },\n        findNextOptionIndex(index) {\n            const links = find(this.container, 'li[data-pc-section=\"item\"][data-p-disabled=\"false\"]');\n            const matchedOptionIndex = [...links].findIndex((link) => link.id === index);\n\n            return matchedOptionIndex > -1 ? matchedOptionIndex + 1 : 0;\n        },\n        findPrevOptionIndex(index) {\n            const links = find(this.container, 'li[data-pc-section=\"item\"][data-p-disabled=\"false\"]');\n            const matchedOptionIndex = [...links].findIndex((link) => link.id === index);\n\n            return matchedOptionIndex > -1 ? matchedOptionIndex - 1 : 0;\n        },\n        changeFocusedOptionIndex(index) {\n            const links = find(this.container, 'li[data-pc-section=\"item\"][data-p-disabled=\"false\"]');\n            let order = index >= links.length ? links.length - 1 : index < 0 ? 0 : index;\n\n            order > -1 && (this.focusedOptionIndex = links[order].getAttribute('id'));\n        },\n        toggle(event) {\n            if (this.overlayVisible) this.hide();\n            else this.show(event);\n        },\n        show(event) {\n            this.overlayVisible = true;\n            this.target = event.currentTarget;\n        },\n        hide() {\n            this.overlayVisible = false;\n            this.target = null;\n        },\n        onEnter(el) {\n            addStyle(el, { position: 'absolute', top: '0', left: '0' });\n            this.alignOverlay();\n            this.bindOutsideClickListener();\n            this.bindResizeListener();\n            this.bindScrollListener();\n\n            if (this.autoZIndex) {\n                ZIndex.set('menu', el, this.baseZIndex + this.$primevue.config.zIndex.menu);\n            }\n\n            if (this.popup) {\n                focus(this.list);\n            }\n\n            this.$emit('show');\n        },\n        onLeave() {\n            this.unbindOutsideClickListener();\n            this.unbindResizeListener();\n            this.unbindScrollListener();\n            this.$emit('hide');\n        },\n        onAfterLeave(el) {\n            if (this.autoZIndex) {\n                ZIndex.clear(el);\n            }\n        },\n        alignOverlay() {\n            absolutePosition(this.container, this.target);\n            const targetWidth = getOuterWidth(this.target);\n\n            if (targetWidth > getOuterWidth(this.container)) {\n                this.container.style.minWidth = getOuterWidth(this.target) + 'px';\n            }\n        },\n        bindOutsideClickListener() {\n            if (!this.outsideClickListener) {\n                this.outsideClickListener = (event) => {\n                    const isOutsideContainer = this.container && !this.container.contains(event.target);\n                    const isOutsideTarget = !(this.target && (this.target === event.target || this.target.contains(event.target)));\n\n                    if (this.overlayVisible && isOutsideContainer && isOutsideTarget) {\n                        this.hide();\n                    } else if (!this.popup && isOutsideContainer && isOutsideTarget) {\n                        this.focusedOptionIndex = -1;\n                    }\n                };\n\n                document.addEventListener('click', this.outsideClickListener);\n            }\n        },\n        unbindOutsideClickListener() {\n            if (this.outsideClickListener) {\n                document.removeEventListener('click', this.outsideClickListener);\n                this.outsideClickListener = null;\n            }\n        },\n        bindScrollListener() {\n            if (!this.scrollHandler) {\n                this.scrollHandler = new ConnectedOverlayScrollHandler(this.target, () => {\n                    if (this.overlayVisible) {\n                        this.hide();\n                    }\n                });\n            }\n\n            this.scrollHandler.bindScrollListener();\n        },\n        unbindScrollListener() {\n            if (this.scrollHandler) {\n                this.scrollHandler.unbindScrollListener();\n            }\n        },\n        bindResizeListener() {\n            if (!this.resizeListener) {\n                this.resizeListener = () => {\n                    if (this.overlayVisible && !isTouchDevice()) {\n                        this.hide();\n                    }\n                };\n\n                window.addEventListener('resize', this.resizeListener);\n            }\n        },\n        unbindResizeListener() {\n            if (this.resizeListener) {\n                window.removeEventListener('resize', this.resizeListener);\n                this.resizeListener = null;\n            }\n        },\n        visible(item) {\n            return typeof item.visible === 'function' ? item.visible() : item.visible !== false;\n        },\n        disabled(item) {\n            return typeof item.disabled === 'function' ? item.disabled() : item.disabled;\n        },\n        label(item) {\n            return typeof item.label === 'function' ? item.label() : item.label;\n        },\n        onOverlayClick(event) {\n            OverlayEventBus.emit('overlay-click', {\n                originalEvent: event,\n                target: this.target\n            });\n        },\n        containerRef(el) {\n            this.container = el;\n        },\n        listRef(el) {\n            this.list = el;\n        }\n    },\n    computed: {\n        focusedOptionId() {\n            return this.focusedOptionIndex !== -1 ? this.focusedOptionIndex : null;\n        }\n    },\n    components: {\n        PVMenuitem: Menuitem,\n        Portal: Portal\n    }\n};\n</script>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}