{"ast":null,"code":"import { getHeight, addClass, removeClass } from '@primeuix/utils/dom';\nimport { UniqueComponentId } from '@primevue/core/utils';\nimport BaseComponent from '@primevue/core/basecomponent';\nimport ScrollPanelStyle from 'primevue/scrollpanel/style';\nimport { openBlock, createElementBlock, mergeProps, createElementVNode, renderSlot } from 'vue';\nvar script$1 = {\n  name: 'BaseScrollPanel',\n  \"extends\": BaseComponent,\n  props: {\n    step: {\n      type: Number,\n      \"default\": 5\n    }\n  },\n  style: ScrollPanelStyle,\n  provide: function provide() {\n    return {\n      $pcScrollPanel: this,\n      $parentInstance: this\n    };\n  }\n};\nvar script = {\n  name: 'ScrollPanel',\n  \"extends\": script$1,\n  inheritAttrs: false,\n  initialized: false,\n  documentResizeListener: null,\n  documentMouseMoveListener: null,\n  documentMouseUpListener: null,\n  frame: null,\n  scrollXRatio: null,\n  scrollYRatio: null,\n  isXBarClicked: false,\n  isYBarClicked: false,\n  lastPageX: null,\n  lastPageY: null,\n  timer: null,\n  outsideClickListener: null,\n  data: function data() {\n    return {\n      id: this.$attrs.id,\n      orientation: 'vertical',\n      lastScrollTop: 0,\n      lastScrollLeft: 0\n    };\n  },\n  watch: {\n    '$attrs.id': function $attrsId(newValue) {\n      this.id = newValue || UniqueComponentId();\n    }\n  },\n  mounted: function mounted() {\n    this.id = this.id || UniqueComponentId();\n    if (this.$el.offsetParent) {\n      this.initialize();\n    }\n  },\n  updated: function updated() {\n    if (!this.initialized && this.$el.offsetParent) {\n      this.initialize();\n    }\n  },\n  beforeUnmount: function beforeUnmount() {\n    this.unbindDocumentResizeListener();\n    if (this.frame) {\n      window.cancelAnimationFrame(this.frame);\n    }\n  },\n  methods: {\n    initialize: function initialize() {\n      this.moveBar();\n      this.bindDocumentResizeListener();\n      this.calculateContainerHeight();\n    },\n    calculateContainerHeight: function calculateContainerHeight() {\n      var containerStyles = getComputedStyle(this.$el),\n        xBarStyles = getComputedStyle(this.$refs.xBar),\n        pureContainerHeight = getHeight(this.$el) - parseInt(xBarStyles['height'], 10);\n      if (containerStyles['max-height'] !== 'none' && pureContainerHeight === 0) {\n        if (this.$refs.content.offsetHeight + parseInt(xBarStyles['height'], 10) > parseInt(containerStyles['max-height'], 10)) {\n          this.$el.style.height = containerStyles['max-height'];\n        } else {\n          this.$el.style.height = this.$refs.content.offsetHeight + parseFloat(containerStyles.paddingTop) + parseFloat(containerStyles.paddingBottom) + parseFloat(containerStyles.borderTopWidth) + parseFloat(containerStyles.borderBottomWidth) + 'px';\n        }\n      }\n    },\n    moveBar: function moveBar() {\n      var _this = this;\n      if (this.$refs.content) {\n        /* horizontal scroll */\n        var totalWidth = this.$refs.content.scrollWidth;\n        var ownWidth = this.$refs.content.clientWidth;\n        var bottom = (this.$el.clientHeight - this.$refs.xBar.clientHeight) * -1;\n        this.scrollXRatio = ownWidth / totalWidth;\n\n        /* vertical scroll */\n        var totalHeight = this.$refs.content.scrollHeight;\n        var ownHeight = this.$refs.content.clientHeight;\n        var right = (this.$el.clientWidth - this.$refs.yBar.clientWidth) * -1;\n        this.scrollYRatio = ownHeight / totalHeight;\n        this.frame = this.requestAnimationFrame(function () {\n          if (_this.$refs.xBar) {\n            if (_this.scrollXRatio >= 1) {\n              _this.$refs.xBar.setAttribute('data-p-scrollpanel-hidden', 'true');\n              !_this.isUnstyled && addClass(_this.$refs.xBar, 'p-scrollpanel-hidden');\n            } else {\n              _this.$refs.xBar.setAttribute('data-p-scrollpanel-hidden', 'false');\n              !_this.isUnstyled && removeClass(_this.$refs.xBar, 'p-scrollpanel-hidden');\n              _this.$refs.xBar.style.cssText = 'width:' + Math.max(_this.scrollXRatio * 100, 10) + '%; inset-inline-start:' + Math.abs(_this.$refs.content.scrollLeft) / totalWidth * 100 + '%;bottom:' + bottom + 'px;';\n            }\n          }\n          if (_this.$refs.yBar) {\n            if (_this.scrollYRatio >= 1) {\n              _this.$refs.yBar.setAttribute('data-p-scrollpanel-hidden', 'true');\n              !_this.isUnstyled && addClass(_this.$refs.yBar, 'p-scrollpanel-hidden');\n            } else {\n              _this.$refs.yBar.setAttribute('data-p-scrollpanel-hidden', 'false');\n              !_this.isUnstyled && removeClass(_this.$refs.yBar, 'p-scrollpanel-hidden');\n              _this.$refs.yBar.style.cssText = 'height:' + Math.max(_this.scrollYRatio * 100, 10) + '%; top: calc(' + _this.$refs.content.scrollTop / totalHeight * 100 + '% - ' + _this.$refs.xBar.clientHeight + 'px); inset-inline-end:' + right + 'px;';\n            }\n          }\n        });\n      }\n    },\n    onYBarMouseDown: function onYBarMouseDown(e) {\n      this.isYBarClicked = true;\n      this.$refs.yBar.focus();\n      this.lastPageY = e.pageY;\n      this.$refs.yBar.setAttribute('data-p-scrollpanel-grabbed', 'true');\n      !this.isUnstyled && addClass(this.$refs.yBar, 'p-scrollpanel-grabbed');\n      document.body.setAttribute('data-p-scrollpanel-grabbed', 'true');\n      !this.isUnstyled && addClass(document.body, 'p-scrollpanel-grabbed');\n      this.bindDocumentMouseListeners();\n      e.preventDefault();\n    },\n    onXBarMouseDown: function onXBarMouseDown(e) {\n      this.isXBarClicked = true;\n      this.$refs.xBar.focus();\n      this.lastPageX = e.pageX;\n      this.$refs.yBar.setAttribute('data-p-scrollpanel-grabbed', 'false');\n      !this.isUnstyled && addClass(this.$refs.xBar, 'p-scrollpanel-grabbed');\n      document.body.setAttribute('data-p-scrollpanel-grabbed', 'false');\n      !this.isUnstyled && addClass(document.body, 'p-scrollpanel-grabbed');\n      this.bindDocumentMouseListeners();\n      e.preventDefault();\n    },\n    onScroll: function onScroll(event) {\n      if (this.lastScrollLeft !== event.target.scrollLeft) {\n        this.lastScrollLeft = event.target.scrollLeft;\n        this.orientation = 'horizontal';\n      } else if (this.lastScrollTop !== event.target.scrollTop) {\n        this.lastScrollTop = event.target.scrollTop;\n        this.orientation = 'vertical';\n      }\n      this.moveBar();\n    },\n    onKeyDown: function onKeyDown(event) {\n      if (this.orientation === 'vertical') {\n        switch (event.code) {\n          case 'ArrowDown':\n            {\n              this.setTimer('scrollTop', this.step);\n              event.preventDefault();\n              break;\n            }\n          case 'ArrowUp':\n            {\n              this.setTimer('scrollTop', this.step * -1);\n              event.preventDefault();\n              break;\n            }\n          case 'ArrowLeft':\n          case 'ArrowRight':\n            {\n              event.preventDefault();\n              break;\n            }\n        }\n      } else if (this.orientation === 'horizontal') {\n        switch (event.code) {\n          case 'ArrowRight':\n            {\n              this.setTimer('scrollLeft', this.step);\n              event.preventDefault();\n              break;\n            }\n          case 'ArrowLeft':\n            {\n              this.setTimer('scrollLeft', this.step * -1);\n              event.preventDefault();\n              break;\n            }\n          case 'ArrowDown':\n          case 'ArrowUp':\n            {\n              event.preventDefault();\n              break;\n            }\n        }\n      }\n    },\n    onKeyUp: function onKeyUp() {\n      this.clearTimer();\n    },\n    repeat: function repeat(bar, step) {\n      this.$refs.content[bar] += step;\n      this.moveBar();\n    },\n    setTimer: function setTimer(bar, step) {\n      var _this2 = this;\n      this.clearTimer();\n      this.timer = setTimeout(function () {\n        _this2.repeat(bar, step);\n      }, 40);\n    },\n    clearTimer: function clearTimer() {\n      if (this.timer) {\n        clearTimeout(this.timer);\n      }\n    },\n    onDocumentMouseMove: function onDocumentMouseMove(e) {\n      if (this.isXBarClicked) {\n        this.onMouseMoveForXBar(e);\n      } else if (this.isYBarClicked) {\n        this.onMouseMoveForYBar(e);\n      } else {\n        this.onMouseMoveForXBar(e);\n        this.onMouseMoveForYBar(e);\n      }\n    },\n    onMouseMoveForXBar: function onMouseMoveForXBar(e) {\n      var _this3 = this;\n      var deltaX = e.pageX - this.lastPageX;\n      this.lastPageX = e.pageX;\n      this.frame = this.requestAnimationFrame(function () {\n        _this3.$refs.content.scrollLeft += deltaX / _this3.scrollXRatio;\n      });\n    },\n    onMouseMoveForYBar: function onMouseMoveForYBar(e) {\n      var _this4 = this;\n      var deltaY = e.pageY - this.lastPageY;\n      this.lastPageY = e.pageY;\n      this.frame = this.requestAnimationFrame(function () {\n        _this4.$refs.content.scrollTop += deltaY / _this4.scrollYRatio;\n      });\n    },\n    onFocus: function onFocus(event) {\n      if (this.$refs.xBar.isSameNode(event.target)) {\n        this.orientation = 'horizontal';\n      } else if (this.$refs.yBar.isSameNode(event.target)) {\n        this.orientation = 'vertical';\n      }\n    },\n    onBlur: function onBlur() {\n      if (this.orientation === 'horizontal') {\n        this.orientation = 'vertical';\n      }\n    },\n    onDocumentMouseUp: function onDocumentMouseUp() {\n      this.$refs.yBar.setAttribute('data-p-scrollpanel-grabbed', 'false');\n      !this.isUnstyled && removeClass(this.$refs.yBar, 'p-scrollpanel-grabbed');\n      this.$refs.xBar.setAttribute('data-p-scrollpanel-grabbed', 'false');\n      !this.isUnstyled && removeClass(this.$refs.xBar, 'p-scrollpanel-grabbed');\n      document.body.setAttribute('data-p-scrollpanel-grabbed', 'false');\n      !this.isUnstyled && removeClass(document.body, 'p-scrollpanel-grabbed');\n      this.unbindDocumentMouseListeners();\n      this.isXBarClicked = false;\n      this.isYBarClicked = false;\n    },\n    requestAnimationFrame: function requestAnimationFrame(f) {\n      var frame = window.requestAnimationFrame || this.timeoutFrame;\n      return frame(f);\n    },\n    refresh: function refresh() {\n      this.moveBar();\n    },\n    scrollTop: function scrollTop(_scrollTop) {\n      var scrollableHeight = this.$refs.content.scrollHeight - this.$refs.content.clientHeight;\n      _scrollTop = _scrollTop > scrollableHeight ? scrollableHeight : _scrollTop > 0 ? _scrollTop : 0;\n      this.$refs.content.scrollTop = _scrollTop;\n    },\n    timeoutFrame: function timeoutFrame(fn) {\n      setTimeout(fn, 0);\n    },\n    bindDocumentMouseListeners: function bindDocumentMouseListeners() {\n      var _this5 = this;\n      if (!this.documentMouseMoveListener) {\n        this.documentMouseMoveListener = function (e) {\n          _this5.onDocumentMouseMove(e);\n        };\n        document.addEventListener('mousemove', this.documentMouseMoveListener);\n      }\n      if (!this.documentMouseUpListener) {\n        this.documentMouseUpListener = function (e) {\n          _this5.onDocumentMouseUp(e);\n        };\n        document.addEventListener('mouseup', this.documentMouseUpListener);\n      }\n    },\n    unbindDocumentMouseListeners: function unbindDocumentMouseListeners() {\n      if (this.documentMouseMoveListener) {\n        document.removeEventListener('mousemove', this.documentMouseMoveListener);\n        this.documentMouseMoveListener = null;\n      }\n      if (this.documentMouseUpListener) {\n        document.removeEventListener('mouseup', this.documentMouseUpListener);\n        this.documentMouseUpListener = null;\n      }\n    },\n    bindDocumentResizeListener: function bindDocumentResizeListener() {\n      var _this6 = this;\n      if (!this.documentResizeListener) {\n        this.documentResizeListener = function () {\n          _this6.moveBar();\n        };\n        window.addEventListener('resize', this.documentResizeListener);\n      }\n    },\n    unbindDocumentResizeListener: function unbindDocumentResizeListener() {\n      if (this.documentResizeListener) {\n        window.removeEventListener('resize', this.documentResizeListener);\n        this.documentResizeListener = null;\n      }\n    }\n  },\n  computed: {\n    contentId: function contentId() {\n      return this.id + '_content';\n    }\n  }\n};\nvar _hoisted_1 = [\"id\"];\nvar _hoisted_2 = [\"aria-controls\", \"aria-valuenow\"];\nvar _hoisted_3 = [\"aria-controls\", \"aria-valuenow\"];\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  return openBlock(), createElementBlock(\"div\", mergeProps({\n    \"class\": _ctx.cx('root')\n  }, _ctx.ptmi('root')), [createElementVNode(\"div\", mergeProps({\n    \"class\": _ctx.cx('contentContainer')\n  }, _ctx.ptm('contentContainer')), [createElementVNode(\"div\", mergeProps({\n    ref: \"content\",\n    id: $options.contentId,\n    \"class\": _ctx.cx('content'),\n    onScroll: _cache[0] || (_cache[0] = function () {\n      return $options.onScroll && $options.onScroll.apply($options, arguments);\n    }),\n    onMouseenter: _cache[1] || (_cache[1] = function () {\n      return $options.moveBar && $options.moveBar.apply($options, arguments);\n    })\n  }, _ctx.ptm('content')), [renderSlot(_ctx.$slots, \"default\")], 16, _hoisted_1)], 16), createElementVNode(\"div\", mergeProps({\n    ref: \"xBar\",\n    \"class\": _ctx.cx('barx'),\n    tabindex: \"0\",\n    role: \"scrollbar\",\n    \"aria-orientation\": \"horizontal\",\n    \"aria-controls\": $options.contentId,\n    \"aria-valuenow\": $data.lastScrollLeft,\n    onMousedown: _cache[2] || (_cache[2] = function () {\n      return $options.onXBarMouseDown && $options.onXBarMouseDown.apply($options, arguments);\n    }),\n    onKeydown: _cache[3] || (_cache[3] = function ($event) {\n      return $options.onKeyDown($event);\n    }),\n    onKeyup: _cache[4] || (_cache[4] = function () {\n      return $options.onKeyUp && $options.onKeyUp.apply($options, arguments);\n    }),\n    onFocus: _cache[5] || (_cache[5] = function () {\n      return $options.onFocus && $options.onFocus.apply($options, arguments);\n    }),\n    onBlur: _cache[6] || (_cache[6] = function () {\n      return $options.onBlur && $options.onBlur.apply($options, arguments);\n    })\n  }, _ctx.ptm('barx'), {\n    \"data-pc-group-section\": \"bar\"\n  }), null, 16, _hoisted_2), createElementVNode(\"div\", mergeProps({\n    ref: \"yBar\",\n    \"class\": _ctx.cx('bary'),\n    tabindex: \"0\",\n    role: \"scrollbar\",\n    \"aria-orientation\": \"vertical\",\n    \"aria-controls\": $options.contentId,\n    \"aria-valuenow\": $data.lastScrollTop,\n    onMousedown: _cache[7] || (_cache[7] = function () {\n      return $options.onYBarMouseDown && $options.onYBarMouseDown.apply($options, arguments);\n    }),\n    onKeydown: _cache[8] || (_cache[8] = function ($event) {\n      return $options.onKeyDown($event);\n    }),\n    onKeyup: _cache[9] || (_cache[9] = function () {\n      return $options.onKeyUp && $options.onKeyUp.apply($options, arguments);\n    }),\n    onFocus: _cache[10] || (_cache[10] = function () {\n      return $options.onFocus && $options.onFocus.apply($options, arguments);\n    })\n  }, _ctx.ptm('bary'), {\n    \"data-pc-group-section\": \"bar\"\n  }), null, 16, _hoisted_3)], 16);\n}\nscript.render = render;\nexport { script as default };","map":{"version":3,"names":["script$1","name","BaseComponent","props","step","type","Number","style","ScrollPanelStyle","provide","$pcScrollPanel","$parentInstance","script","inheritAttrs","initialized","documentResizeListener","documentMouseMoveListener","documentMouseUpListener","frame","scrollXRatio","scrollYRatio","isXBarClicked","isYBarClicked","lastPageX","lastPageY","timer","outsideClickListener","data","id","$attrs","orientation","lastScrollTop","lastScrollLeft","watch","$attrsId","newValue","UniqueComponentId","mounted","$el","offsetParent","initialize","updated","beforeUnmount","unbindDocumentResizeListener","window","cancelAnimationFrame","methods","moveBar","bindDocumentResizeListener","calculateContainerHeight","containerStyles","getComputedStyle","xBarStyles","$refs","xBar","pureContainerHeight","getHeight","parseInt","content","offsetHeight","height","parseFloat","paddingTop","paddingBottom","borderTopWidth","borderBottomWidth","_this","totalWidth","scrollWidth","ownWidth","clientWidth","bottom","clientHeight","totalHeight","scrollHeight","ownHeight","right","yBar","requestAnimationFrame","setAttribute","isUnstyled","addClass","removeClass","cssText","Math","max","abs","scrollLeft","scrollTop","onYBarMouseDown","e","focus","pageY","document","body","bindDocumentMouseListeners","preventDefault","onXBarMouseDown","pageX","onScroll","event","target","onKeyDown","code","setTimer","onKeyUp","clearTimer","repeat","bar","_this2","setTimeout","clearTimeout","onDocumentMouseMove","onMouseMoveForXBar","onMouseMoveForYBar","_this3","deltaX","_this4","deltaY","onFocus","isSameNode","onBlur","onDocumentMouseUp","unbindDocumentMouseListeners","f","timeoutFrame","refresh","_scrollTop","scrollableHeight","fn","_this5","addEventListener","removeEventListener","_this6","computed","contentId","openBlock","createElementBlock","mergeProps","_ctx","cx","ptmi","createElementVNode","ptm","ref","$options","_cache","apply","arguments","onMouseenter","renderSlot","$slots","_hoisted_1","tabindex","role","$data","onMousedown","onKeydown","$event","onKeyup","_hoisted_2","_hoisted_3"],"sources":["../../src/scrollpanel/BaseScrollPanel.vue","../../src/scrollpanel/ScrollPanel.vue","../../src/scrollpanel/ScrollPanel.vue?vue&type=template&id=917733de&lang.js"],"sourcesContent":["<script>\nimport BaseComponent from '@primevue/core/basecomponent';\nimport ScrollPanelStyle from 'primevue/scrollpanel/style';\n\nexport default {\n    name: 'BaseScrollPanel',\n    extends: BaseComponent,\n    props: {\n        step: {\n            type: Number,\n            default: 5\n        }\n    },\n    style: ScrollPanelStyle,\n    provide() {\n        return {\n            $pcScrollPanel: this,\n            $parentInstance: this\n        };\n    }\n};\n</script>\n","<template>\n    <div :class=\"cx('root')\" v-bind=\"ptmi('root')\">\n        <div :class=\"cx('contentContainer')\" v-bind=\"ptm('contentContainer')\">\n            <div ref=\"content\" :id=\"contentId\" :class=\"cx('content')\" @scroll=\"onScroll\" @mouseenter=\"moveBar\" v-bind=\"ptm('content')\">\n                <slot></slot>\n            </div>\n        </div>\n        <div\n            ref=\"xBar\"\n            :class=\"cx('barx')\"\n            tabindex=\"0\"\n            role=\"scrollbar\"\n            aria-orientation=\"horizontal\"\n            :aria-controls=\"contentId\"\n            :aria-valuenow=\"lastScrollLeft\"\n            @mousedown=\"onXBarMouseDown\"\n            @keydown=\"onKeyDown($event)\"\n            @keyup=\"onKeyUp\"\n            @focus=\"onFocus\"\n            @blur=\"onBlur\"\n            v-bind=\"ptm('barx')\"\n            data-pc-group-section=\"bar\"\n        ></div>\n        <div\n            ref=\"yBar\"\n            :class=\"cx('bary')\"\n            tabindex=\"0\"\n            role=\"scrollbar\"\n            aria-orientation=\"vertical\"\n            :aria-controls=\"contentId\"\n            :aria-valuenow=\"lastScrollTop\"\n            @mousedown=\"onYBarMouseDown\"\n            @keydown=\"onKeyDown($event)\"\n            @keyup=\"onKeyUp\"\n            @focus=\"onFocus\"\n            v-bind=\"ptm('bary')\"\n            data-pc-group-section=\"bar\"\n        ></div>\n    </div>\n</template>\n\n<script>\nimport { addClass, getHeight, removeClass } from '@primeuix/utils/dom';\nimport { UniqueComponentId } from '@primevue/core/utils';\nimport BaseScrollPanel from './BaseScrollPanel.vue';\n\nexport default {\n    name: 'ScrollPanel',\n    extends: BaseScrollPanel,\n    inheritAttrs: false,\n    initialized: false,\n    documentResizeListener: null,\n    documentMouseMoveListener: null,\n    documentMouseUpListener: null,\n    frame: null,\n    scrollXRatio: null,\n    scrollYRatio: null,\n    isXBarClicked: false,\n    isYBarClicked: false,\n    lastPageX: null,\n    lastPageY: null,\n    timer: null,\n    outsideClickListener: null,\n    data() {\n        return {\n            id: this.$attrs.id,\n            orientation: 'vertical',\n            lastScrollTop: 0,\n            lastScrollLeft: 0\n        };\n    },\n    watch: {\n        '$attrs.id': function (newValue) {\n            this.id = newValue || UniqueComponentId();\n        }\n    },\n    mounted() {\n        this.id = this.id || UniqueComponentId();\n\n        if (this.$el.offsetParent) {\n            this.initialize();\n        }\n    },\n    updated() {\n        if (!this.initialized && this.$el.offsetParent) {\n            this.initialize();\n        }\n    },\n    beforeUnmount() {\n        this.unbindDocumentResizeListener();\n\n        if (this.frame) {\n            window.cancelAnimationFrame(this.frame);\n        }\n    },\n    methods: {\n        initialize() {\n            this.moveBar();\n            this.bindDocumentResizeListener();\n            this.calculateContainerHeight();\n        },\n        calculateContainerHeight() {\n            let containerStyles = getComputedStyle(this.$el),\n                xBarStyles = getComputedStyle(this.$refs.xBar),\n                pureContainerHeight = getHeight(this.$el) - parseInt(xBarStyles['height'], 10);\n\n            if (containerStyles['max-height'] !== 'none' && pureContainerHeight === 0) {\n                if (this.$refs.content.offsetHeight + parseInt(xBarStyles['height'], 10) > parseInt(containerStyles['max-height'], 10)) {\n                    this.$el.style.height = containerStyles['max-height'];\n                } else {\n                    this.$el.style.height =\n                        this.$refs.content.offsetHeight + parseFloat(containerStyles.paddingTop) + parseFloat(containerStyles.paddingBottom) + parseFloat(containerStyles.borderTopWidth) + parseFloat(containerStyles.borderBottomWidth) + 'px';\n                }\n            }\n        },\n        moveBar() {\n            if (this.$refs.content) {\n                /* horizontal scroll */\n                let totalWidth = this.$refs.content.scrollWidth;\n                let ownWidth = this.$refs.content.clientWidth;\n                let bottom = (this.$el.clientHeight - this.$refs.xBar.clientHeight) * -1;\n\n                this.scrollXRatio = ownWidth / totalWidth;\n\n                /* vertical scroll */\n                let totalHeight = this.$refs.content.scrollHeight;\n                let ownHeight = this.$refs.content.clientHeight;\n                let right = (this.$el.clientWidth - this.$refs.yBar.clientWidth) * -1;\n\n                this.scrollYRatio = ownHeight / totalHeight;\n\n                this.frame = this.requestAnimationFrame(() => {\n                    if (this.$refs.xBar) {\n                        if (this.scrollXRatio >= 1) {\n                            this.$refs.xBar.setAttribute('data-p-scrollpanel-hidden', 'true');\n                            !this.isUnstyled && addClass(this.$refs.xBar, 'p-scrollpanel-hidden');\n                        } else {\n                            this.$refs.xBar.setAttribute('data-p-scrollpanel-hidden', 'false');\n                            !this.isUnstyled && removeClass(this.$refs.xBar, 'p-scrollpanel-hidden');\n\n                            this.$refs.xBar.style.cssText = 'width:' + Math.max(this.scrollXRatio * 100, 10) + '%; inset-inline-start:' + (Math.abs(this.$refs.content.scrollLeft) / totalWidth) * 100 + '%;bottom:' + bottom + 'px;';\n                        }\n                    }\n\n                    if (this.$refs.yBar) {\n                        if (this.scrollYRatio >= 1) {\n                            this.$refs.yBar.setAttribute('data-p-scrollpanel-hidden', 'true');\n                            !this.isUnstyled && addClass(this.$refs.yBar, 'p-scrollpanel-hidden');\n                        } else {\n                            this.$refs.yBar.setAttribute('data-p-scrollpanel-hidden', 'false');\n                            !this.isUnstyled && removeClass(this.$refs.yBar, 'p-scrollpanel-hidden');\n\n                            this.$refs.yBar.style.cssText =\n                                'height:' + Math.max(this.scrollYRatio * 100, 10) + '%; top: calc(' + (this.$refs.content.scrollTop / totalHeight) * 100 + '% - ' + this.$refs.xBar.clientHeight + 'px); inset-inline-end:' + right + 'px;';\n                        }\n                    }\n                });\n            }\n        },\n        onYBarMouseDown(e) {\n            this.isYBarClicked = true;\n            this.$refs.yBar.focus();\n            this.lastPageY = e.pageY;\n            this.$refs.yBar.setAttribute('data-p-scrollpanel-grabbed', 'true');\n            !this.isUnstyled && addClass(this.$refs.yBar, 'p-scrollpanel-grabbed');\n            document.body.setAttribute('data-p-scrollpanel-grabbed', 'true');\n            !this.isUnstyled && addClass(document.body, 'p-scrollpanel-grabbed');\n\n            this.bindDocumentMouseListeners();\n            e.preventDefault();\n        },\n        onXBarMouseDown(e) {\n            this.isXBarClicked = true;\n            this.$refs.xBar.focus();\n            this.lastPageX = e.pageX;\n            this.$refs.yBar.setAttribute('data-p-scrollpanel-grabbed', 'false');\n            !this.isUnstyled && addClass(this.$refs.xBar, 'p-scrollpanel-grabbed');\n            document.body.setAttribute('data-p-scrollpanel-grabbed', 'false');\n            !this.isUnstyled && addClass(document.body, 'p-scrollpanel-grabbed');\n\n            this.bindDocumentMouseListeners();\n            e.preventDefault();\n        },\n        onScroll(event) {\n            if (this.lastScrollLeft !== event.target.scrollLeft) {\n                this.lastScrollLeft = event.target.scrollLeft;\n                this.orientation = 'horizontal';\n            } else if (this.lastScrollTop !== event.target.scrollTop) {\n                this.lastScrollTop = event.target.scrollTop;\n                this.orientation = 'vertical';\n            }\n\n            this.moveBar();\n        },\n        onKeyDown(event) {\n            if (this.orientation === 'vertical') {\n                switch (event.code) {\n                    case 'ArrowDown': {\n                        this.setTimer('scrollTop', this.step);\n                        event.preventDefault();\n                        break;\n                    }\n\n                    case 'ArrowUp': {\n                        this.setTimer('scrollTop', this.step * -1);\n                        event.preventDefault();\n                        break;\n                    }\n\n                    case 'ArrowLeft':\n\n                    case 'ArrowRight': {\n                        event.preventDefault();\n                        break;\n                    }\n\n                    default:\n                        //no op\n                        break;\n                }\n            } else if (this.orientation === 'horizontal') {\n                switch (event.code) {\n                    case 'ArrowRight': {\n                        this.setTimer('scrollLeft', this.step);\n                        event.preventDefault();\n                        break;\n                    }\n\n                    case 'ArrowLeft': {\n                        this.setTimer('scrollLeft', this.step * -1);\n                        event.preventDefault();\n                        break;\n                    }\n\n                    case 'ArrowDown':\n\n                    case 'ArrowUp': {\n                        event.preventDefault();\n                        break;\n                    }\n\n                    default:\n                        //no op\n                        break;\n                }\n            }\n        },\n        onKeyUp() {\n            this.clearTimer();\n        },\n        repeat(bar, step) {\n            this.$refs.content[bar] += step;\n            this.moveBar();\n        },\n        setTimer(bar, step) {\n            this.clearTimer();\n            this.timer = setTimeout(() => {\n                this.repeat(bar, step);\n            }, 40);\n        },\n        clearTimer() {\n            if (this.timer) {\n                clearTimeout(this.timer);\n            }\n        },\n        onDocumentMouseMove(e) {\n            if (this.isXBarClicked) {\n                this.onMouseMoveForXBar(e);\n            } else if (this.isYBarClicked) {\n                this.onMouseMoveForYBar(e);\n            } else {\n                this.onMouseMoveForXBar(e);\n                this.onMouseMoveForYBar(e);\n            }\n        },\n        onMouseMoveForXBar(e) {\n            let deltaX = e.pageX - this.lastPageX;\n\n            this.lastPageX = e.pageX;\n\n            this.frame = this.requestAnimationFrame(() => {\n                this.$refs.content.scrollLeft += deltaX / this.scrollXRatio;\n            });\n        },\n        onMouseMoveForYBar(e) {\n            let deltaY = e.pageY - this.lastPageY;\n\n            this.lastPageY = e.pageY;\n\n            this.frame = this.requestAnimationFrame(() => {\n                this.$refs.content.scrollTop += deltaY / this.scrollYRatio;\n            });\n        },\n        onFocus(event) {\n            if (this.$refs.xBar.isSameNode(event.target)) {\n                this.orientation = 'horizontal';\n            } else if (this.$refs.yBar.isSameNode(event.target)) {\n                this.orientation = 'vertical';\n            }\n        },\n        onBlur() {\n            if (this.orientation === 'horizontal') {\n                this.orientation = 'vertical';\n            }\n        },\n        onDocumentMouseUp() {\n            this.$refs.yBar.setAttribute('data-p-scrollpanel-grabbed', 'false');\n            !this.isUnstyled && removeClass(this.$refs.yBar, 'p-scrollpanel-grabbed');\n            this.$refs.xBar.setAttribute('data-p-scrollpanel-grabbed', 'false');\n            !this.isUnstyled && removeClass(this.$refs.xBar, 'p-scrollpanel-grabbed');\n            document.body.setAttribute('data-p-scrollpanel-grabbed', 'false');\n            !this.isUnstyled && removeClass(document.body, 'p-scrollpanel-grabbed');\n\n            this.unbindDocumentMouseListeners();\n            this.isXBarClicked = false;\n            this.isYBarClicked = false;\n        },\n        requestAnimationFrame(f) {\n            let frame = window.requestAnimationFrame || this.timeoutFrame;\n\n            return frame(f);\n        },\n        refresh() {\n            this.moveBar();\n        },\n        scrollTop(scrollTop) {\n            let scrollableHeight = this.$refs.content.scrollHeight - this.$refs.content.clientHeight;\n\n            scrollTop = scrollTop > scrollableHeight ? scrollableHeight : scrollTop > 0 ? scrollTop : 0;\n            this.$refs.content.scrollTop = scrollTop;\n        },\n        timeoutFrame(fn) {\n            setTimeout(fn, 0);\n        },\n        bindDocumentMouseListeners() {\n            if (!this.documentMouseMoveListener) {\n                this.documentMouseMoveListener = (e) => {\n                    this.onDocumentMouseMove(e);\n                };\n\n                document.addEventListener('mousemove', this.documentMouseMoveListener);\n            }\n\n            if (!this.documentMouseUpListener) {\n                this.documentMouseUpListener = (e) => {\n                    this.onDocumentMouseUp(e);\n                };\n\n                document.addEventListener('mouseup', this.documentMouseUpListener);\n            }\n        },\n        unbindDocumentMouseListeners() {\n            if (this.documentMouseMoveListener) {\n                document.removeEventListener('mousemove', this.documentMouseMoveListener);\n                this.documentMouseMoveListener = null;\n            }\n\n            if (this.documentMouseUpListener) {\n                document.removeEventListener('mouseup', this.documentMouseUpListener);\n                this.documentMouseUpListener = null;\n            }\n        },\n        bindDocumentResizeListener() {\n            if (!this.documentResizeListener) {\n                this.documentResizeListener = () => {\n                    this.moveBar();\n                };\n\n                window.addEventListener('resize', this.documentResizeListener);\n            }\n        },\n        unbindDocumentResizeListener() {\n            if (this.documentResizeListener) {\n                window.removeEventListener('resize', this.documentResizeListener);\n                this.documentResizeListener = null;\n            }\n        }\n    },\n    computed: {\n        contentId() {\n            return this.id + '_content';\n        }\n    }\n};\n</script>\n","<template>\n    <div :class=\"cx('root')\" v-bind=\"ptmi('root')\">\n        <div :class=\"cx('contentContainer')\" v-bind=\"ptm('contentContainer')\">\n            <div ref=\"content\" :id=\"contentId\" :class=\"cx('content')\" @scroll=\"onScroll\" @mouseenter=\"moveBar\" v-bind=\"ptm('content')\">\n                <slot></slot>\n            </div>\n        </div>\n        <div\n            ref=\"xBar\"\n            :class=\"cx('barx')\"\n            tabindex=\"0\"\n            role=\"scrollbar\"\n            aria-orientation=\"horizontal\"\n            :aria-controls=\"contentId\"\n            :aria-valuenow=\"lastScrollLeft\"\n            @mousedown=\"onXBarMouseDown\"\n            @keydown=\"onKeyDown($event)\"\n            @keyup=\"onKeyUp\"\n            @focus=\"onFocus\"\n            @blur=\"onBlur\"\n            v-bind=\"ptm('barx')\"\n            data-pc-group-section=\"bar\"\n        ></div>\n        <div\n            ref=\"yBar\"\n            :class=\"cx('bary')\"\n            tabindex=\"0\"\n            role=\"scrollbar\"\n            aria-orientation=\"vertical\"\n            :aria-controls=\"contentId\"\n            :aria-valuenow=\"lastScrollTop\"\n            @mousedown=\"onYBarMouseDown\"\n            @keydown=\"onKeyDown($event)\"\n            @keyup=\"onKeyUp\"\n            @focus=\"onFocus\"\n            v-bind=\"ptm('bary')\"\n            data-pc-group-section=\"bar\"\n        ></div>\n    </div>\n</template>\n\n<script>\nimport { addClass, getHeight, removeClass } from '@primeuix/utils/dom';\nimport { UniqueComponentId } from '@primevue/core/utils';\nimport BaseScrollPanel from './BaseScrollPanel.vue';\n\nexport default {\n    name: 'ScrollPanel',\n    extends: BaseScrollPanel,\n    inheritAttrs: false,\n    initialized: false,\n    documentResizeListener: null,\n    documentMouseMoveListener: null,\n    documentMouseUpListener: null,\n    frame: null,\n    scrollXRatio: null,\n    scrollYRatio: null,\n    isXBarClicked: false,\n    isYBarClicked: false,\n    lastPageX: null,\n    lastPageY: null,\n    timer: null,\n    outsideClickListener: null,\n    data() {\n        return {\n            id: this.$attrs.id,\n            orientation: 'vertical',\n            lastScrollTop: 0,\n            lastScrollLeft: 0\n        };\n    },\n    watch: {\n        '$attrs.id': function (newValue) {\n            this.id = newValue || UniqueComponentId();\n        }\n    },\n    mounted() {\n        this.id = this.id || UniqueComponentId();\n\n        if (this.$el.offsetParent) {\n            this.initialize();\n        }\n    },\n    updated() {\n        if (!this.initialized && this.$el.offsetParent) {\n            this.initialize();\n        }\n    },\n    beforeUnmount() {\n        this.unbindDocumentResizeListener();\n\n        if (this.frame) {\n            window.cancelAnimationFrame(this.frame);\n        }\n    },\n    methods: {\n        initialize() {\n            this.moveBar();\n            this.bindDocumentResizeListener();\n            this.calculateContainerHeight();\n        },\n        calculateContainerHeight() {\n            let containerStyles = getComputedStyle(this.$el),\n                xBarStyles = getComputedStyle(this.$refs.xBar),\n                pureContainerHeight = getHeight(this.$el) - parseInt(xBarStyles['height'], 10);\n\n            if (containerStyles['max-height'] !== 'none' && pureContainerHeight === 0) {\n                if (this.$refs.content.offsetHeight + parseInt(xBarStyles['height'], 10) > parseInt(containerStyles['max-height'], 10)) {\n                    this.$el.style.height = containerStyles['max-height'];\n                } else {\n                    this.$el.style.height =\n                        this.$refs.content.offsetHeight + parseFloat(containerStyles.paddingTop) + parseFloat(containerStyles.paddingBottom) + parseFloat(containerStyles.borderTopWidth) + parseFloat(containerStyles.borderBottomWidth) + 'px';\n                }\n            }\n        },\n        moveBar() {\n            if (this.$refs.content) {\n                /* horizontal scroll */\n                let totalWidth = this.$refs.content.scrollWidth;\n                let ownWidth = this.$refs.content.clientWidth;\n                let bottom = (this.$el.clientHeight - this.$refs.xBar.clientHeight) * -1;\n\n                this.scrollXRatio = ownWidth / totalWidth;\n\n                /* vertical scroll */\n                let totalHeight = this.$refs.content.scrollHeight;\n                let ownHeight = this.$refs.content.clientHeight;\n                let right = (this.$el.clientWidth - this.$refs.yBar.clientWidth) * -1;\n\n                this.scrollYRatio = ownHeight / totalHeight;\n\n                this.frame = this.requestAnimationFrame(() => {\n                    if (this.$refs.xBar) {\n                        if (this.scrollXRatio >= 1) {\n                            this.$refs.xBar.setAttribute('data-p-scrollpanel-hidden', 'true');\n                            !this.isUnstyled && addClass(this.$refs.xBar, 'p-scrollpanel-hidden');\n                        } else {\n                            this.$refs.xBar.setAttribute('data-p-scrollpanel-hidden', 'false');\n                            !this.isUnstyled && removeClass(this.$refs.xBar, 'p-scrollpanel-hidden');\n\n                            this.$refs.xBar.style.cssText = 'width:' + Math.max(this.scrollXRatio * 100, 10) + '%; inset-inline-start:' + (Math.abs(this.$refs.content.scrollLeft) / totalWidth) * 100 + '%;bottom:' + bottom + 'px;';\n                        }\n                    }\n\n                    if (this.$refs.yBar) {\n                        if (this.scrollYRatio >= 1) {\n                            this.$refs.yBar.setAttribute('data-p-scrollpanel-hidden', 'true');\n                            !this.isUnstyled && addClass(this.$refs.yBar, 'p-scrollpanel-hidden');\n                        } else {\n                            this.$refs.yBar.setAttribute('data-p-scrollpanel-hidden', 'false');\n                            !this.isUnstyled && removeClass(this.$refs.yBar, 'p-scrollpanel-hidden');\n\n                            this.$refs.yBar.style.cssText =\n                                'height:' + Math.max(this.scrollYRatio * 100, 10) + '%; top: calc(' + (this.$refs.content.scrollTop / totalHeight) * 100 + '% - ' + this.$refs.xBar.clientHeight + 'px); inset-inline-end:' + right + 'px;';\n                        }\n                    }\n                });\n            }\n        },\n        onYBarMouseDown(e) {\n            this.isYBarClicked = true;\n            this.$refs.yBar.focus();\n            this.lastPageY = e.pageY;\n            this.$refs.yBar.setAttribute('data-p-scrollpanel-grabbed', 'true');\n            !this.isUnstyled && addClass(this.$refs.yBar, 'p-scrollpanel-grabbed');\n            document.body.setAttribute('data-p-scrollpanel-grabbed', 'true');\n            !this.isUnstyled && addClass(document.body, 'p-scrollpanel-grabbed');\n\n            this.bindDocumentMouseListeners();\n            e.preventDefault();\n        },\n        onXBarMouseDown(e) {\n            this.isXBarClicked = true;\n            this.$refs.xBar.focus();\n            this.lastPageX = e.pageX;\n            this.$refs.yBar.setAttribute('data-p-scrollpanel-grabbed', 'false');\n            !this.isUnstyled && addClass(this.$refs.xBar, 'p-scrollpanel-grabbed');\n            document.body.setAttribute('data-p-scrollpanel-grabbed', 'false');\n            !this.isUnstyled && addClass(document.body, 'p-scrollpanel-grabbed');\n\n            this.bindDocumentMouseListeners();\n            e.preventDefault();\n        },\n        onScroll(event) {\n            if (this.lastScrollLeft !== event.target.scrollLeft) {\n                this.lastScrollLeft = event.target.scrollLeft;\n                this.orientation = 'horizontal';\n            } else if (this.lastScrollTop !== event.target.scrollTop) {\n                this.lastScrollTop = event.target.scrollTop;\n                this.orientation = 'vertical';\n            }\n\n            this.moveBar();\n        },\n        onKeyDown(event) {\n            if (this.orientation === 'vertical') {\n                switch (event.code) {\n                    case 'ArrowDown': {\n                        this.setTimer('scrollTop', this.step);\n                        event.preventDefault();\n                        break;\n                    }\n\n                    case 'ArrowUp': {\n                        this.setTimer('scrollTop', this.step * -1);\n                        event.preventDefault();\n                        break;\n                    }\n\n                    case 'ArrowLeft':\n\n                    case 'ArrowRight': {\n                        event.preventDefault();\n                        break;\n                    }\n\n                    default:\n                        //no op\n                        break;\n                }\n            } else if (this.orientation === 'horizontal') {\n                switch (event.code) {\n                    case 'ArrowRight': {\n                        this.setTimer('scrollLeft', this.step);\n                        event.preventDefault();\n                        break;\n                    }\n\n                    case 'ArrowLeft': {\n                        this.setTimer('scrollLeft', this.step * -1);\n                        event.preventDefault();\n                        break;\n                    }\n\n                    case 'ArrowDown':\n\n                    case 'ArrowUp': {\n                        event.preventDefault();\n                        break;\n                    }\n\n                    default:\n                        //no op\n                        break;\n                }\n            }\n        },\n        onKeyUp() {\n            this.clearTimer();\n        },\n        repeat(bar, step) {\n            this.$refs.content[bar] += step;\n            this.moveBar();\n        },\n        setTimer(bar, step) {\n            this.clearTimer();\n            this.timer = setTimeout(() => {\n                this.repeat(bar, step);\n            }, 40);\n        },\n        clearTimer() {\n            if (this.timer) {\n                clearTimeout(this.timer);\n            }\n        },\n        onDocumentMouseMove(e) {\n            if (this.isXBarClicked) {\n                this.onMouseMoveForXBar(e);\n            } else if (this.isYBarClicked) {\n                this.onMouseMoveForYBar(e);\n            } else {\n                this.onMouseMoveForXBar(e);\n                this.onMouseMoveForYBar(e);\n            }\n        },\n        onMouseMoveForXBar(e) {\n            let deltaX = e.pageX - this.lastPageX;\n\n            this.lastPageX = e.pageX;\n\n            this.frame = this.requestAnimationFrame(() => {\n                this.$refs.content.scrollLeft += deltaX / this.scrollXRatio;\n            });\n        },\n        onMouseMoveForYBar(e) {\n            let deltaY = e.pageY - this.lastPageY;\n\n            this.lastPageY = e.pageY;\n\n            this.frame = this.requestAnimationFrame(() => {\n                this.$refs.content.scrollTop += deltaY / this.scrollYRatio;\n            });\n        },\n        onFocus(event) {\n            if (this.$refs.xBar.isSameNode(event.target)) {\n                this.orientation = 'horizontal';\n            } else if (this.$refs.yBar.isSameNode(event.target)) {\n                this.orientation = 'vertical';\n            }\n        },\n        onBlur() {\n            if (this.orientation === 'horizontal') {\n                this.orientation = 'vertical';\n            }\n        },\n        onDocumentMouseUp() {\n            this.$refs.yBar.setAttribute('data-p-scrollpanel-grabbed', 'false');\n            !this.isUnstyled && removeClass(this.$refs.yBar, 'p-scrollpanel-grabbed');\n            this.$refs.xBar.setAttribute('data-p-scrollpanel-grabbed', 'false');\n            !this.isUnstyled && removeClass(this.$refs.xBar, 'p-scrollpanel-grabbed');\n            document.body.setAttribute('data-p-scrollpanel-grabbed', 'false');\n            !this.isUnstyled && removeClass(document.body, 'p-scrollpanel-grabbed');\n\n            this.unbindDocumentMouseListeners();\n            this.isXBarClicked = false;\n            this.isYBarClicked = false;\n        },\n        requestAnimationFrame(f) {\n            let frame = window.requestAnimationFrame || this.timeoutFrame;\n\n            return frame(f);\n        },\n        refresh() {\n            this.moveBar();\n        },\n        scrollTop(scrollTop) {\n            let scrollableHeight = this.$refs.content.scrollHeight - this.$refs.content.clientHeight;\n\n            scrollTop = scrollTop > scrollableHeight ? scrollableHeight : scrollTop > 0 ? scrollTop : 0;\n            this.$refs.content.scrollTop = scrollTop;\n        },\n        timeoutFrame(fn) {\n            setTimeout(fn, 0);\n        },\n        bindDocumentMouseListeners() {\n            if (!this.documentMouseMoveListener) {\n                this.documentMouseMoveListener = (e) => {\n                    this.onDocumentMouseMove(e);\n                };\n\n                document.addEventListener('mousemove', this.documentMouseMoveListener);\n            }\n\n            if (!this.documentMouseUpListener) {\n                this.documentMouseUpListener = (e) => {\n                    this.onDocumentMouseUp(e);\n                };\n\n                document.addEventListener('mouseup', this.documentMouseUpListener);\n            }\n        },\n        unbindDocumentMouseListeners() {\n            if (this.documentMouseMoveListener) {\n                document.removeEventListener('mousemove', this.documentMouseMoveListener);\n                this.documentMouseMoveListener = null;\n            }\n\n            if (this.documentMouseUpListener) {\n                document.removeEventListener('mouseup', this.documentMouseUpListener);\n                this.documentMouseUpListener = null;\n            }\n        },\n        bindDocumentResizeListener() {\n            if (!this.documentResizeListener) {\n                this.documentResizeListener = () => {\n                    this.moveBar();\n                };\n\n                window.addEventListener('resize', this.documentResizeListener);\n            }\n        },\n        unbindDocumentResizeListener() {\n            if (this.documentResizeListener) {\n                window.removeEventListener('resize', this.documentResizeListener);\n                this.documentResizeListener = null;\n            }\n        }\n    },\n    computed: {\n        contentId() {\n            return this.id + '_content';\n        }\n    }\n};\n</script>\n"],"mappings":";;;;;AAIA,IAAAA,QAAA,GAAe;EACXC,IAAI,EAAE,iBAAiB;EACvB,WAASC,aAAa;EACtBC,KAAK,EAAE;IACHC,IAAI,EAAE;MACFC,IAAI,EAAEC,MAAM;MACZ,SAAS;IACb;GACH;EACDC,KAAK,EAAEC,gBAAgB;EACvBC,OAAO,WAAPA,OAAOA,CAAA,EAAG;IACN,OAAO;MACHC,cAAc,EAAE,IAAI;MACpBC,eAAe,EAAE;KACpB;EACL;AACJ,CAAC;AC0BD,IAAAC,MAAA,GAAe;EACXX,IAAI,EAAE,aAAa;EACnB,WAASD,QAAe;EACxBa,YAAY,EAAE,KAAK;EACnBC,WAAW,EAAE,KAAK;EAClBC,sBAAsB,EAAE,IAAI;EAC5BC,yBAAyB,EAAE,IAAI;EAC/BC,uBAAuB,EAAE,IAAI;EAC7BC,KAAK,EAAE,IAAI;EACXC,YAAY,EAAE,IAAI;EAClBC,YAAY,EAAE,IAAI;EAClBC,aAAa,EAAE,KAAK;EACpBC,aAAa,EAAE,KAAK;EACpBC,SAAS,EAAE,IAAI;EACfC,SAAS,EAAE,IAAI;EACfC,KAAK,EAAE,IAAI;EACXC,oBAAoB,EAAE,IAAI;EAC1BC,IAAI,WAAJA,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,EAAE,EAAE,IAAI,CAACC,MAAM,CAACD,EAAE;MAClBE,WAAW,EAAE,UAAU;MACvBC,aAAa,EAAE,CAAC;MAChBC,cAAc,EAAE;KACnB;GACJ;EACDC,KAAK,EAAE;IACH,WAAW,EAAE,SAAbC,QAAWA,CAAYC,QAAQ,EAAE;MAC7B,IAAI,CAACP,EAAG,GAAEO,QAAA,IAAYC,iBAAiB,EAAE;IAC7C;GACH;EACDC,OAAO,WAAPA,OAAOA,CAAA,EAAG;IACN,IAAI,CAACT,EAAG,GAAE,IAAI,CAACA,EAAC,IAAKQ,iBAAiB,EAAE;IAExC,IAAI,IAAI,CAACE,GAAG,CAACC,YAAY,EAAE;MACvB,IAAI,CAACC,UAAU,EAAE;IACrB;GACH;EACDC,OAAO,WAAPA,OAAOA,CAAA,EAAG;IACN,IAAI,CAAC,IAAI,CAAC3B,WAAA,IAAe,IAAI,CAACwB,GAAG,CAACC,YAAY,EAAE;MAC5C,IAAI,CAACC,UAAU,EAAE;IACrB;GACH;EACDE,aAAa,WAAbA,aAAaA,CAAA,EAAG;IACZ,IAAI,CAACC,4BAA4B,EAAE;IAEnC,IAAI,IAAI,CAACzB,KAAK,EAAE;MACZ0B,MAAM,CAACC,oBAAoB,CAAC,IAAI,CAAC3B,KAAK,CAAC;IAC3C;GACH;EACD4B,OAAO,EAAE;IACLN,UAAU,WAAVA,UAAUA,CAAA,EAAG;MACT,IAAI,CAACO,OAAO,EAAE;MACd,IAAI,CAACC,0BAA0B,EAAE;MACjC,IAAI,CAACC,wBAAwB,EAAE;KAClC;IACDA,wBAAwB,WAAxBA,wBAAwBA,CAAA,EAAG;MACvB,IAAIC,eAAgB,GAAEC,gBAAgB,CAAC,IAAI,CAACb,GAAG,CAAC;QAC5Cc,UAAS,GAAID,gBAAgB,CAAC,IAAI,CAACE,KAAK,CAACC,IAAI,CAAC;QAC9CC,mBAAkB,GAAIC,SAAS,CAAC,IAAI,CAAClB,GAAG,CAAE,GAAEmB,QAAQ,CAACL,UAAU,CAAC,QAAQ,CAAC,EAAE,EAAE,CAAC;MAElF,IAAIF,eAAe,CAAC,YAAY,CAAE,KAAI,MAAK,IAAKK,mBAAoB,KAAI,CAAC,EAAE;QACvE,IAAI,IAAI,CAACF,KAAK,CAACK,OAAO,CAACC,YAAW,GAAIF,QAAQ,CAACL,UAAU,CAAC,QAAQ,CAAC,EAAE,EAAE,IAAIK,QAAQ,CAACP,eAAe,CAAC,YAAY,CAAC,EAAE,EAAE,CAAC,EAAE;UACpH,IAAI,CAACZ,GAAG,CAAC/B,KAAK,CAACqD,MAAK,GAAIV,eAAe,CAAC,YAAY,CAAC;QACzD,CAAE,MAAK;UACH,IAAI,CAACZ,GAAG,CAAC/B,KAAK,CAACqD,MAAO,GAClB,IAAI,CAACP,KAAK,CAACK,OAAO,CAACC,YAAW,GAAIE,UAAU,CAACX,eAAe,CAACY,UAAU,IAAID,UAAU,CAACX,eAAe,CAACa,aAAa,IAAIF,UAAU,CAACX,eAAe,CAACc,cAAc,IAAIH,UAAU,CAACX,eAAe,CAACe,iBAAiB,IAAI,IAAI;QAChO;MACJ;KACH;IACDlB,OAAO,WAAPA,OAAOA,CAAA,EAAG;MAAA,IAAAmB,KAAA;MACN,IAAI,IAAI,CAACb,KAAK,CAACK,OAAO,EAAE;QACpB;QACA,IAAIS,UAAS,GAAI,IAAI,CAACd,KAAK,CAACK,OAAO,CAACU,WAAW;QAC/C,IAAIC,QAAS,GAAE,IAAI,CAAChB,KAAK,CAACK,OAAO,CAACY,WAAW;QAC7C,IAAIC,MAAK,GAAI,CAAC,IAAI,CAACjC,GAAG,CAACkC,YAAW,GAAI,IAAI,CAACnB,KAAK,CAACC,IAAI,CAACkB,YAAY,IAAI,CAAC,CAAC;QAExE,IAAI,CAACrD,YAAa,GAAEkD,QAAA,GAAWF,UAAU;;QAEzC;QACA,IAAIM,WAAU,GAAI,IAAI,CAACpB,KAAK,CAACK,OAAO,CAACgB,YAAY;QACjD,IAAIC,SAAU,GAAE,IAAI,CAACtB,KAAK,CAACK,OAAO,CAACc,YAAY;QAC/C,IAAII,KAAM,GAAE,CAAC,IAAI,CAACtC,GAAG,CAACgC,WAAY,GAAE,IAAI,CAACjB,KAAK,CAACwB,IAAI,CAACP,WAAW,IAAI,CAAC,CAAC;QAErE,IAAI,CAAClD,YAAA,GAAeuD,SAAA,GAAYF,WAAW;QAE3C,IAAI,CAACvD,KAAI,GAAI,IAAI,CAAC4D,qBAAqB,CAAC,YAAM;UAC1C,IAAIZ,KAAI,CAACb,KAAK,CAACC,IAAI,EAAE;YACjB,IAAIY,KAAI,CAAC/C,YAAa,IAAG,CAAC,EAAE;cACxB+C,KAAI,CAACb,KAAK,CAACC,IAAI,CAACyB,YAAY,CAAC,2BAA2B,EAAE,MAAM,CAAC;cACjE,CAACb,KAAI,CAACc,UAAS,IAAKC,QAAQ,CAACf,KAAI,CAACb,KAAK,CAACC,IAAI,EAAE,sBAAsB,CAAC;YACzE,CAAE,MAAK;cACHY,KAAI,CAACb,KAAK,CAACC,IAAI,CAACyB,YAAY,CAAC,2BAA2B,EAAE,OAAO,CAAC;cAClE,CAACb,KAAI,CAACc,UAAS,IAAKE,WAAW,CAAChB,KAAI,CAACb,KAAK,CAACC,IAAI,EAAE,sBAAsB,CAAC;cAExEY,KAAI,CAACb,KAAK,CAACC,IAAI,CAAC/C,KAAK,CAAC4E,OAAM,GAAI,QAAO,GAAIC,IAAI,CAACC,GAAG,CAACnB,KAAI,CAAC/C,YAAa,GAAE,GAAG,EAAE,EAAE,CAAE,GAAE,wBAAuB,GAAKiE,IAAI,CAACE,GAAG,CAACpB,KAAI,CAACb,KAAK,CAACK,OAAO,CAAC6B,UAAU,CAAE,GAAEpB,UAAU,GAAI,GAAE,GAAI,cAAcI,MAAO,GAAE,KAAK;YAC7M;UACJ;UAEA,IAAIL,KAAI,CAACb,KAAK,CAACwB,IAAI,EAAE;YACjB,IAAIX,KAAI,CAAC9C,YAAa,IAAG,CAAC,EAAE;cACxB8C,KAAI,CAACb,KAAK,CAACwB,IAAI,CAACE,YAAY,CAAC,2BAA2B,EAAE,MAAM,CAAC;cACjE,CAACb,KAAI,CAACc,UAAS,IAAKC,QAAQ,CAACf,KAAI,CAACb,KAAK,CAACwB,IAAI,EAAE,sBAAsB,CAAC;YACzE,CAAE,MAAK;cACHX,KAAI,CAACb,KAAK,CAACwB,IAAI,CAACE,YAAY,CAAC,2BAA2B,EAAE,OAAO,CAAC;cAClE,CAACb,KAAI,CAACc,UAAS,IAAKE,WAAW,CAAChB,KAAI,CAACb,KAAK,CAACwB,IAAI,EAAE,sBAAsB,CAAC;cAExEX,KAAI,CAACb,KAAK,CAACwB,IAAI,CAACtE,KAAK,CAAC4E,OAAQ,GAC1B,SAAU,GAAEC,IAAI,CAACC,GAAG,CAACnB,KAAI,CAAC9C,YAAa,GAAE,GAAG,EAAE,EAAE,CAAE,GAAE,eAAgB,GAAG8C,KAAI,CAACb,KAAK,CAACK,OAAO,CAAC8B,SAAU,GAAEf,WAAW,GAAI,GAAI,GAAE,MAAO,GAAEP,KAAI,CAACb,KAAK,CAACC,IAAI,CAACkB,YAAW,GAAI,wBAAyB,GAAEI,KAAM,GAAE,KAAK;YACnN;UACJ;QACJ,CAAC,CAAC;MACN;KACH;IACDa,eAAe,EAAf,SAAAA,eAAeA,CAACC,CAAC,EAAE;MACf,IAAI,CAACpE,aAAA,GAAgB,IAAI;MACzB,IAAI,CAAC+B,KAAK,CAACwB,IAAI,CAACc,KAAK,EAAE;MACvB,IAAI,CAACnE,SAAQ,GAAIkE,CAAC,CAACE,KAAK;MACxB,IAAI,CAACvC,KAAK,CAACwB,IAAI,CAACE,YAAY,CAAC,4BAA4B,EAAE,MAAM,CAAC;MAClE,CAAC,IAAI,CAACC,UAAS,IAAKC,QAAQ,CAAC,IAAI,CAAC5B,KAAK,CAACwB,IAAI,EAAE,uBAAuB,CAAC;MACtEgB,QAAQ,CAACC,IAAI,CAACf,YAAY,CAAC,4BAA4B,EAAE,MAAM,CAAC;MAChE,CAAC,IAAI,CAACC,UAAW,IAAGC,QAAQ,CAACY,QAAQ,CAACC,IAAI,EAAE,uBAAuB,CAAC;MAEpE,IAAI,CAACC,0BAA0B,EAAE;MACjCL,CAAC,CAACM,cAAc,EAAE;KACrB;IACDC,eAAe,EAAf,SAAAA,eAAeA,CAACP,CAAC,EAAE;MACf,IAAI,CAACrE,aAAA,GAAgB,IAAI;MACzB,IAAI,CAACgC,KAAK,CAACC,IAAI,CAACqC,KAAK,EAAE;MACvB,IAAI,CAACpE,SAAQ,GAAImE,CAAC,CAACQ,KAAK;MACxB,IAAI,CAAC7C,KAAK,CAACwB,IAAI,CAACE,YAAY,CAAC,4BAA4B,EAAE,OAAO,CAAC;MACnE,CAAC,IAAI,CAACC,UAAS,IAAKC,QAAQ,CAAC,IAAI,CAAC5B,KAAK,CAACC,IAAI,EAAE,uBAAuB,CAAC;MACtEuC,QAAQ,CAACC,IAAI,CAACf,YAAY,CAAC,4BAA4B,EAAE,OAAO,CAAC;MACjE,CAAC,IAAI,CAACC,UAAW,IAAGC,QAAQ,CAACY,QAAQ,CAACC,IAAI,EAAE,uBAAuB,CAAC;MAEpE,IAAI,CAACC,0BAA0B,EAAE;MACjCL,CAAC,CAACM,cAAc,EAAE;KACrB;IACDG,QAAQ,EAAR,SAAAA,QAAQA,CAACC,KAAK,EAAE;MACZ,IAAI,IAAI,CAACpE,cAAa,KAAMoE,KAAK,CAACC,MAAM,CAACd,UAAU,EAAE;QACjD,IAAI,CAACvD,cAAA,GAAiBoE,KAAK,CAACC,MAAM,CAACd,UAAU;QAC7C,IAAI,CAACzD,WAAU,GAAI,YAAY;OACjC,MAAK,IAAI,IAAI,CAACC,aAAY,KAAMqE,KAAK,CAACC,MAAM,CAACb,SAAS,EAAE;QACtD,IAAI,CAACzD,aAAA,GAAgBqE,KAAK,CAACC,MAAM,CAACb,SAAS;QAC3C,IAAI,CAAC1D,WAAU,GAAI,UAAU;MACjC;MAEA,IAAI,CAACiB,OAAO,EAAE;KACjB;IACDuD,SAAS,EAAT,SAAAA,SAASA,CAACF,KAAK,EAAE;MACb,IAAI,IAAI,CAACtE,WAAY,KAAI,UAAU,EAAE;QACjC,QAAQsE,KAAK,CAACG,IAAI;UACd,KAAK,WAAW;YAAE;cACd,IAAI,CAACC,QAAQ,CAAC,WAAW,EAAE,IAAI,CAACpG,IAAI,CAAC;cACrCgG,KAAK,CAACJ,cAAc,EAAE;cACtB;YACJ;UAEA,KAAK,SAAS;YAAE;cACZ,IAAI,CAACQ,QAAQ,CAAC,WAAW,EAAE,IAAI,CAACpG,IAAA,GAAO,CAAC,CAAC,CAAC;cAC1CgG,KAAK,CAACJ,cAAc,EAAE;cACtB;YACJ;UAEA,KAAK,WAAW;UAEhB,KAAK,YAAY;YAAE;cACfI,KAAK,CAACJ,cAAc,EAAE;cACtB;YACJ;QAKJ;MACJ,OAAO,IAAI,IAAI,CAAClE,WAAY,KAAI,YAAY,EAAE;QAC1C,QAAQsE,KAAK,CAACG,IAAI;UACd,KAAK,YAAY;YAAE;cACf,IAAI,CAACC,QAAQ,CAAC,YAAY,EAAE,IAAI,CAACpG,IAAI,CAAC;cACtCgG,KAAK,CAACJ,cAAc,EAAE;cACtB;YACJ;UAEA,KAAK,WAAW;YAAE;cACd,IAAI,CAACQ,QAAQ,CAAC,YAAY,EAAE,IAAI,CAACpG,IAAA,GAAO,CAAC,CAAC,CAAC;cAC3CgG,KAAK,CAACJ,cAAc,EAAE;cACtB;YACJ;UAEA,KAAK,WAAW;UAEhB,KAAK,SAAS;YAAE;cACZI,KAAK,CAACJ,cAAc,EAAE;cACtB;YACJ;QAKJ;MACJ;KACH;IACDS,OAAO,WAAPA,OAAOA,CAAA,EAAG;MACN,IAAI,CAACC,UAAU,EAAE;KACpB;IACDC,MAAM,WAANA,MAAMA,CAACC,GAAG,EAAExG,IAAI,EAAE;MACd,IAAI,CAACiD,KAAK,CAACK,OAAO,CAACkD,GAAG,CAAE,IAAGxG,IAAI;MAC/B,IAAI,CAAC2C,OAAO,EAAE;KACjB;IACDyD,QAAQ,WAARA,QAAQA,CAACI,GAAG,EAAExG,IAAI,EAAE;MAAA,IAAAyG,MAAA;MAChB,IAAI,CAACH,UAAU,EAAE;MACjB,IAAI,CAACjF,KAAM,GAAEqF,UAAU,CAAC,YAAM;QAC1BD,MAAI,CAACF,MAAM,CAACC,GAAG,EAAExG,IAAI,CAAC;OACzB,EAAE,EAAE,CAAC;KACT;IACDsG,UAAU,WAAVA,UAAUA,CAAA,EAAG;MACT,IAAI,IAAI,CAACjF,KAAK,EAAE;QACZsF,YAAY,CAAC,IAAI,CAACtF,KAAK,CAAC;MAC5B;KACH;IACDuF,mBAAmB,EAAnB,SAAAA,mBAAmBA,CAACtB,CAAC,EAAE;MACnB,IAAI,IAAI,CAACrE,aAAa,EAAE;QACpB,IAAI,CAAC4F,kBAAkB,CAACvB,CAAC,CAAC;MAC9B,CAAE,MAAK,IAAI,IAAI,CAACpE,aAAa,EAAE;QAC3B,IAAI,CAAC4F,kBAAkB,CAACxB,CAAC,CAAC;MAC9B,CAAE,MAAK;QACH,IAAI,CAACuB,kBAAkB,CAACvB,CAAC,CAAC;QAC1B,IAAI,CAACwB,kBAAkB,CAACxB,CAAC,CAAC;MAC9B;KACH;IACDuB,kBAAkB,EAAlB,SAAAA,kBAAkBA,CAACvB,CAAC,EAAE;MAAA,IAAAyB,MAAA;MAClB,IAAIC,MAAK,GAAI1B,CAAC,CAACQ,KAAM,GAAE,IAAI,CAAC3E,SAAS;MAErC,IAAI,CAACA,SAAQ,GAAImE,CAAC,CAACQ,KAAK;MAExB,IAAI,CAAChF,KAAI,GAAI,IAAI,CAAC4D,qBAAqB,CAAC,YAAM;QAC1CqC,MAAI,CAAC9D,KAAK,CAACK,OAAO,CAAC6B,UAAW,IAAG6B,MAAK,GAAID,MAAI,CAAChG,YAAY;MAC/D,CAAC,CAAC;KACL;IACD+F,kBAAkB,EAAlB,SAAAA,kBAAkBA,CAACxB,CAAC,EAAE;MAAA,IAAA2B,MAAA;MAClB,IAAIC,MAAK,GAAI5B,CAAC,CAACE,KAAM,GAAE,IAAI,CAACpE,SAAS;MAErC,IAAI,CAACA,SAAQ,GAAIkE,CAAC,CAACE,KAAK;MAExB,IAAI,CAAC1E,KAAI,GAAI,IAAI,CAAC4D,qBAAqB,CAAC,YAAM;QAC1CuC,MAAI,CAAChE,KAAK,CAACK,OAAO,CAAC8B,SAAA,IAAa8B,MAAO,GAAED,MAAI,CAACjG,YAAY;MAC9D,CAAC,CAAC;KACL;IACDmG,OAAO,EAAP,SAAAA,OAAOA,CAACnB,KAAK,EAAE;MACX,IAAI,IAAI,CAAC/C,KAAK,CAACC,IAAI,CAACkE,UAAU,CAACpB,KAAK,CAACC,MAAM,CAAC,EAAE;QAC1C,IAAI,CAACvE,WAAU,GAAI,YAAY;MACnC,CAAE,MAAK,IAAI,IAAI,CAACuB,KAAK,CAACwB,IAAI,CAAC2C,UAAU,CAACpB,KAAK,CAACC,MAAM,CAAC,EAAE;QACjD,IAAI,CAACvE,WAAU,GAAI,UAAU;MACjC;KACH;IACD2F,MAAM,WAANA,MAAMA,CAAA,EAAG;MACL,IAAI,IAAI,CAAC3F,WAAU,KAAM,YAAY,EAAE;QACnC,IAAI,CAACA,WAAU,GAAI,UAAU;MACjC;KACH;IACD4F,iBAAiB,WAAjBA,iBAAiBA,CAAA,EAAG;MAChB,IAAI,CAACrE,KAAK,CAACwB,IAAI,CAACE,YAAY,CAAC,4BAA4B,EAAE,OAAO,CAAC;MACnE,CAAC,IAAI,CAACC,UAAW,IAAGE,WAAW,CAAC,IAAI,CAAC7B,KAAK,CAACwB,IAAI,EAAE,uBAAuB,CAAC;MACzE,IAAI,CAACxB,KAAK,CAACC,IAAI,CAACyB,YAAY,CAAC,4BAA4B,EAAE,OAAO,CAAC;MACnE,CAAC,IAAI,CAACC,UAAW,IAAGE,WAAW,CAAC,IAAI,CAAC7B,KAAK,CAACC,IAAI,EAAE,uBAAuB,CAAC;MACzEuC,QAAQ,CAACC,IAAI,CAACf,YAAY,CAAC,4BAA4B,EAAE,OAAO,CAAC;MACjE,CAAC,IAAI,CAACC,UAAS,IAAKE,WAAW,CAACW,QAAQ,CAACC,IAAI,EAAE,uBAAuB,CAAC;MAEvE,IAAI,CAAC6B,4BAA4B,EAAE;MACnC,IAAI,CAACtG,aAAY,GAAI,KAAK;MAC1B,IAAI,CAACC,aAAY,GAAI,KAAK;KAC7B;IACDwD,qBAAqB,EAArB,SAAAA,qBAAqBA,CAAC8C,CAAC,EAAE;MACrB,IAAI1G,KAAM,GAAE0B,MAAM,CAACkC,qBAAsB,IAAG,IAAI,CAAC+C,YAAY;MAE7D,OAAO3G,KAAK,CAAC0G,CAAC,CAAC;KAClB;IACDE,OAAO,WAAPA,OAAOA,CAAA,EAAG;MACN,IAAI,CAAC/E,OAAO,EAAE;KACjB;IACDyC,SAAS,EAAT,SAAAA,SAASA,CAACuC,UAAS,EAAE;MACjB,IAAIC,gBAAiB,GAAE,IAAI,CAAC3E,KAAK,CAACK,OAAO,CAACgB,YAAW,GAAI,IAAI,CAACrB,KAAK,CAACK,OAAO,CAACc,YAAY;MAExFuD,UAAU,GAAEA,UAAU,GAAEC,gBAAA,GAAmBA,gBAAe,GAAID,UAAQ,GAAI,IAAIA,UAAQ,GAAI,CAAC;MAC3F,IAAI,CAAC1E,KAAK,CAACK,OAAO,CAAC8B,SAAU,GAAEuC,UAAS;KAC3C;IACDF,YAAY,EAAZ,SAAAA,YAAYA,CAACI,EAAE,EAAE;MACbnB,UAAU,CAACmB,EAAE,EAAE,CAAC,CAAC;KACpB;IACDlC,0BAA0B,WAA1BA,0BAA0BA,CAAA,EAAG;MAAA,IAAAmC,MAAA;MACzB,IAAI,CAAC,IAAI,CAAClH,yBAAyB,EAAE;QACjC,IAAI,CAACA,yBAAA,GAA4B,UAAC0E,CAAC,EAAK;UACpCwC,MAAI,CAAClB,mBAAmB,CAACtB,CAAC,CAAC;SAC9B;QAEDG,QAAQ,CAACsC,gBAAgB,CAAC,WAAW,EAAE,IAAI,CAACnH,yBAAyB,CAAC;MAC1E;MAEA,IAAI,CAAC,IAAI,CAACC,uBAAuB,EAAE;QAC/B,IAAI,CAACA,uBAAsB,GAAI,UAACyE,CAAC,EAAK;UAClCwC,MAAI,CAACR,iBAAiB,CAAChC,CAAC,CAAC;SAC5B;QAEDG,QAAQ,CAACsC,gBAAgB,CAAC,SAAS,EAAE,IAAI,CAAClH,uBAAuB,CAAC;MACtE;KACH;IACD0G,4BAA4B,WAA5BA,4BAA4BA,CAAA,EAAG;MAC3B,IAAI,IAAI,CAAC3G,yBAAyB,EAAE;QAChC6E,QAAQ,CAACuC,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAACpH,yBAAyB,CAAC;QACzE,IAAI,CAACA,yBAA0B,GAAE,IAAI;MACzC;MAEA,IAAI,IAAI,CAACC,uBAAuB,EAAE;QAC9B4E,QAAQ,CAACuC,mBAAmB,CAAC,SAAS,EAAE,IAAI,CAACnH,uBAAuB,CAAC;QACrE,IAAI,CAACA,uBAAwB,GAAE,IAAI;MACvC;KACH;IACD+B,0BAA0B,WAA1BA,0BAA0BA,CAAA,EAAG;MAAA,IAAAqF,MAAA;MACzB,IAAI,CAAC,IAAI,CAACtH,sBAAsB,EAAE;QAC9B,IAAI,CAACA,sBAAuB,GAAE,YAAM;UAChCsH,MAAI,CAACtF,OAAO,EAAE;SACjB;QAEDH,MAAM,CAACuF,gBAAgB,CAAC,QAAQ,EAAE,IAAI,CAACpH,sBAAsB,CAAC;MAClE;KACH;IACD4B,4BAA4B,WAA5BA,4BAA4BA,CAAA,EAAG;MAC3B,IAAI,IAAI,CAAC5B,sBAAsB,EAAE;QAC7B6B,MAAM,CAACwF,mBAAmB,CAAC,QAAQ,EAAE,IAAI,CAACrH,sBAAsB,CAAC;QACjE,IAAI,CAACA,sBAAuB,GAAE,IAAI;MACtC;IACJ;GACH;EACDuH,QAAQ,EAAE;IACNC,SAAS,WAATA,SAASA,CAAA,EAAG;MACR,OAAO,IAAI,CAAC3G,EAAA,GAAK,UAAU;IAC/B;EACJ;AACJ,CAAC;;;;;EC9XG,OAAA4G,SAAA,IAAAC,kBAAA,CAqCK,OArCLC,UAqCK;IArCC,SAAOC,IAAE,CAAAC,EAAA;KAAkBD,IAAI,CAAAE,IAAA,YACjCC,kBAAA,CAIK,OAJLJ,UAIK;IAJC,SAAOC,IAAE,CAAAC,EAAA;KAA8BD,IAAG,CAAAI,GAAA,wBAC5CD,kBAAA,CAEK,OAFLJ,UAEK;IAFAM,GAAG,EAAC,SAAU;IAACpH,EAAE,EAAEqH,QAAS,CAAAV,SAAA;IAAG,SAAOI,IAAE,CAAAC,EAAA;IAAczC,QAAM,EAAA+C,MAAA,QAAAA,MAAA;aAAED,QAAQ,CAAA9C,QAAA,IAAA8C,QAAA,CAAA9C,QAAA,CAAAgD,KAAA,CAAAF,QAAA,EAAAG,SAAA;IAAA;IAAGC,YAAU,EAAAH,MAAA,QAAAA,MAAA;aAAED,QAAO,CAAAlG,OAAA,IAAAkG,QAAA,CAAAlG,OAAA,CAAAoG,KAAA,CAAAF,QAAA,EAAAG,SAAA;KAAA;KAAUT,IAAG,CAAAI,GAAA,eAC1GO,UAAY,CAAAX,IAAA,CAAAY,MAAA,mBAAAC,UAAA,SAGpBV,kBAAA,CAeM,OAfNJ,UAeM;IAdFM,GAAG,EAAC,MAAK;IACR,SAAOL,IAAE,CAAAC,EAAA;IACVa,QAAQ,EAAC,GAAE;IACXC,IAAI,EAAC,WAAU;IACf,kBAAgB,EAAC,YAAW;IAC3B,eAAa,EAAET,QAAS,CAAAV,SAAA;IACxB,eAAa,EAAEoB,KAAc,CAAA3H,cAAA;IAC7B4H,WAAS,EAAAV,MAAA,QAAAA,MAAA;aAAED,QAAe,CAAAhD,eAAA,IAAAgD,QAAA,CAAAhD,eAAA,CAAAkD,KAAA,CAAAF,QAAA,EAAAG,SAAA;IAAA;IAC1BS,SAAO,EAAAX,MAAA,QAAAA,MAAA,gBAAAY,MAAA;MAAA,OAAEb,QAAS,CAAA3C,SAAA,CAACwD,MAAM;IAAA;IACzBC,OAAK,EAAAb,MAAA,QAAAA,MAAA;aAAED,QAAO,CAAAxC,OAAA,IAAAwC,QAAA,CAAAxC,OAAA,CAAA0C,KAAA,CAAAF,QAAA,EAAAG,SAAA;IAAA;IACd7B,OAAK,EAAA2B,MAAA,QAAAA,MAAA;aAAED,QAAO,CAAA1B,OAAA,IAAA0B,QAAA,CAAA1B,OAAA,CAAA4B,KAAA,CAAAF,QAAA,EAAAG,SAAA;IAAA;IACd3B,MAAI,EAAAyB,MAAA,QAAAA,MAAA;aAAED,QAAM,CAAAxB,MAAA,IAAAwB,QAAA,CAAAxB,MAAA,CAAA0B,KAAA,CAAAF,QAAA,EAAAG,SAAA;KAAA;KACLT,IAAG,CAAAI,GAAA;IACX,uBAAqB,EAAC;EAAI,cAAAiB,UAAA,GAE9BlB,kBAAA,CAcM,OAdNJ,UAcM;IAbFM,GAAG,EAAC,MAAK;IACR,SAAOL,IAAE,CAAAC,EAAA;IACVa,QAAQ,EAAC,GAAE;IACXC,IAAI,EAAC,WAAU;IACf,kBAAgB,EAAC,UAAS;IACzB,eAAa,EAAET,QAAS,CAAAV,SAAA;IACxB,eAAa,EAAEoB,KAAa,CAAA5H,aAAA;IAC5B6H,WAAS,EAAAV,MAAA,QAAAA,MAAA;aAAED,QAAe,CAAAxD,eAAA,IAAAwD,QAAA,CAAAxD,eAAA,CAAA0D,KAAA,CAAAF,QAAA,EAAAG,SAAA;IAAA;IAC1BS,SAAO,EAAAX,MAAA,QAAAA,MAAA,gBAAAY,MAAA;MAAA,OAAEb,QAAS,CAAA3C,SAAA,CAACwD,MAAM;IAAA;IACzBC,OAAK,EAAAb,MAAA,QAAAA,MAAA;aAAED,QAAO,CAAAxC,OAAA,IAAAwC,QAAA,CAAAxC,OAAA,CAAA0C,KAAA,CAAAF,QAAA,EAAAG,SAAA;IAAA;IACd7B,OAAK,EAAA2B,MAAA,SAAAA,MAAA;aAAED,QAAO,CAAA1B,OAAA,IAAA0B,QAAA,CAAA1B,OAAA,CAAA4B,KAAA,CAAAF,QAAA,EAAAG,SAAA;KAAA;KACPT,IAAG,CAAAI,GAAA;IACX,uBAAqB,EAAC;GAAI,aAAAkB,UAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}