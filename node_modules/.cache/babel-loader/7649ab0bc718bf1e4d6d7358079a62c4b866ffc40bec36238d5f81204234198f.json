{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      showCreateDialog: false,\n      showEditDialog: false,\n      showConfirmDialog: false,\n      roles: [],\n      // Initially empty, will be populated from API\n      accounts: [],\n      formData: {\n        name: '',\n        email: '',\n        role: ''\n      },\n      editData: {},\n      selectedAccount: null\n    };\n  },\n  created() {\n    this.fetchAccounts();\n    this.fetchRoles(); // Fetch roles when component is created\n  },\n  methods: {\n    // Fetch all accounts\n    fetchAccounts() {\n      axios.get('http://127.0.0.1:8000/api/users').then(response => {\n        this.accounts = response.data;\n      }).catch(error => {\n        this.showErrorToast('Failed to fetch accounts');\n      });\n    },\n    // Fetch roles from API\n    fetchRoles() {\n      axios.get('http://127.0.0.1:8000/api/roles') // Update with your actual API endpoint\n      .then(response => {\n        this.roles = response.data.map(role => ({\n          label: role.name,\n          // Adjust based on API response structure\n          value: role.id // Use role ID as value\n        }));\n      }).catch(error => {\n        this.showErrorToast('Failed to fetch roles');\n      });\n    },\n    // Create a new account\n    createAccount() {\n      axios.post('http://127.0.0.1:8000/api/users', this.formData).then(response => {\n        this.accounts.push(response.data);\n        this.resetFormData();\n        this.showCreateDialog = false;\n        this.showSuccessToast('Account created successfully');\n      }).catch(error => {\n        this.showErrorToast('Failed to create account');\n      });\n    },\n    // Edit an existing account\n    editAccount(account) {\n      this.editData = {\n        ...account\n      };\n      this.showEditDialog = true;\n    },\n    // Update account information\n    updateAccount() {\n      axios.put(`http://127.0.0.1:8000/api/users/${this.editData.id}`, this.editData).then(response => {\n        const index = this.accounts.findIndex(a => a.id === this.editData.id);\n        if (index !== -1) {\n          this.accounts.splice(index, 1, response.data);\n        }\n        this.showEditDialog = false;\n        this.showSuccessToast('Account updated successfully');\n      }).catch(error => {\n        this.showErrorToast('Failed to update account');\n      });\n    },\n    // Confirm account deletion\n    confirmDeleteAccount(account) {\n      this.selectedAccount = account;\n      this.showConfirmDialog = true;\n    },\n    // Delete an account\n    deleteAccount() {\n      axios.delete(`http://127.0.0.1:8000/api/users/${this.selectedAccount.id}`).then(response => {\n        this.accounts = this.accounts.filter(a => a.id !== this.selectedAccount.id);\n        this.showConfirmDialog = false;\n        this.showSuccessToast('Account deleted successfully');\n      }).catch(error => {\n        this.showErrorToast('Failed to delete account');\n      });\n    },\n    // Reset form data\n    resetFormData() {\n      this.formData = {\n        name: '',\n        email: '',\n        role: ''\n      };\n    },\n    // Show success toast\n    showSuccessToast(message) {\n      this.$refs.toast.add({\n        severity: 'success',\n        summary: 'Success',\n        detail: message,\n        life: 3000\n      });\n    },\n    // Show error toast\n    showErrorToast(message) {\n      this.$refs.toast.add({\n        severity: 'error',\n        summary: 'Error',\n        detail: message,\n        life: 3000\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","data","showCreateDialog","showEditDialog","showConfirmDialog","roles","accounts","formData","name","email","role","editData","selectedAccount","created","fetchAccounts","fetchRoles","methods","get","then","response","catch","error","showErrorToast","map","label","value","id","createAccount","post","push","resetFormData","showSuccessToast","editAccount","account","updateAccount","put","index","findIndex","a","splice","confirmDeleteAccount","deleteAccount","delete","filter","message","$refs","toast","add","severity","summary","detail","life"],"sources":["C:\\Users\\darle\\solid-waste-management-system\\src\\components\\AccountManagementPage.vue"],"sourcesContent":["<template>\r\n  <div class=\"p-6 bg-gray-50 min-h-screen\">\r\n    <h1 class=\"text-3xl font-semibold mb-6 text-gray-800\">Account Management</h1>\r\n\r\n    <!-- Create Account Button -->\r\n    <Button \r\n      label=\"Create Account\" \r\n      icon=\"pi pi-plus\" \r\n      severity=\"info\" \r\n      class=\"mb-6 px-6 py-3 text-white bg-blue-600 rounded-lg hover:bg-blue-700 transition-all\" \r\n      @click=\"showCreateDialog = true\"\r\n    ></Button>\r\n\r\n    <!-- Create Account Dialog -->\r\n    <Dialog \r\n      v-model:visible=\"showCreateDialog\" \r\n      header=\"Create Account\" \r\n      :modal=\"true\" \r\n      :closable=\"true\" \r\n      :style=\"{ width: '35vw' }\"\r\n    >\r\n      <form @submit.prevent=\"createAccount\">\r\n        <div class=\"field mb-4\">\r\n          <label for=\"name\" class=\"block text-sm font-medium text-gray-700\">Name</label>\r\n          <InputText \r\n            id=\"name\" \r\n            v-model=\"formData.name\" \r\n            type=\"text\" \r\n            class=\"w-full mt-1 border-gray-300 rounded-lg shadow-sm\"\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <div class=\"field mb-4\">\r\n          <label for=\"email\" class=\"block text-sm font-medium text-gray-700\">Email</label>\r\n          <InputText \r\n            id=\"email\" \r\n            v-model=\"formData.email\" \r\n            type=\"email\" \r\n            class=\"w-full mt-1 border-gray-300 rounded-lg shadow-sm\"\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <div class=\"field mb-4\">\r\n          <label for=\"role\" class=\"block text-sm font-medium text-gray-700\">Role</label>\r\n          <Select \r\n            id=\"role\" \r\n            v-model=\"formData.role\" \r\n            :options=\"roles\" \r\n            option-label=\"label\" \r\n            option-value=\"value\" \r\n            placeholder=\"Select a role\"\r\n            class=\"w-full mt-1 border-gray-300 rounded-lg shadow-sm\"\r\n          ></Select>\r\n        </div>\r\n\r\n        <div class=\"flex justify-end space-x-2\">\r\n          <Button label=\"Cancel\" severity=\"secondary\" @click=\"showCreateDialog = false\"></Button>\r\n          <Button label=\"Save\" type=\"submit\" severity=\"success\"></Button>\r\n        </div>\r\n      </form>\r\n    </Dialog>\r\n\r\n    <!-- Account Table -->\r\n    <DataTable :value=\"accounts\" paginator :rows=\"10\" stripedRows >\r\n      <Column field=\"name\" header=\"Name\"></Column>\r\n      <Column field=\"email\" header=\"Email\"></Column>\r\n      <Column field=\"role\" header=\"Role\"></Column>\r\n      <Column header=\"Actions\">\r\n        <template #body=\"slotProps\">\r\n          <div class=\"flex space-x-2\">\r\n            <Button \r\n              icon=\"pi pi-pencil\" \r\n              severity=\"success\" \r\n              class=\"p-button-rounded p-button-text\" \r\n              @click=\"editAccount(slotProps.data)\"\r\n            ></Button>\r\n            <Button \r\n              icon=\"pi pi-trash\" \r\n              severity=\"danger\" \r\n              class=\"p-button-rounded p-button-text\" \r\n              @click=\"confirmDeleteAccount(slotProps.data)\"\r\n            ></Button>\r\n          </div>\r\n        </template>\r\n      </Column>\r\n    </DataTable>\r\n\r\n    <!-- Edit Account Dialog -->\r\n    <Dialog \r\n      v-model:visible=\"showEditDialog\" \r\n      header=\"Edit Account\" \r\n      :modal=\"true\" \r\n      :closable=\"true\" \r\n      :style=\"{ width: '35vw' }\"\r\n    >\r\n      <form @submit.prevent=\"updateAccount\">\r\n        <div class=\"field mb-4\">\r\n          <label for=\"edit-name\" class=\"block text-sm font-medium text-gray-700\">Name</label>\r\n          <InputText \r\n            id=\"edit-name\" \r\n            v-model=\"editData.name\" \r\n            type=\"text\" \r\n            class=\"w-full mt-1 border-gray-300 rounded-lg shadow-sm\"\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <div class=\"field mb-4\">\r\n          <label for=\"edit-email\" class=\"block text-sm font-medium text-gray-700\">Email</label>\r\n          <InputText \r\n            id=\"edit-email\" \r\n            v-model=\"editData.email\" \r\n            type=\"email\" \r\n            class=\"w-full mt-1 border-gray-300 rounded-lg shadow-sm\"\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <div class=\"field mb-4\">\r\n          <label for=\"edit-role\" class=\"block text-sm font-medium text-gray-700\">Role</label>\r\n          <Select \r\n            id=\"edit-role\" \r\n            v-model=\"editData.role\" \r\n            :options=\"roles\" \r\n            option-label=\"label\" \r\n            option-value=\"value\" \r\n            placeholder=\"Select a role\"\r\n            class=\"w-full mt-1 border-gray-300 rounded-lg shadow-sm\"\r\n          ></Select>\r\n        </div>\r\n\r\n        <div class=\"flex justify-end space-x-2\">\r\n          <Button label=\"Cancel\" class=\"text-gray-600 hover:text-gray-900\" @click=\"showEditDialog = false\"></Button>\r\n          <Button label=\"Update\" type=\"submit\" class=\"primary px-6 py-2 text-white bg-blue-600 rounded-lg hover:bg-blue-700 transition-all\"></Button>\r\n        </div>\r\n      </form>\r\n    </Dialog>\r\n\r\n    <!-- Confirmation Dialog for Deletion -->\r\n    <Dialog \r\n      v-model:visible=\"showConfirmDialog\" \r\n      header=\"Confirm Deletion\" \r\n      :modal=\"true\" \r\n      :closable=\"true\" \r\n      :style=\"{ width: '30vw' }\"\r\n    >\r\n      <p>Are you sure you want to delete this account?</p>\r\n      <div class=\"flex justify-end space-x-2\">\r\n        <Button label=\"Cancel\" severity=\"secondary\" @click=\"showConfirmDialog = false\"></Button>\r\n        <Button label=\"Confirm\" severity=\"success\" @click=\"deleteAccount\"></Button>\r\n      </div>\r\n    </Dialog>\r\n\r\n    <!-- Toast Notification -->\r\n    <Toast ref=\"toast\"></Toast>\r\n  </div>\r\n</template>\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      showCreateDialog: false,\r\n      showEditDialog: false,\r\n      showConfirmDialog: false,\r\n      roles: [], // Initially empty, will be populated from API\r\n      accounts: [],\r\n      formData: {\r\n        name: '',\r\n        email: '',\r\n        role: '',\r\n      },\r\n      editData: {},\r\n      selectedAccount: null,\r\n    };\r\n  },\r\n  created() {\r\n    this.fetchAccounts();\r\n    this.fetchRoles(); // Fetch roles when component is created\r\n  },\r\n  methods: {\r\n    // Fetch all accounts\r\n    fetchAccounts() {\r\n      axios.get('http://127.0.0.1:8000/api/users')\r\n        .then(response => {\r\n          this.accounts = response.data;\r\n        })\r\n        .catch(error => {\r\n          this.showErrorToast('Failed to fetch accounts');\r\n        });\r\n    },\r\n\r\n    // Fetch roles from API\r\n    fetchRoles() {\r\n      axios.get('http://127.0.0.1:8000/api/roles') // Update with your actual API endpoint\r\n        .then(response => {\r\n          this.roles = response.data.map(role => ({\r\n            label: role.name, // Adjust based on API response structure\r\n            value: role.id,   // Use role ID as value\r\n          }));\r\n        })\r\n        .catch(error => {\r\n          this.showErrorToast('Failed to fetch roles');\r\n        });\r\n    },\r\n\r\n    // Create a new account\r\n    createAccount() {\r\n      axios.post('http://127.0.0.1:8000/api/users', this.formData)\r\n        .then(response => {\r\n          this.accounts.push(response.data);\r\n          this.resetFormData();\r\n          this.showCreateDialog = false;\r\n          this.showSuccessToast('Account created successfully');\r\n        })\r\n        .catch(error => {\r\n          this.showErrorToast('Failed to create account');\r\n        });\r\n    },\r\n\r\n    // Edit an existing account\r\n    editAccount(account) {\r\n      this.editData = { ...account };\r\n      this.showEditDialog = true;\r\n    },\r\n\r\n    // Update account information\r\n    updateAccount() {\r\n      axios.put(`http://127.0.0.1:8000/api/users/${this.editData.id}`, this.editData)\r\n        .then(response => {\r\n          const index = this.accounts.findIndex(a => a.id === this.editData.id);\r\n          if (index !== -1) {\r\n            this.accounts.splice(index, 1, response.data);\r\n          }\r\n          this.showEditDialog = false;\r\n          this.showSuccessToast('Account updated successfully');\r\n        })\r\n        .catch(error => {\r\n          this.showErrorToast('Failed to update account');\r\n        });\r\n    },\r\n\r\n    // Confirm account deletion\r\n    confirmDeleteAccount(account) {\r\n      this.selectedAccount = account;\r\n      this.showConfirmDialog = true;\r\n    },\r\n\r\n    // Delete an account\r\n    deleteAccount() {\r\n      axios.delete(`http://127.0.0.1:8000/api/users/${this.selectedAccount.id}`)\r\n        .then(response => {\r\n          this.accounts = this.accounts.filter(a => a.id !== this.selectedAccount.id);\r\n          this.showConfirmDialog = false;\r\n          this.showSuccessToast('Account deleted successfully');\r\n        })\r\n        .catch(error => {\r\n          this.showErrorToast('Failed to delete account');\r\n        });\r\n    },\r\n\r\n    // Reset form data\r\n    resetFormData() {\r\n      this.formData = {\r\n        name: '',\r\n        email: '',\r\n        role: '',\r\n      };\r\n    },\r\n\r\n    // Show success toast\r\n    showSuccessToast(message) {\r\n      this.$refs.toast.add({ severity: 'success', summary: 'Success', detail: message, life: 3000 });\r\n    },\r\n\r\n    // Show error toast\r\n    showErrorToast(message) {\r\n      this.$refs.toast.add({ severity: 'error', summary: 'Error', detail: message, life: 3000 });\r\n    },\r\n  },\r\n};\r\n</script>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}