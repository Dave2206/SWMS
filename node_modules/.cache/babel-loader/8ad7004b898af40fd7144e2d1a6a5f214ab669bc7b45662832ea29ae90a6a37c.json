{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.for-each.js\";\nimport { createElement, addClass, hasClass, removeClass } from '@primeuix/utils/dom';\nimport { UniqueComponentId } from '@primevue/core/utils';\nimport BaseDirective from '@primevue/core/basedirective';\nimport BadgeDirectiveStyle from 'primevue/badgedirective/style';\nvar BaseBadgeDirective = BaseDirective.extend({\n  style: BadgeDirectiveStyle\n});\nfunction _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nfunction _objectSpread(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      _defineProperty(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}\nfunction _defineProperty(e, r, t) {\n  return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nvar BadgeDirective = BaseBadgeDirective.extend('badge', {\n  mounted: function mounted(el, binding) {\n    console.warn('Deprecated since v4. Use OverlayBadge component instead.');\n    var id = UniqueComponentId() + '_badge';\n    var badge = createElement('span', _defineProperty(_defineProperty({\n      id: id,\n      \"class\": !this.isUnstyled() && this.cx('root')\n    }, this.$attrSelector, ''), 'p-bind', this.ptm('root', {\n      context: _objectSpread(_objectSpread({}, binding.modifiers), {}, {\n        nogutter: String(binding.value).length === 1,\n        dot: binding.value == null\n      })\n    })));\n    el.$_pbadgeId = badge.getAttribute('id');\n    for (var modifier in binding.modifiers) {\n      !this.isUnstyled() && addClass(badge, 'p-badge-' + modifier);\n    }\n    if (binding.value != null) {\n      if (_typeof(binding.value) === 'object') el.$_badgeValue = binding.value.value;else el.$_badgeValue = binding.value;\n      badge.appendChild(document.createTextNode(el.$_badgeValue));\n      if (String(el.$_badgeValue).length === 1 && !this.isUnstyled()) {\n        !this.isUnstyled() && addClass(badge, 'p-badge-circle');\n      }\n    } else {\n      !this.isUnstyled() && addClass(badge, 'p-badge-dot');\n    }\n    el.setAttribute('data-pd-badge', true);\n    !this.isUnstyled() && addClass(el, 'p-overlay-badge');\n    el.setAttribute('data-p-overlay-badge', 'true');\n    el.appendChild(badge);\n    this.$el = badge;\n  },\n  updated: function updated(el, binding) {\n    !this.isUnstyled() && addClass(el, 'p-overlay-badge');\n    el.setAttribute('data-p-overlay-badge', 'true');\n    if (binding.oldValue !== binding.value) {\n      var badge = document.getElementById(el.$_pbadgeId);\n      if (_typeof(binding.value) === 'object') el.$_badgeValue = binding.value.value;else el.$_badgeValue = binding.value;\n      if (!this.isUnstyled()) {\n        if (el.$_badgeValue) {\n          if (hasClass(badge, 'p-badge-dot')) removeClass(badge, 'p-badge-dot');\n          if (el.$_badgeValue.length === 1) addClass(badge, 'p-badge-circle');else removeClass(badge, 'p-badge-circle');\n        } else if (!el.$_badgeValue && !hasClass(badge, 'p-badge-dot')) {\n          addClass(badge, 'p-badge-dot');\n        }\n      }\n      badge.innerHTML = '';\n      badge.appendChild(document.createTextNode(el.$_badgeValue));\n    }\n  }\n});\nexport { BadgeDirective as default };","map":{"version":3,"names":["BaseBadgeDirective","BaseDirective","extend","style","BadgeDirectiveStyle","BadgeDirective","mounted","el","binding","console","warn","id","UniqueComponentId","badge","createElement","_defineProperty","isUnstyled","cx","$attrSelector","ptm","context","_objectSpread","modifiers","nogutter","String","value","length","dot","$_pbadgeId","getAttribute","modifier","addClass","_typeof","$_badgeValue","appendChild","document","createTextNode","setAttribute","$el","updated","oldValue","getElementById","hasClass","removeClass","innerHTML"],"sources":["../../src/badgedirective/BaseBadgeDirective.js","../../src/badgedirective/BadgeDirective.js"],"sourcesContent":["import BaseDirective from '@primevue/core/basedirective';\nimport BadgeDirectiveStyle from 'primevue/badgedirective/style';\n\nconst BaseBadgeDirective = BaseDirective.extend({\n    style: BadgeDirectiveStyle\n});\n\nexport default BaseBadgeDirective;\n","import { addClass, createElement, hasClass, removeClass } from '@primeuix/utils/dom';\nimport { UniqueComponentId } from '@primevue/core/utils';\nimport BaseBadgeDirective from './BaseBadgeDirective';\n\nconst BadgeDirective = BaseBadgeDirective.extend('badge', {\n    mounted(el, binding) {\n        console.warn('Deprecated since v4. Use OverlayBadge component instead.');\n        const id = UniqueComponentId() + '_badge';\n\n        const badge = createElement('span', {\n            id,\n            class: !this.isUnstyled() && this.cx('root'),\n            [this.$attrSelector]: '',\n            'p-bind': this.ptm('root', {\n                context: {\n                    ...binding.modifiers,\n                    nogutter: String(binding.value).length === 1,\n                    dot: binding.value == null\n                }\n            })\n        });\n\n        el.$_pbadgeId = badge.getAttribute('id');\n\n        for (let modifier in binding.modifiers) {\n            !this.isUnstyled() && addClass(badge, 'p-badge-' + modifier);\n        }\n\n        if (binding.value != null) {\n            if (typeof binding.value === 'object') el.$_badgeValue = binding.value.value;\n            else el.$_badgeValue = binding.value;\n            badge.appendChild(document.createTextNode(el.$_badgeValue));\n\n            if (String(el.$_badgeValue).length === 1 && !this.isUnstyled()) {\n                !this.isUnstyled() && addClass(badge, 'p-badge-circle');\n            }\n        } else {\n            !this.isUnstyled() && addClass(badge, 'p-badge-dot');\n        }\n\n        el.setAttribute('data-pd-badge', true);\n        !this.isUnstyled() && addClass(el, 'p-overlay-badge');\n        el.setAttribute('data-p-overlay-badge', 'true');\n        el.appendChild(badge);\n\n        this.$el = badge;\n    },\n    updated(el, binding) {\n        !this.isUnstyled() && addClass(el, 'p-overlay-badge');\n        el.setAttribute('data-p-overlay-badge', 'true');\n\n        if (binding.oldValue !== binding.value) {\n            let badge = document.getElementById(el.$_pbadgeId);\n\n            if (typeof binding.value === 'object') el.$_badgeValue = binding.value.value;\n            else el.$_badgeValue = binding.value;\n\n            if (!this.isUnstyled()) {\n                if (el.$_badgeValue) {\n                    if (hasClass(badge, 'p-badge-dot')) removeClass(badge, 'p-badge-dot');\n\n                    if (el.$_badgeValue.length === 1) addClass(badge, 'p-badge-circle');\n                    else removeClass(badge, 'p-badge-circle');\n                } else if (!el.$_badgeValue && !hasClass(badge, 'p-badge-dot')) {\n                    addClass(badge, 'p-badge-dot');\n                }\n            }\n\n            badge.innerHTML = '';\n            badge.appendChild(document.createTextNode(el.$_badgeValue));\n        }\n    }\n});\n\nexport default BadgeDirective;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}