{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from \"axios\";\nimport { format } from \"date-fns\";\nexport default {\n  data() {\n    return {\n      username: \"\",\n      // Logged-in user's username\n      announcements: [],\n      // List of announcements\n      loading: true // Loading state\n    };\n  },\n  created() {\n    this.fetchUserData(); // Fetch logged-in user information\n    this.fetchAnnouncements(); // Fetch announcements\n  },\n  methods: {\n    async fetchUserData() {\n      try {\n        const response = await axios.get(\"http://127.0.0.1:8000/api/user/profile\", {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem(\"auth_token\")}`\n          }\n        });\n        this.username = response.data.username || \"User\"; // Fallback if no username is provided\n      } catch (error) {\n        console.error(\"Error fetching user data:\", error);\n      }\n    },\n    async fetchAnnouncements() {\n      try {\n        const response = await axios.get(\"http://127.0.0.1:8000/api/announcements\", {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem(\"auth_token\")}`\n          }\n        });\n        this.announcements = response.data.data || []; // Handle API response\n      } catch (error) {\n        console.error(\"Error fetching announcements:\", error);\n      } finally {\n        this.loading = false; // End loading state\n      }\n    },\n    formatDate(date) {\n      return format(new Date(date), \"MMMM d, yyyy h:mm a\"); // Format the date\n    },\n    navigateToCreateAnnouncement() {\n      this.$router.push({\n        name: \"CreateAnnouncementPage\"\n      }); // Navigate to the create announcement page\n    }\n  }\n};","map":{"version":3,"names":["axios","format","data","username","announcements","loading","created","fetchUserData","fetchAnnouncements","methods","response","get","headers","Authorization","localStorage","getItem","error","console","formatDate","date","Date","navigateToCreateAnnouncement","$router","push","name"],"sources":["C:\\Users\\darle\\solid-waste-management-system\\src\\components\\DashboardPage.vue"],"sourcesContent":["<template>\r\n  <div class=\"dashboard\">\r\n    <h1>Welcome, {{ username }}!</h1>\r\n\r\n    <div class=\"dashboard-actions\">\r\n      <Button \r\n        label=\"Create Announcement\" \r\n        icon=\"pi pi-plus\" \r\n        class=\"p-button-success\" \r\n        @click=\"AnnouncementPage\" \r\n      />\r\n    </div>\r\n\r\n    <div v-if=\"loading\" class=\"loading\">Loading announcements...</div>\r\n\r\n    <div v-else-if=\"announcements.length === 0\" class=\"no-announcements\">\r\n      <p>No announcements available. Be the first to create one!</p>\r\n    </div>\r\n\r\n    <div v-else class=\"announcement-feed\">\r\n      <h2>Recent Announcements</h2>\r\n      <ul>\r\n        <li v-for=\"announcement in announcements\" :key=\"announcement.id\" class=\"announcement-item\">\r\n          <h3>{{ announcement.subject }}</h3>\r\n          <p>{{ announcement.body }}</p>\r\n          <small>\r\n            Effective Date: {{ formatDate(announcement.effective_date) }} <br />\r\n            Posted by: {{ announcement.author || \"Unknown\" }} on {{ formatDate(announcement.created_at) }}\r\n          </small>\r\n          <div v-if=\"announcement.image_path\" class=\"announcement-image\">\r\n            <img :src=\"`http://127.0.0.1:8000/storage/${announcement.image_path}`\" alt=\"Announcement Image\" />\r\n          </div>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nimport { format } from \"date-fns\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      username: \"\", // Logged-in user's username\r\n      announcements: [], // List of announcements\r\n      loading: true, // Loading state\r\n    };\r\n  },\r\n  created() {\r\n    this.fetchUserData(); // Fetch logged-in user information\r\n    this.fetchAnnouncements(); // Fetch announcements\r\n  },\r\n  methods: {\r\n   async fetchUserData() {\r\n      try {\r\n        const response = await axios.get(\"http://127.0.0.1:8000/api/user/profile\", {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem(\"auth_token\")}`,\r\n          },\r\n        });\r\n        this.username = response.data.username || \"User\"; // Fallback if no username is provided\r\n      } catch (error) {\r\n        console.error(\"Error fetching user data:\", error);\r\n      }\r\n    },\r\n    async fetchAnnouncements() {\r\n      try {\r\n        const response = await axios.get(\"http://127.0.0.1:8000/api/announcements\", {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem(\"auth_token\")}`,\r\n          },\r\n        });\r\n        this.announcements = response.data.data || []; // Handle API response\r\n      } catch (error) {\r\n        console.error(\"Error fetching announcements:\", error);\r\n      } finally {\r\n        this.loading = false; // End loading state\r\n      }\r\n    },\r\n    formatDate(date) {\r\n      return format(new Date(date), \"MMMM d, yyyy h:mm a\"); // Format the date\r\n    },\r\n    navigateToCreateAnnouncement() {\r\n      this.$router.push({ name: \"CreateAnnouncementPage\" }); // Navigate to the create announcement page\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.dashboard {\r\n  padding: 20px;\r\n}\r\n\r\nh1 {\r\n  font-size: 2rem;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.dashboard-actions {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.loading,\r\n.no-announcements {\r\n  text-align: center;\r\n  font-size: 1.2rem;\r\n  color: #777;\r\n}\r\n\r\n.announcement-feed {\r\n  margin-top: 20px;\r\n}\r\n\r\n.announcement-item {\r\n  padding: 15px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 8px;\r\n  margin-bottom: 15px;\r\n  background: #f9f9f9;\r\n}\r\n\r\n.announcement-item h3 {\r\n  font-size: 1.5rem;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.announcement-item p {\r\n  font-size: 1.2rem;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.announcement-item small {\r\n  color: #555;\r\n  font-size: 0.9rem;\r\n}\r\n\r\n.announcement-image img {\r\n  max-width: 100%;\r\n  height: auto;\r\n  border-radius: 8px;\r\n  margin-top: 10px;\r\n}\r\n</style>\r\n"],"mappings":";AAuCA,OAAOA,KAAI,MAAO,OAAO;AACzB,SAASC,MAAK,QAAS,UAAU;AAEjC,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EAAE;MAAE;MACdC,aAAa,EAAE,EAAE;MAAE;MACnBC,OAAO,EAAE,IAAI,CAAE;IACjB,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,aAAa,CAAC,CAAC,EAAE;IACtB,IAAI,CAACC,kBAAkB,CAAC,CAAC,EAAE;EAC7B,CAAC;EACDC,OAAO,EAAE;IACR,MAAMF,aAAaA,CAAA,EAAG;MACnB,IAAI;QACF,MAAMG,QAAO,GAAI,MAAMV,KAAK,CAACW,GAAG,CAAC,wCAAwC,EAAE;UACzEC,OAAO,EAAE;YACPC,aAAa,EAAE,UAAUC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;UAC7D;QACF,CAAC,CAAC;QACF,IAAI,CAACZ,QAAO,GAAIO,QAAQ,CAACR,IAAI,CAACC,QAAO,IAAK,MAAM,EAAE;MACpD,EAAE,OAAOa,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACnD;IACF,CAAC;IACD,MAAMR,kBAAkBA,CAAA,EAAG;MACzB,IAAI;QACF,MAAME,QAAO,GAAI,MAAMV,KAAK,CAACW,GAAG,CAAC,yCAAyC,EAAE;UAC1EC,OAAO,EAAE;YACPC,aAAa,EAAE,UAAUC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;UAC7D;QACF,CAAC,CAAC;QACF,IAAI,CAACX,aAAY,GAAIM,QAAQ,CAACR,IAAI,CAACA,IAAG,IAAK,EAAE,EAAE;MACjD,EAAE,OAAOc,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACvD,UAAU;QACR,IAAI,CAACX,OAAM,GAAI,KAAK,EAAE;MACxB;IACF,CAAC;IACDa,UAAUA,CAACC,IAAI,EAAE;MACf,OAAOlB,MAAM,CAAC,IAAImB,IAAI,CAACD,IAAI,CAAC,EAAE,qBAAqB,CAAC,EAAE;IACxD,CAAC;IACDE,4BAA4BA,CAAA,EAAG;MAC7B,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC;QAAEC,IAAI,EAAE;MAAyB,CAAC,CAAC,EAAE;IACzD;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}