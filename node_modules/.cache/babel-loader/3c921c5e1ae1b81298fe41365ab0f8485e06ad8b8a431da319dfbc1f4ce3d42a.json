{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.for-each.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport \"core-js/modules/esnext.iterator.reduce.js\";\nimport { focus, findSingle, isTouchDevice } from '@primeuix/utils/dom';\nimport { resolve, isNotEmpty, isPrintableCharacter, isEmpty, findLastIndex } from '@primeuix/utils/object';\nimport { ZIndex } from '@primeuix/utils/zindex';\nimport { UniqueComponentId } from '@primevue/core/utils';\nimport BarsIcon from '@primevue/icons/bars';\nimport BaseComponent from '@primevue/core/basecomponent';\nimport MegaMenuStyle from 'primevue/megamenu/style';\nimport AngleDownIcon from '@primevue/icons/angledown';\nimport AngleRightIcon from '@primevue/icons/angleright';\nimport Ripple from 'primevue/ripple';\nimport { mergeProps, resolveComponent, resolveDirective, openBlock, createElementBlock, toDisplayString, createCommentVNode, Fragment, renderList, createElementVNode, withDirectives, createBlock, resolveDynamicComponent, normalizeClass, normalizeStyle, renderSlot, createVNode, normalizeProps, guardReactiveProps } from 'vue';\nvar script$2 = {\n  name: 'BaseMegaMenu',\n  \"extends\": BaseComponent,\n  props: {\n    model: {\n      type: Array,\n      \"default\": null\n    },\n    orientation: {\n      type: String,\n      \"default\": 'horizontal'\n    },\n    breakpoint: {\n      type: String,\n      \"default\": '960px'\n    },\n    disabled: {\n      type: Boolean,\n      \"default\": false\n    },\n    tabindex: {\n      type: Number,\n      \"default\": 0\n    },\n    scrollHeight: {\n      type: String,\n      \"default\": '20rem'\n    },\n    ariaLabelledby: {\n      type: String,\n      \"default\": null\n    },\n    ariaLabel: {\n      type: String,\n      \"default\": null\n    }\n  },\n  style: MegaMenuStyle,\n  provide: function provide() {\n    return {\n      $pcMegaMenu: this,\n      $parentInstance: this\n    };\n  }\n};\nvar script$1 = {\n  name: 'MegaMenuSub',\n  hostName: 'MegaMenu',\n  \"extends\": BaseComponent,\n  emits: ['item-click', 'item-mouseenter'],\n  props: {\n    menuId: {\n      type: String,\n      \"default\": null\n    },\n    focusedItemId: {\n      type: String,\n      \"default\": null\n    },\n    horizontal: {\n      type: Boolean,\n      \"default\": false\n    },\n    submenu: {\n      type: Object,\n      \"default\": null\n    },\n    mobileActive: {\n      type: Boolean,\n      \"default\": false\n    },\n    items: {\n      type: Array,\n      \"default\": null\n    },\n    level: {\n      type: Number,\n      \"default\": 0\n    },\n    templates: {\n      type: Object,\n      \"default\": null\n    },\n    activeItem: {\n      type: Object,\n      \"default\": null\n    },\n    tabindex: {\n      type: Number,\n      \"default\": 0\n    }\n  },\n  methods: {\n    getSubListId: function getSubListId(processedItem) {\n      return \"\".concat(this.getItemId(processedItem), \"_list\");\n    },\n    getSubListKey: function getSubListKey(processedItem) {\n      return this.getSubListId(processedItem);\n    },\n    getItemId: function getItemId(processedItem) {\n      return \"\".concat(this.menuId, \"_\").concat(processedItem.key);\n    },\n    getItemKey: function getItemKey(processedItem) {\n      return this.getItemId(processedItem);\n    },\n    getItemProp: function getItemProp(processedItem, name, params) {\n      return processedItem && processedItem.item ? resolve(processedItem.item[name], params) : undefined;\n    },\n    getItemLabel: function getItemLabel(processedItem) {\n      return this.getItemProp(processedItem, 'label');\n    },\n    getPTOptions: function getPTOptions(processedItem, index, key) {\n      return this.ptm(key, {\n        context: {\n          item: processedItem.item,\n          index: index,\n          active: this.isItemActive(processedItem),\n          focused: this.isItemFocused(processedItem),\n          disabled: this.isItemDisabled(processedItem)\n        }\n      });\n    },\n    isItemActive: function isItemActive(processedItem) {\n      return isNotEmpty(this.activeItem) ? this.activeItem.key === processedItem.key : false;\n    },\n    isItemVisible: function isItemVisible(processedItem) {\n      return this.getItemProp(processedItem, 'visible') !== false;\n    },\n    isItemDisabled: function isItemDisabled(processedItem) {\n      return this.getItemProp(processedItem, 'disabled');\n    },\n    isItemFocused: function isItemFocused(processedItem) {\n      return this.focusedItemId === this.getItemId(processedItem);\n    },\n    isItemGroup: function isItemGroup(processedItem) {\n      return isNotEmpty(processedItem.items);\n    },\n    onItemClick: function onItemClick(event, processedItem) {\n      this.getItemProp(processedItem, 'command', {\n        originalEvent: event,\n        item: processedItem.item\n      });\n      this.$emit('item-click', {\n        originalEvent: event,\n        processedItem: processedItem,\n        isFocus: true\n      });\n    },\n    onItemMouseEnter: function onItemMouseEnter(event, processedItem) {\n      this.$emit('item-mouseenter', {\n        originalEvent: event,\n        processedItem: processedItem\n      });\n    },\n    getAriaSetSize: function getAriaSetSize() {\n      var _this = this;\n      return this.items.filter(function (processedItem) {\n        return _this.isItemVisible(processedItem) && !_this.getItemProp(processedItem, 'separator');\n      }).length;\n    },\n    getAriaPosInset: function getAriaPosInset(index) {\n      var _this2 = this;\n      return index - this.items.slice(0, index).filter(function (processedItem) {\n        return _this2.isItemVisible(processedItem) && _this2.getItemProp(processedItem, 'separator');\n      }).length + 1;\n    },\n    getMenuItemProps: function getMenuItemProps(processedItem, index) {\n      return {\n        action: mergeProps({\n          \"class\": this.cx('itemLink'),\n          tabindex: -1\n        }, this.getPTOptions(processedItem, index, 'itemLink')),\n        icon: mergeProps({\n          \"class\": [this.cx('itemIcon'), this.getItemProp(processedItem, 'icon')]\n        }, this.getPTOptions(processedItem, index, 'itemIcon')),\n        label: mergeProps({\n          \"class\": this.cx('label')\n        }, this.getPTOptions(processedItem, index, 'label')),\n        submenuicon: mergeProps({\n          \"class\": this.cx('submenuIcon')\n        }, this.getPTOptions(processedItem, index, 'submenuIcon'))\n      };\n    }\n  },\n  components: {\n    AngleRightIcon: AngleRightIcon,\n    AngleDownIcon: AngleDownIcon\n  },\n  directives: {\n    ripple: Ripple\n  }\n};\nvar _hoisted_1$1 = [\"tabindex\"];\nvar _hoisted_2$1 = [\"id\", \"aria-label\", \"aria-disabled\", \"aria-expanded\", \"aria-haspopup\", \"aria-level\", \"aria-setsize\", \"aria-posinset\", \"data-p-active\", \"data-p-focused\", \"data-p-disabled\"];\nvar _hoisted_3 = [\"onClick\", \"onMouseenter\"];\nvar _hoisted_4 = [\"href\", \"target\"];\nvar _hoisted_5 = [\"id\"];\nfunction render$1(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_MegaMenuSub = resolveComponent(\"MegaMenuSub\", true);\n  var _directive_ripple = resolveDirective(\"ripple\");\n  return openBlock(), createElementBlock(\"ul\", mergeProps({\n    \"class\": $props.level === 0 ? _ctx.cx('rootList') : _ctx.cx('submenu'),\n    tabindex: $props.tabindex\n  }, $props.level === 0 ? _ctx.ptm('rootList') : _ctx.ptm('submenu')), [$props.submenu ? (openBlock(), createElementBlock(\"li\", mergeProps({\n    key: 0,\n    \"class\": [_ctx.cx('submenuLabel', {\n      submenu: $props.submenu\n    }), $options.getItemProp($props.submenu, 'class')],\n    style: $options.getItemProp($props.submenu, 'style'),\n    role: \"presentation\"\n  }, _ctx.ptm('submenuLabel')), toDisplayString($options.getItemLabel($props.submenu)), 17)) : createCommentVNode(\"\", true), (openBlock(true), createElementBlock(Fragment, null, renderList($props.items, function (processedItem, index) {\n    return openBlock(), createElementBlock(Fragment, {\n      key: $options.getItemKey(processedItem)\n    }, [$options.isItemVisible(processedItem) && !$options.getItemProp(processedItem, 'separator') ? (openBlock(), createElementBlock(\"li\", mergeProps({\n      key: 0,\n      id: $options.getItemId(processedItem),\n      style: $options.getItemProp(processedItem, 'style'),\n      \"class\": [_ctx.cx('item', {\n        processedItem: processedItem\n      }), $options.getItemProp(processedItem, 'class')],\n      role: \"menuitem\",\n      \"aria-label\": $options.getItemLabel(processedItem),\n      \"aria-disabled\": $options.isItemDisabled(processedItem) || undefined,\n      \"aria-expanded\": $options.isItemGroup(processedItem) ? $options.isItemActive(processedItem) : undefined,\n      \"aria-haspopup\": $options.isItemGroup(processedItem) && !$options.getItemProp(processedItem, 'to') ? 'menu' : undefined,\n      \"aria-level\": $props.level + 1,\n      \"aria-setsize\": $options.getAriaSetSize(),\n      \"aria-posinset\": $options.getAriaPosInset(index),\n      ref_for: true\n    }, $options.getPTOptions(processedItem, index, 'item'), {\n      \"data-p-active\": $options.isItemActive(processedItem),\n      \"data-p-focused\": $options.isItemFocused(processedItem),\n      \"data-p-disabled\": $options.isItemDisabled(processedItem)\n    }), [createElementVNode(\"div\", mergeProps({\n      \"class\": _ctx.cx('itemContent'),\n      onClick: function onClick($event) {\n        return $options.onItemClick($event, processedItem);\n      },\n      onMouseenter: function onMouseenter($event) {\n        return $options.onItemMouseEnter($event, processedItem);\n      },\n      ref_for: true\n    }, $options.getPTOptions(processedItem, index, 'itemContent')), [!$props.templates.item ? withDirectives((openBlock(), createElementBlock(\"a\", mergeProps({\n      key: 0,\n      href: $options.getItemProp(processedItem, 'url'),\n      \"class\": _ctx.cx('itemLink'),\n      target: $options.getItemProp(processedItem, 'target'),\n      tabindex: \"-1\",\n      ref_for: true\n    }, $options.getPTOptions(processedItem, index, 'itemLink')), [$props.templates.itemicon ? (openBlock(), createBlock(resolveDynamicComponent($props.templates.itemicon), {\n      key: 0,\n      item: processedItem.item,\n      \"class\": normalizeClass(_ctx.cx('itemIcon'))\n    }, null, 8, [\"item\", \"class\"])) : $options.getItemProp(processedItem, 'icon') ? (openBlock(), createElementBlock(\"span\", mergeProps({\n      key: 1,\n      \"class\": [_ctx.cx('itemIcon'), $options.getItemProp(processedItem, 'icon')],\n      ref_for: true\n    }, $options.getPTOptions(processedItem, index, 'itemIcon')), null, 16)) : createCommentVNode(\"\", true), createElementVNode(\"span\", mergeProps({\n      \"class\": _ctx.cx('itemLabel'),\n      ref_for: true\n    }, $options.getPTOptions(processedItem, index, 'itemLabel')), toDisplayString($options.getItemLabel(processedItem)), 17), $options.isItemGroup(processedItem) ? (openBlock(), createElementBlock(Fragment, {\n      key: 2\n    }, [$props.templates.submenuicon ? (openBlock(), createBlock(resolveDynamicComponent($props.templates.submenuicon), mergeProps({\n      key: 0,\n      active: $options.isItemActive(processedItem),\n      \"class\": _ctx.cx('submenuIcon'),\n      ref_for: true\n    }, $options.getPTOptions(processedItem, index, 'submenuIcon')), null, 16, [\"active\", \"class\"])) : (openBlock(), createBlock(resolveDynamicComponent($props.horizontal || $props.mobileActive ? 'AngleDownIcon' : 'AngleRightIcon'), mergeProps({\n      key: 1,\n      \"class\": _ctx.cx('submenuIcon'),\n      ref_for: true\n    }, $options.getPTOptions(processedItem, index, 'submenuIcon')), null, 16, [\"class\"]))], 64)) : createCommentVNode(\"\", true)], 16, _hoisted_4)), [[_directive_ripple]]) : (openBlock(), createBlock(resolveDynamicComponent($props.templates.item), {\n      key: 1,\n      item: processedItem.item,\n      hasSubmenu: $options.isItemGroup(processedItem),\n      label: $options.getItemLabel(processedItem),\n      props: $options.getMenuItemProps(processedItem, index)\n    }, null, 8, [\"item\", \"hasSubmenu\", \"label\", \"props\"]))], 16, _hoisted_3), $options.isItemVisible(processedItem) && $options.isItemGroup(processedItem) ? (openBlock(), createElementBlock(\"div\", mergeProps({\n      key: 0,\n      \"class\": _ctx.cx('overlay'),\n      ref_for: true\n    }, _ctx.ptm('overlay')), [createElementVNode(\"div\", mergeProps({\n      \"class\": _ctx.cx('grid'),\n      ref_for: true\n    }, _ctx.ptm('grid')), [(openBlock(true), createElementBlock(Fragment, null, renderList(processedItem.items, function (col) {\n      return openBlock(), createElementBlock(\"div\", mergeProps({\n        key: $options.getItemKey(col),\n        \"class\": _ctx.cx('column', {\n          processedItem: processedItem\n        }),\n        ref_for: true\n      }, _ctx.ptm('column')), [(openBlock(true), createElementBlock(Fragment, null, renderList(col, function (submenu) {\n        return openBlock(), createBlock(_component_MegaMenuSub, {\n          key: $options.getSubListKey(submenu),\n          id: $options.getSubListId(submenu),\n          style: normalizeStyle(_ctx.sx('submenu', true, {\n            processedItem: processedItem\n          })),\n          role: \"menu\",\n          menuId: $props.menuId,\n          focusedItemId: $props.focusedItemId,\n          submenu: submenu,\n          items: submenu.items,\n          templates: $props.templates,\n          level: $props.level + 1,\n          mobileActive: $props.mobileActive,\n          pt: _ctx.pt,\n          unstyled: _ctx.unstyled,\n          onItemClick: _cache[0] || (_cache[0] = function ($event) {\n            return _ctx.$emit('item-click', $event);\n          }),\n          onItemMouseenter: _cache[1] || (_cache[1] = function ($event) {\n            return _ctx.$emit('item-mouseenter', $event);\n          })\n        }, null, 8, [\"id\", \"style\", \"menuId\", \"focusedItemId\", \"submenu\", \"items\", \"templates\", \"level\", \"mobileActive\", \"pt\", \"unstyled\"]);\n      }), 128))], 16);\n    }), 128))], 16)], 16)) : createCommentVNode(\"\", true)], 16, _hoisted_2$1)) : createCommentVNode(\"\", true), $options.isItemVisible(processedItem) && $options.getItemProp(processedItem, 'separator') ? (openBlock(), createElementBlock(\"li\", mergeProps({\n      key: 1,\n      id: $options.getItemId(processedItem),\n      \"class\": [_ctx.cx('separator'), $options.getItemProp(processedItem, 'class')],\n      style: $options.getItemProp(processedItem, 'style'),\n      role: \"separator\",\n      ref_for: true\n    }, _ctx.ptm('separator')), null, 16, _hoisted_5)) : createCommentVNode(\"\", true)], 64);\n  }), 128))], 16, _hoisted_1$1);\n}\nscript$1.render = render$1;\nvar script = {\n  name: 'MegaMenu',\n  \"extends\": script$2,\n  inheritAttrs: false,\n  emits: ['focus', 'blur'],\n  outsideClickListener: null,\n  resizeListener: null,\n  matchMediaListener: null,\n  container: null,\n  menubar: null,\n  searchTimeout: null,\n  searchValue: null,\n  data: function data() {\n    return {\n      id: this.$attrs.id,\n      mobileActive: false,\n      focused: false,\n      focusedItemInfo: {\n        index: -1,\n        key: '',\n        parentKey: ''\n      },\n      activeItem: null,\n      dirty: false,\n      query: null,\n      queryMatches: false\n    };\n  },\n  watch: {\n    '$attrs.id': function $attrsId(newValue) {\n      this.id = newValue || UniqueComponentId();\n    },\n    activeItem: function activeItem(newItem) {\n      if (isNotEmpty(newItem)) {\n        this.bindOutsideClickListener();\n        this.bindResizeListener();\n      } else {\n        this.unbindOutsideClickListener();\n        this.unbindResizeListener();\n      }\n    }\n  },\n  mounted: function mounted() {\n    this.id = this.id || UniqueComponentId();\n    this.bindMatchMediaListener();\n  },\n  beforeUnmount: function beforeUnmount() {\n    this.mobileActive = false;\n    this.unbindOutsideClickListener();\n    this.unbindResizeListener();\n    this.unbindMatchMediaListener();\n  },\n  methods: {\n    getItemProp: function getItemProp(item, name) {\n      return item ? resolve(item[name]) : undefined;\n    },\n    getItemLabel: function getItemLabel(item) {\n      return this.getItemProp(item, 'label');\n    },\n    isItemDisabled: function isItemDisabled(item) {\n      return this.getItemProp(item, 'disabled');\n    },\n    isItemVisible: function isItemVisible(item) {\n      return this.getItemProp(item, 'visible') !== false;\n    },\n    isItemGroup: function isItemGroup(item) {\n      return isNotEmpty(this.getItemProp(item, 'items'));\n    },\n    isItemSeparator: function isItemSeparator(item) {\n      return this.getItemProp(item, 'separator');\n    },\n    getProccessedItemLabel: function getProccessedItemLabel(processedItem) {\n      return processedItem ? this.getItemLabel(processedItem.item) : undefined;\n    },\n    isProccessedItemGroup: function isProccessedItemGroup(processedItem) {\n      return processedItem && isNotEmpty(processedItem.items);\n    },\n    toggle: function toggle(event) {\n      var _this = this;\n      if (this.mobileActive) {\n        this.mobileActive = false;\n        ZIndex.clear(this.menubar);\n        this.hide();\n      } else {\n        this.mobileActive = true;\n        ZIndex.set('menu', this.menubar, this.$primevue.config.zIndex.menu);\n        setTimeout(function () {\n          _this.show();\n        }, 1);\n      }\n      this.bindOutsideClickListener();\n      event.preventDefault();\n    },\n    show: function show() {\n      this.focusedItemInfo = {\n        index: this.findFirstFocusedItemIndex(),\n        level: 0,\n        parentKey: ''\n      };\n      focus(this.menubar);\n    },\n    hide: function hide(event, isFocus) {\n      var _this2 = this;\n      if (this.mobileActive) {\n        this.mobileActive = false;\n        setTimeout(function () {\n          focus(_this2.$refs.menubutton, {\n            preventScroll: true\n          });\n        }, 1);\n      }\n      this.activeItem = null;\n      this.focusedItemInfo = {\n        index: -1,\n        key: '',\n        parentKey: ''\n      };\n      isFocus && focus(this.menubar);\n      this.dirty = false;\n    },\n    onFocus: function onFocus(event) {\n      this.focused = true;\n      if (this.focusedItemInfo.index === -1) {\n        var index = this.findFirstFocusedItemIndex();\n        var processedItem = this.findVisibleItem(index);\n        this.focusedItemInfo = {\n          index: index,\n          key: processedItem.key,\n          parentKey: processedItem.parentKey\n        };\n      }\n      this.$emit('focus', event);\n    },\n    onBlur: function onBlur(event) {\n      this.focused = false;\n      this.focusedItemInfo = {\n        index: -1,\n        key: '',\n        parentKey: ''\n      };\n      this.searchValue = '';\n      this.dirty = false;\n      this.$emit('blur', event);\n    },\n    onKeyDown: function onKeyDown(event) {\n      if (this.disabled) {\n        event.preventDefault();\n        return;\n      }\n      var metaKey = event.metaKey || event.ctrlKey;\n      switch (event.code) {\n        case 'ArrowDown':\n          this.onArrowDownKey(event);\n          break;\n        case 'ArrowUp':\n          this.onArrowUpKey(event);\n          break;\n        case 'ArrowLeft':\n          this.onArrowLeftKey(event);\n          break;\n        case 'ArrowRight':\n          this.onArrowRightKey(event);\n          break;\n        case 'Home':\n          this.onHomeKey(event);\n          break;\n        case 'End':\n          this.onEndKey(event);\n          break;\n        case 'Space':\n          this.onSpaceKey(event);\n          break;\n        case 'Enter':\n        case 'NumpadEnter':\n          this.onEnterKey(event);\n          break;\n        case 'Escape':\n          this.onEscapeKey(event);\n          break;\n        case 'Tab':\n          this.onTabKey(event);\n          break;\n        case 'PageDown':\n        case 'PageUp':\n        case 'Backspace':\n        case 'ShiftLeft':\n        case 'ShiftRight':\n          //NOOP\n          break;\n        default:\n          if (!metaKey && isPrintableCharacter(event.key)) {\n            this.searchItems(event, event.key);\n          }\n          break;\n      }\n    },\n    onItemChange: function onItemChange(event) {\n      var processedItem = event.processedItem,\n        isFocus = event.isFocus;\n      if (isEmpty(processedItem)) return;\n      var index = processedItem.index,\n        key = processedItem.key,\n        parentKey = processedItem.parentKey,\n        items = processedItem.items;\n      var grouped = isNotEmpty(items);\n      grouped && (this.activeItem = processedItem);\n      this.focusedItemInfo = {\n        index: index,\n        key: key,\n        parentKey: parentKey\n      };\n      grouped && (this.dirty = true);\n      isFocus && focus(this.menubar);\n    },\n    onItemClick: function onItemClick(event) {\n      var originalEvent = event.originalEvent,\n        processedItem = event.processedItem;\n      var grouped = this.isProccessedItemGroup(processedItem);\n      var root = isEmpty(processedItem.parent);\n      var selected = this.isSelected(processedItem);\n      if (selected) {\n        var index = processedItem.index,\n          key = processedItem.key,\n          parentKey = processedItem.parentKey;\n        this.activeItem = null;\n        this.focusedItemInfo = {\n          index: index,\n          key: key,\n          parentKey: parentKey\n        };\n        this.dirty = !root;\n        if (!this.mobileActive) {\n          focus(this.menubar, {\n            preventScroll: true\n          });\n        }\n      } else {\n        if (grouped) {\n          this.onItemChange(event);\n        } else {\n          this.hide(originalEvent);\n        }\n      }\n    },\n    onItemMouseEnter: function onItemMouseEnter(event) {\n      if (!this.mobileActive && this.dirty) {\n        this.onItemChange(event);\n      }\n    },\n    menuButtonClick: function menuButtonClick(event) {\n      this.toggle(event);\n    },\n    menuButtonKeydown: function menuButtonKeydown(event) {\n      (event.code === 'Enter' || event.code === 'NumpadEnter' || event.code === 'Space') && this.menuButtonClick(event);\n    },\n    onArrowDownKey: function onArrowDownKey(event) {\n      if (this.horizontal) {\n        if (isNotEmpty(this.activeItem) && this.activeItem.key === this.focusedItemInfo.key) {\n          this.focusedItemInfo = {\n            index: -1,\n            key: '',\n            parentKey: this.activeItem.key\n          };\n        } else {\n          var processedItem = this.findVisibleItem(this.focusedItemInfo.index);\n          var grouped = this.isProccessedItemGroup(processedItem);\n          if (grouped) {\n            this.onItemChange({\n              originalEvent: event,\n              processedItem: processedItem\n            });\n            this.focusedItemInfo = {\n              index: -1,\n              key: processedItem.key,\n              parentKey: processedItem.parentKey\n            };\n            this.searchValue = '';\n          }\n        }\n      }\n      var itemIndex = this.focusedItemInfo.index !== -1 ? this.findNextItemIndex(this.focusedItemInfo.index) : this.findFirstFocusedItemIndex();\n      this.changeFocusedItemInfo(event, itemIndex);\n      event.preventDefault();\n    },\n    onArrowUpKey: function onArrowUpKey(event) {\n      if (event.altKey && this.horizontal) {\n        if (this.focusedItemInfo.index !== -1) {\n          var processedItem = this.findVisibleItem(this.focusedItemInfo.index);\n          var grouped = this.isProccessedItemGroup(processedItem);\n          if (!grouped && isNotEmpty(this.activeItem)) {\n            if (this.focusedItemInfo.index === 0) {\n              this.focusedItemInfo = {\n                index: this.activeItem.index,\n                key: this.activeItem.key,\n                parentKey: this.activeItem.parentKey\n              };\n              this.activeItem = null;\n            } else {\n              this.changeFocusedItemInfo(event, this.findFirstItemIndex());\n            }\n          }\n        }\n        event.preventDefault();\n      } else {\n        var itemIndex = this.focusedItemInfo.index !== -1 ? this.findPrevItemIndex(this.focusedItemInfo.index) : this.findLastFocusedItemIndex();\n        this.changeFocusedItemInfo(event, itemIndex);\n        event.preventDefault();\n      }\n    },\n    onArrowLeftKey: function onArrowLeftKey(event) {\n      var processedItem = this.findVisibleItem(this.focusedItemInfo.index);\n      var grouped = this.isProccessedItemGroup(processedItem);\n      if (grouped) {\n        if (this.horizontal) {\n          var itemIndex = this.focusedItemInfo.index !== -1 ? this.findPrevItemIndex(this.focusedItemInfo.index) : this.findLastFocusedItemIndex();\n          this.changeFocusedItemInfo(event, itemIndex);\n        }\n      } else {\n        if (this.vertical && isNotEmpty(this.activeItem)) {\n          if (processedItem.columnIndex === 0) {\n            this.focusedItemInfo = {\n              index: this.activeItem.index,\n              key: this.activeItem.key,\n              parentKey: this.activeItem.parentKey\n            };\n            this.activeItem = null;\n          }\n        }\n        var columnIndex = processedItem.columnIndex - 1;\n        var _itemIndex = this.visibleItems.findIndex(function (item) {\n          return item.columnIndex === columnIndex;\n        });\n        _itemIndex !== -1 && this.changeFocusedItemInfo(event, _itemIndex);\n      }\n      event.preventDefault();\n    },\n    onArrowRightKey: function onArrowRightKey(event) {\n      var processedItem = this.findVisibleItem(this.focusedItemInfo.index);\n      var grouped = this.isProccessedItemGroup(processedItem);\n      if (grouped) {\n        if (this.vertical) {\n          if (isNotEmpty(this.activeItem) && this.activeItem.key === processedItem.key) {\n            this.focusedItemInfo = {\n              index: -1,\n              key: '',\n              parentKey: this.activeItem.key\n            };\n          } else {\n            var _processedItem = this.findVisibleItem(this.focusedItemInfo.index);\n            var _grouped = this.isProccessedItemGroup(_processedItem);\n            if (_grouped) {\n              this.onItemChange({\n                originalEvent: event,\n                processedItem: _processedItem\n              });\n              this.focusedItemInfo = {\n                index: -1,\n                key: _processedItem.key,\n                parentKey: _processedItem.parentKey\n              };\n              this.searchValue = '';\n            }\n          }\n        }\n        var itemIndex = this.focusedItemInfo.index !== -1 ? this.findNextItemIndex(this.focusedItemInfo.index) : this.findFirstFocusedItemIndex();\n        this.changeFocusedItemInfo(event, itemIndex);\n      } else {\n        var columnIndex = processedItem.columnIndex + 1;\n        var _itemIndex2 = this.visibleItems.findIndex(function (item) {\n          return item.columnIndex === columnIndex;\n        });\n        _itemIndex2 !== -1 && this.changeFocusedItemInfo(event, _itemIndex2);\n      }\n      event.preventDefault();\n    },\n    onHomeKey: function onHomeKey(event) {\n      this.changeFocusedItemInfo(event, this.findFirstItemIndex());\n      event.preventDefault();\n    },\n    onEndKey: function onEndKey(event) {\n      this.changeFocusedItemInfo(event, this.findLastItemIndex());\n      event.preventDefault();\n    },\n    onEnterKey: function onEnterKey(event) {\n      if (this.focusedItemInfo.index !== -1) {\n        var element = findSingle(this.menubar, \"li[id=\\\"\".concat(\"\".concat(this.focusedItemId), \"\\\"]\"));\n        var anchorElement = element && findSingle(element, 'a[data-pc-section=\"itemlink\"]');\n        anchorElement ? anchorElement.click() : element && element.click();\n        var processedItem = this.visibleItems[this.focusedItemInfo.index];\n        var grouped = this.isProccessedItemGroup(processedItem);\n        !grouped && this.changeFocusedItemInfo(event, this.findFirstFocusedItemIndex());\n      }\n      event.preventDefault();\n    },\n    onSpaceKey: function onSpaceKey(event) {\n      this.onEnterKey(event);\n    },\n    onEscapeKey: function onEscapeKey(event) {\n      if (isNotEmpty(this.activeItem)) {\n        this.focusedItemInfo = {\n          index: this.activeItem.index,\n          key: this.activeItem.key\n        };\n        this.activeItem = null;\n      }\n      event.preventDefault();\n    },\n    onTabKey: function onTabKey(event) {\n      if (this.focusedItemInfo.index !== -1) {\n        var processedItem = this.findVisibleItem(this.focusedItemInfo.index);\n        var grouped = this.isProccessedItemGroup(processedItem);\n        !grouped && this.onItemChange({\n          originalEvent: event,\n          processedItem: processedItem\n        });\n      }\n      this.hide();\n    },\n    bindOutsideClickListener: function bindOutsideClickListener() {\n      var _this3 = this;\n      if (!this.outsideClickListener) {\n        this.outsideClickListener = function (event) {\n          var isOutsideContainer = _this3.container && !_this3.container.contains(event.target);\n          var isOutsideTarget = !(_this3.target && (_this3.target === event.target || _this3.target.contains(event.target)));\n          if (isOutsideContainer && isOutsideTarget) {\n            _this3.hide();\n          }\n        };\n        document.addEventListener('click', this.outsideClickListener);\n      }\n    },\n    unbindOutsideClickListener: function unbindOutsideClickListener() {\n      if (this.outsideClickListener) {\n        document.removeEventListener('click', this.outsideClickListener);\n        this.outsideClickListener = null;\n      }\n    },\n    bindResizeListener: function bindResizeListener() {\n      var _this4 = this;\n      if (!this.resizeListener) {\n        this.resizeListener = function (event) {\n          if (!isTouchDevice()) {\n            _this4.hide(event, true);\n          }\n          _this4.mobileActive = false;\n        };\n        window.addEventListener('resize', this.resizeListener);\n      }\n    },\n    unbindResizeListener: function unbindResizeListener() {\n      if (this.resizeListener) {\n        window.removeEventListener('resize', this.resizeListener);\n        this.resizeListener = null;\n      }\n    },\n    bindMatchMediaListener: function bindMatchMediaListener() {\n      var _this5 = this;\n      if (!this.matchMediaListener) {\n        var query = matchMedia(\"(max-width: \".concat(this.breakpoint, \")\"));\n        this.query = query;\n        this.queryMatches = query.matches;\n        this.matchMediaListener = function () {\n          _this5.queryMatches = query.matches;\n          _this5.mobileActive = false;\n        };\n        this.query.addEventListener('change', this.matchMediaListener);\n      }\n    },\n    unbindMatchMediaListener: function unbindMatchMediaListener() {\n      if (this.matchMediaListener) {\n        this.query.removeEventListener('change', this.matchMediaListener);\n        this.matchMediaListener = null;\n      }\n    },\n    isItemMatched: function isItemMatched(processedItem) {\n      var _this$getProccessedIt;\n      return this.isValidItem(processedItem) && ((_this$getProccessedIt = this.getProccessedItemLabel(processedItem)) === null || _this$getProccessedIt === void 0 ? void 0 : _this$getProccessedIt.toLocaleLowerCase().startsWith(this.searchValue.toLocaleLowerCase()));\n    },\n    isValidItem: function isValidItem(processedItem) {\n      return !!processedItem && !this.isItemDisabled(processedItem.item) && !this.isItemSeparator(processedItem.item) && this.isItemVisible(processedItem.item);\n    },\n    isValidSelectedItem: function isValidSelectedItem(processedItem) {\n      return this.isValidItem(processedItem) && this.isSelected(processedItem);\n    },\n    isSelected: function isSelected(processedItem) {\n      return isNotEmpty(this.activeItem) ? this.activeItem.key === processedItem.key : false;\n    },\n    findFirstItemIndex: function findFirstItemIndex() {\n      var _this6 = this;\n      return this.visibleItems.findIndex(function (processedItem) {\n        return _this6.isValidItem(processedItem);\n      });\n    },\n    findLastItemIndex: function findLastItemIndex() {\n      var _this7 = this;\n      return findLastIndex(this.visibleItems, function (processedItem) {\n        return _this7.isValidItem(processedItem);\n      });\n    },\n    findNextItemIndex: function findNextItemIndex(index) {\n      var _this8 = this;\n      var matchedItemIndex = index < this.visibleItems.length - 1 ? this.visibleItems.slice(index + 1).findIndex(function (processedItem) {\n        return _this8.isValidItem(processedItem);\n      }) : -1;\n      return matchedItemIndex > -1 ? matchedItemIndex + index + 1 : index;\n    },\n    findPrevItemIndex: function findPrevItemIndex(index) {\n      var _this9 = this;\n      var matchedItemIndex = index > 0 ? findLastIndex(this.visibleItems.slice(0, index), function (processedItem) {\n        return _this9.isValidItem(processedItem);\n      }) : -1;\n      return matchedItemIndex > -1 ? matchedItemIndex : index;\n    },\n    findSelectedItemIndex: function findSelectedItemIndex() {\n      var _this10 = this;\n      return this.visibleItems.findIndex(function (processedItem) {\n        return _this10.isValidSelectedItem(processedItem);\n      });\n    },\n    findFirstFocusedItemIndex: function findFirstFocusedItemIndex() {\n      var selectedIndex = this.findSelectedItemIndex();\n      return selectedIndex < 0 ? this.findFirstItemIndex() : selectedIndex;\n    },\n    findLastFocusedItemIndex: function findLastFocusedItemIndex() {\n      var selectedIndex = this.findSelectedItemIndex();\n      return selectedIndex < 0 ? this.findLastItemIndex() : selectedIndex;\n    },\n    findVisibleItem: function findVisibleItem(index) {\n      return isNotEmpty(this.visibleItems) ? this.visibleItems[index] : null;\n    },\n    searchItems: function searchItems(event, _char) {\n      var _this11 = this;\n      this.searchValue = (this.searchValue || '') + _char;\n      var itemIndex = -1;\n      var matched = false;\n      if (this.focusedItemInfo.index !== -1) {\n        itemIndex = this.visibleItems.slice(this.focusedItemInfo.index).findIndex(function (processedItem) {\n          return _this11.isItemMatched(processedItem);\n        });\n        itemIndex = itemIndex === -1 ? this.visibleItems.slice(0, this.focusedItemInfo.index).findIndex(function (processedItem) {\n          return _this11.isItemMatched(processedItem);\n        }) : itemIndex + this.focusedItemInfo.index;\n      } else {\n        itemIndex = this.visibleItems.findIndex(function (processedItem) {\n          return _this11.isItemMatched(processedItem);\n        });\n      }\n      if (itemIndex !== -1) {\n        matched = true;\n      }\n      if (itemIndex === -1 && this.focusedItemInfo.index === -1) {\n        itemIndex = this.findFirstFocusedItemIndex();\n      }\n      if (itemIndex !== -1) {\n        this.changeFocusedItemInfo(event, itemIndex);\n      }\n      if (this.searchTimeout) {\n        clearTimeout(this.searchTimeout);\n      }\n      this.searchTimeout = setTimeout(function () {\n        _this11.searchValue = '';\n        _this11.searchTimeout = null;\n      }, 500);\n      return matched;\n    },\n    changeFocusedItemInfo: function changeFocusedItemInfo(event, index) {\n      var processedItem = this.findVisibleItem(index);\n      this.focusedItemInfo.index = index;\n      this.focusedItemInfo.key = isNotEmpty(processedItem) ? processedItem.key : '';\n      this.scrollInView();\n    },\n    scrollInView: function scrollInView() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : -1;\n      var id = index !== -1 ? \"\".concat(this.id, \"_\").concat(index) : this.focusedItemId;\n      var element;\n      if (id === null && this.queryMatches) {\n        element = this.$refs.menubutton;\n      } else {\n        element = findSingle(this.menubar, \"li[id=\\\"\".concat(id, \"\\\"]\"));\n      }\n      if (element) {\n        element.scrollIntoView && element.scrollIntoView({\n          block: 'nearest',\n          inline: 'nearest',\n          behavior: 'smooth'\n        });\n      }\n    },\n    createProcessedItems: function createProcessedItems(items) {\n      var _this12 = this;\n      var level = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      var parent = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      var parentKey = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '';\n      var columnIndex = arguments.length > 4 ? arguments[4] : undefined;\n      var processedItems = [];\n      items && items.forEach(function (item, index) {\n        var key = (parentKey !== '' ? parentKey + '_' : '') + (columnIndex !== undefined ? columnIndex + '_' : '') + index;\n        var newItem = {\n          item: item,\n          index: index,\n          level: level,\n          key: key,\n          parent: parent,\n          parentKey: parentKey,\n          columnIndex: columnIndex !== undefined ? columnIndex : parent.columnIndex !== undefined ? parent.columnIndex : index\n        };\n        newItem['items'] = level === 0 && item.items && item.items.length > 0 ? item.items.map(function (_items, _index) {\n          return _this12.createProcessedItems(_items, level + 1, newItem, key, _index);\n        }) : _this12.createProcessedItems(item.items, level + 1, newItem, key);\n        processedItems.push(newItem);\n      });\n      return processedItems;\n    },\n    containerRef: function containerRef(el) {\n      this.container = el;\n    },\n    menubarRef: function menubarRef(el) {\n      this.menubar = el ? el.$el : undefined;\n    }\n  },\n  computed: {\n    processedItems: function processedItems() {\n      return this.createProcessedItems(this.model || []);\n    },\n    visibleItems: function visibleItems() {\n      var processedItem = isNotEmpty(this.activeItem) ? this.activeItem : null;\n      return processedItem && processedItem.key === this.focusedItemInfo.parentKey ? processedItem.items.reduce(function (items, col) {\n        col.forEach(function (submenu) {\n          submenu.items.forEach(function (a) {\n            items.push(a);\n          });\n        });\n        return items;\n      }, []) : this.processedItems;\n    },\n    horizontal: function horizontal() {\n      return this.orientation === 'horizontal';\n    },\n    vertical: function vertical() {\n      return this.orientation === 'vertical';\n    },\n    focusedItemId: function focusedItemId() {\n      return isNotEmpty(this.focusedItemInfo.key) ? \"\".concat(this.id, \"_\").concat(this.focusedItemInfo.key) : null;\n    }\n  },\n  components: {\n    MegaMenuSub: script$1,\n    BarsIcon: BarsIcon\n  }\n};\nvar _hoisted_1 = [\"id\"];\nvar _hoisted_2 = [\"aria-haspopup\", \"aria-expanded\", \"aria-controls\", \"aria-label\"];\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_BarsIcon = resolveComponent(\"BarsIcon\");\n  var _component_MegaMenuSub = resolveComponent(\"MegaMenuSub\");\n  return openBlock(), createElementBlock(\"div\", mergeProps({\n    ref: $options.containerRef,\n    id: $data.id,\n    \"class\": _ctx.cx('root')\n  }, _ctx.ptmi('root')), [_ctx.$slots.start ? (openBlock(), createElementBlock(\"div\", mergeProps({\n    key: 0,\n    \"class\": _ctx.cx('start')\n  }, _ctx.ptm('start')), [renderSlot(_ctx.$slots, \"start\")], 16)) : createCommentVNode(\"\", true), renderSlot(_ctx.$slots, _ctx.$slots.button ? 'button' : 'menubutton', {\n    id: $data.id,\n    \"class\": normalizeClass(_ctx.cx('button')),\n    toggleCallback: function toggleCallback(event) {\n      return $options.menuButtonClick(event);\n    }\n  }, function () {\n    var _ctx$$primevue$config;\n    return [_ctx.model && _ctx.model.length > 0 ? (openBlock(), createElementBlock(\"a\", mergeProps({\n      key: 0,\n      ref: \"menubutton\",\n      role: \"button\",\n      tabindex: \"0\",\n      \"class\": _ctx.cx('button'),\n      \"aria-haspopup\": _ctx.model.length && _ctx.model.length > 0 ? true : false,\n      \"aria-expanded\": $data.mobileActive,\n      \"aria-controls\": $data.id,\n      \"aria-label\": (_ctx$$primevue$config = _ctx.$primevue.config.locale.aria) === null || _ctx$$primevue$config === void 0 ? void 0 : _ctx$$primevue$config.navigation,\n      onClick: _cache[0] || (_cache[0] = function ($event) {\n        return $options.menuButtonClick($event);\n      }),\n      onKeydown: _cache[1] || (_cache[1] = function ($event) {\n        return $options.menuButtonKeydown($event);\n      })\n    }, _ctx.ptm('button')), [renderSlot(_ctx.$slots, _ctx.$slots.buttonicon ? 'buttonicon' : 'menubuttonicon', {}, function () {\n      return [createVNode(_component_BarsIcon, normalizeProps(guardReactiveProps(_ctx.ptm('buttonIcon'))), null, 16)];\n    })], 16, _hoisted_2)) : createCommentVNode(\"\", true)];\n  }), createVNode(_component_MegaMenuSub, {\n    ref: $options.menubarRef,\n    id: $data.id + '_list',\n    tabindex: !_ctx.disabled ? _ctx.tabindex : -1,\n    role: \"menubar\",\n    \"aria-label\": _ctx.ariaLabel,\n    \"aria-labelledby\": _ctx.ariaLabelledby,\n    \"aria-disabled\": _ctx.disabled || undefined,\n    \"aria-orientation\": _ctx.orientation,\n    \"aria-activedescendant\": $data.focused ? $options.focusedItemId : undefined,\n    menuId: $data.id,\n    focusedItemId: $data.focused ? $options.focusedItemId : undefined,\n    items: $options.processedItems,\n    horizontal: $options.horizontal,\n    templates: _ctx.$slots,\n    activeItem: $data.activeItem,\n    mobileActive: $data.mobileActive,\n    level: 0,\n    style: normalizeStyle(_ctx.sx('rootList')),\n    pt: _ctx.pt,\n    unstyled: _ctx.unstyled,\n    onFocus: $options.onFocus,\n    onBlur: $options.onBlur,\n    onKeydown: $options.onKeyDown,\n    onItemClick: $options.onItemClick,\n    onItemMouseenter: $options.onItemMouseEnter\n  }, null, 8, [\"id\", \"tabindex\", \"aria-label\", \"aria-labelledby\", \"aria-disabled\", \"aria-orientation\", \"aria-activedescendant\", \"menuId\", \"focusedItemId\", \"items\", \"horizontal\", \"templates\", \"activeItem\", \"mobileActive\", \"style\", \"pt\", \"unstyled\", \"onFocus\", \"onBlur\", \"onKeydown\", \"onItemClick\", \"onItemMouseenter\"]), _ctx.$slots.end ? (openBlock(), createElementBlock(\"div\", mergeProps({\n    key: 1,\n    \"class\": _ctx.cx('end')\n  }, _ctx.ptm('end')), [renderSlot(_ctx.$slots, \"end\")], 16)) : createCommentVNode(\"\", true)], 16, _hoisted_1);\n}\nscript.render = render;\nexport { script as default };","map":{"version":3,"names":["script$2","name","BaseComponent","props","model","type","Array","orientation","String","breakpoint","disabled","Boolean","tabindex","Number","scrollHeight","ariaLabelledby","ariaLabel","style","MegaMenuStyle","provide","$pcMegaMenu","$parentInstance","script$1","hostName","emits","menuId","focusedItemId","horizontal","submenu","Object","mobileActive","items","level","templates","activeItem","methods","getSubListId","processedItem","concat","getItemId","getSubListKey","key","getItemKey","getItemProp","params","item","resolve","undefined","getItemLabel","getPTOptions","index","ptm","context","active","isItemActive","focused","isItemFocused","isItemDisabled","isNotEmpty","isItemVisible","isItemGroup","onItemClick","event","originalEvent","$emit","isFocus","onItemMouseEnter","getAriaSetSize","_this","filter","length","getAriaPosInset","_this2","slice","getMenuItemProps","action","mergeProps","cx","icon","label","submenuicon","components","AngleRightIcon","AngleDownIcon","directives","ripple","Ripple","openBlock","createElementBlock","$props","_ctx","$options","role","toDisplayString","createCommentVNode","Fragment","renderList","id","createElementVNode","onClick","$event","onMouseenter","withDirectives","href","target","itemicon","createBlock","resolveDynamicComponent","normalizeClass","_hoisted_4","_directive_ripple","hasSubmenu","col","_component_MegaMenuSub","normalizeStyle","sx","pt","unstyled","_cache","onItemMouseenter","_hoisted_5","script","inheritAttrs","outsideClickListener","resizeListener","matchMediaListener","container","menubar","searchTimeout","searchValue","data","$attrs","focusedItemInfo","parentKey","dirty","query","queryMatches","watch","$attrsId","newValue","UniqueComponentId","newItem","bindOutsideClickListener","bindResizeListener","unbindOutsideClickListener","unbindResizeListener","mounted","bindMatchMediaListener","beforeUnmount","unbindMatchMediaListener","isItemSeparator","getProccessedItemLabel","isProccessedItemGroup","toggle","ZIndex","clear","hide","set","$primevue","config","zIndex","menu","setTimeout","show","preventDefault","findFirstFocusedItemIndex","focus","$refs","menubutton","preventScroll","onFocus","findVisibleItem","onBlur","onKeyDown","metaKey","ctrlKey","code","onArrowDownKey","onArrowUpKey","onArrowLeftKey","onArrowRightKey","onHomeKey","onEndKey","onSpaceKey","onEnterKey","onEscapeKey","onTabKey","isPrintableCharacter","searchItems","onItemChange","isEmpty","grouped","root","parent","selected","isSelected","menuButtonClick","menuButtonKeydown","itemIndex","findNextItemIndex","changeFocusedItemInfo","altKey","findFirstItemIndex","findPrevItemIndex","findLastFocusedItemIndex","vertical","columnIndex","_itemIndex","visibleItems","findIndex","_processedItem","_grouped","_itemIndex2","findLastItemIndex","element","findSingle","anchorElement","click","_this3","isOutsideContainer","contains","isOutsideTarget","document","addEventListener","removeEventListener","_this4","isTouchDevice","window","_this5","matchMedia","matches","isItemMatched","_this$getProccessedIt","isValidItem","toLocaleLowerCase","startsWith","isValidSelectedItem","_this6","_this7","findLastIndex","_this8","matchedItemIndex","_this9","findSelectedItemIndex","_this10","selectedIndex","_char","_this11","matched","clearTimeout","scrollInView","arguments","scrollIntoView","block","inline","behavior","createProcessedItems","_this12","processedItems","forEach","map","_items","_index","push","containerRef","el","menubarRef","$el","computed","reduce","a","MegaMenuSub","BarsIcon","ref","$data","ptmi","$slots","start","renderSlot","button","toggleCallback","_ctx$$primevue$config","locale","aria","navigation","onKeydown","buttonicon","createVNode","_component_BarsIcon","normalizeProps","guardReactiveProps","end","_hoisted_1"],"sources":["../../src/megamenu/BaseMegaMenu.vue","../../src/megamenu/MegaMenuSub.vue","../../src/megamenu/MegaMenuSub.vue?vue&type=template&id=5fbd7786&lang.js","../../src/megamenu/MegaMenu.vue","../../src/megamenu/MegaMenu.vue?vue&type=template&id=81a194b0&lang.js"],"sourcesContent":["<script>\nimport BaseComponent from '@primevue/core/basecomponent';\nimport MegaMenuStyle from 'primevue/megamenu/style';\n\nexport default {\n    name: 'BaseMegaMenu',\n    extends: BaseComponent,\n    props: {\n        model: {\n            type: Array,\n            default: null\n        },\n        orientation: {\n            type: String,\n            default: 'horizontal'\n        },\n        breakpoint: {\n            type: String,\n            default: '960px'\n        },\n        disabled: {\n            type: Boolean,\n            default: false\n        },\n        tabindex: {\n            type: Number,\n            default: 0\n        },\n        scrollHeight: {\n            type: String,\n            default: '20rem'\n        },\n        ariaLabelledby: {\n            type: String,\n            default: null\n        },\n        ariaLabel: {\n            type: String,\n            default: null\n        }\n    },\n    style: MegaMenuStyle,\n    provide() {\n        return {\n            $pcMegaMenu: this,\n            $parentInstance: this\n        };\n    }\n};\n</script>\n","<template>\n    <ul :class=\"level === 0 ? cx('rootList') : cx('submenu')\" :tabindex=\"tabindex\" v-bind=\"level === 0 ? ptm('rootList') : ptm('submenu')\">\n        <li v-if=\"submenu\" :class=\"[cx('submenuLabel', { submenu }), getItemProp(submenu, 'class')]\" :style=\"getItemProp(submenu, 'style')\" role=\"presentation\" v-bind=\"ptm('submenuLabel')\">{{ getItemLabel(submenu) }}</li>\n        <template v-for=\"(processedItem, index) of items\" :key=\"getItemKey(processedItem)\">\n            <li\n                v-if=\"isItemVisible(processedItem) && !getItemProp(processedItem, 'separator')\"\n                :id=\"getItemId(processedItem)\"\n                :style=\"getItemProp(processedItem, 'style')\"\n                :class=\"[cx('item', { processedItem }), getItemProp(processedItem, 'class')]\"\n                role=\"menuitem\"\n                :aria-label=\"getItemLabel(processedItem)\"\n                :aria-disabled=\"isItemDisabled(processedItem) || undefined\"\n                :aria-expanded=\"isItemGroup(processedItem) ? isItemActive(processedItem) : undefined\"\n                :aria-haspopup=\"isItemGroup(processedItem) && !getItemProp(processedItem, 'to') ? 'menu' : undefined\"\n                :aria-level=\"level + 1\"\n                :aria-setsize=\"getAriaSetSize()\"\n                :aria-posinset=\"getAriaPosInset(index)\"\n                v-bind=\"getPTOptions(processedItem, index, 'item')\"\n                :data-p-active=\"isItemActive(processedItem)\"\n                :data-p-focused=\"isItemFocused(processedItem)\"\n                :data-p-disabled=\"isItemDisabled(processedItem)\"\n            >\n                <div :class=\"cx('itemContent')\" @click=\"onItemClick($event, processedItem)\" @mouseenter=\"onItemMouseEnter($event, processedItem)\" v-bind=\"getPTOptions(processedItem, index, 'itemContent')\">\n                    <template v-if=\"!templates.item\">\n                        <a v-ripple :href=\"getItemProp(processedItem, 'url')\" :class=\"cx('itemLink')\" :target=\"getItemProp(processedItem, 'target')\" tabindex=\"-1\" v-bind=\"getPTOptions(processedItem, index, 'itemLink')\">\n                            <component v-if=\"templates.itemicon\" :is=\"templates.itemicon\" :item=\"processedItem.item\" :class=\"cx('itemIcon')\" />\n                            <span v-else-if=\"getItemProp(processedItem, 'icon')\" :class=\"[cx('itemIcon'), getItemProp(processedItem, 'icon')]\" v-bind=\"getPTOptions(processedItem, index, 'itemIcon')\" />\n                            <span :class=\"cx('itemLabel')\" v-bind=\"getPTOptions(processedItem, index, 'itemLabel')\">\n                                {{ getItemLabel(processedItem) }}\n                            </span>\n                            <template v-if=\"isItemGroup(processedItem)\">\n                                <component v-if=\"templates.submenuicon\" :is=\"templates.submenuicon\" :active=\"isItemActive(processedItem)\" :class=\"cx('submenuIcon')\" v-bind=\"getPTOptions(processedItem, index, 'submenuIcon')\" />\n                                <component v-else :is=\"horizontal || mobileActive ? 'AngleDownIcon' : 'AngleRightIcon'\" :class=\"cx('submenuIcon')\" v-bind=\"getPTOptions(processedItem, index, 'submenuIcon')\" />\n                            </template>\n                        </a>\n                    </template>\n                    <component v-else :is=\"templates.item\" :item=\"processedItem.item\" :hasSubmenu=\"isItemGroup(processedItem)\" :label=\"getItemLabel(processedItem)\" :props=\"getMenuItemProps(processedItem, index)\"></component>\n                </div>\n                <div v-if=\"isItemVisible(processedItem) && isItemGroup(processedItem)\" :class=\"cx('overlay')\" v-bind=\"ptm('overlay')\">\n                    <div :class=\"cx('grid')\" v-bind=\"ptm('grid')\">\n                        <div v-for=\"col of processedItem.items\" :key=\"getItemKey(col)\" :class=\"cx('column', { processedItem })\" v-bind=\"ptm('column')\">\n                            <MegaMenuSub\n                                v-for=\"submenu of col\"\n                                :key=\"getSubListKey(submenu)\"\n                                :id=\"getSubListId(submenu)\"\n                                :style=\"sx('submenu', true, { processedItem })\"\n                                role=\"menu\"\n                                :menuId=\"menuId\"\n                                :focusedItemId=\"focusedItemId\"\n                                :submenu=\"submenu\"\n                                :items=\"submenu.items\"\n                                :templates=\"templates\"\n                                :level=\"level + 1\"\n                                :mobileActive=\"mobileActive\"\n                                :pt=\"pt\"\n                                :unstyled=\"unstyled\"\n                                @item-click=\"$emit('item-click', $event)\"\n                                @item-mouseenter=\"$emit('item-mouseenter', $event)\"\n                            />\n                        </div>\n                    </div>\n                </div>\n            </li>\n            <li\n                v-if=\"isItemVisible(processedItem) && getItemProp(processedItem, 'separator')\"\n                :id=\"getItemId(processedItem)\"\n                :class=\"[cx('separator'), getItemProp(processedItem, 'class')]\"\n                :style=\"getItemProp(processedItem, 'style')\"\n                role=\"separator\"\n                v-bind=\"ptm('separator')\"\n            ></li>\n        </template>\n    </ul>\n</template>\n\n<script>\nimport { isNotEmpty, resolve } from '@primeuix/utils/object';\nimport BaseComponent from '@primevue/core/basecomponent';\nimport AngleDownIcon from '@primevue/icons/angledown';\nimport AngleRightIcon from '@primevue/icons/angleright';\nimport Ripple from 'primevue/ripple';\nimport { mergeProps } from 'vue';\n\nexport default {\n    name: 'MegaMenuSub',\n    hostName: 'MegaMenu',\n    extends: BaseComponent,\n    emits: ['item-click', 'item-mouseenter'],\n    props: {\n        menuId: {\n            type: String,\n            default: null\n        },\n        focusedItemId: {\n            type: String,\n            default: null\n        },\n        horizontal: {\n            type: Boolean,\n            default: false\n        },\n        submenu: {\n            type: Object,\n            default: null\n        },\n        mobileActive: {\n            type: Boolean,\n            default: false\n        },\n        items: {\n            type: Array,\n            default: null\n        },\n        level: {\n            type: Number,\n            default: 0\n        },\n        templates: {\n            type: Object,\n            default: null\n        },\n        activeItem: {\n            type: Object,\n            default: null\n        },\n        tabindex: {\n            type: Number,\n            default: 0\n        }\n    },\n    methods: {\n        getSubListId(processedItem) {\n            return `${this.getItemId(processedItem)}_list`;\n        },\n        getSubListKey(processedItem) {\n            return this.getSubListId(processedItem);\n        },\n        getItemId(processedItem) {\n            return `${this.menuId}_${processedItem.key}`;\n        },\n        getItemKey(processedItem) {\n            return this.getItemId(processedItem);\n        },\n        getItemProp(processedItem, name, params) {\n            return processedItem && processedItem.item ? resolve(processedItem.item[name], params) : undefined;\n        },\n        getItemLabel(processedItem) {\n            return this.getItemProp(processedItem, 'label');\n        },\n        getPTOptions(processedItem, index, key) {\n            return this.ptm(key, {\n                context: {\n                    item: processedItem.item,\n                    index,\n                    active: this.isItemActive(processedItem),\n                    focused: this.isItemFocused(processedItem),\n                    disabled: this.isItemDisabled(processedItem)\n                }\n            });\n        },\n        isItemActive(processedItem) {\n            return isNotEmpty(this.activeItem) ? this.activeItem.key === processedItem.key : false;\n        },\n        isItemVisible(processedItem) {\n            return this.getItemProp(processedItem, 'visible') !== false;\n        },\n        isItemDisabled(processedItem) {\n            return this.getItemProp(processedItem, 'disabled');\n        },\n        isItemFocused(processedItem) {\n            return this.focusedItemId === this.getItemId(processedItem);\n        },\n        isItemGroup(processedItem) {\n            return isNotEmpty(processedItem.items);\n        },\n        onItemClick(event, processedItem) {\n            this.getItemProp(processedItem, 'command', { originalEvent: event, item: processedItem.item });\n            this.$emit('item-click', { originalEvent: event, processedItem, isFocus: true });\n        },\n        onItemMouseEnter(event, processedItem) {\n            this.$emit('item-mouseenter', { originalEvent: event, processedItem });\n        },\n        getAriaSetSize() {\n            return this.items.filter((processedItem) => this.isItemVisible(processedItem) && !this.getItemProp(processedItem, 'separator')).length;\n        },\n        getAriaPosInset(index) {\n            return index - this.items.slice(0, index).filter((processedItem) => this.isItemVisible(processedItem) && this.getItemProp(processedItem, 'separator')).length + 1;\n        },\n        getMenuItemProps(processedItem, index) {\n            return {\n                action: mergeProps(\n                    {\n                        class: this.cx('itemLink'),\n                        tabindex: -1\n                    },\n                    this.getPTOptions(processedItem, index, 'itemLink')\n                ),\n                icon: mergeProps(\n                    {\n                        class: [this.cx('itemIcon'), this.getItemProp(processedItem, 'icon')]\n                    },\n                    this.getPTOptions(processedItem, index, 'itemIcon')\n                ),\n                label: mergeProps(\n                    {\n                        class: this.cx('label')\n                    },\n                    this.getPTOptions(processedItem, index, 'label')\n                ),\n                submenuicon: mergeProps(\n                    {\n                        class: this.cx('submenuIcon')\n                    },\n                    this.getPTOptions(processedItem, index, 'submenuIcon')\n                )\n            };\n        }\n    },\n    components: {\n        AngleRightIcon: AngleRightIcon,\n        AngleDownIcon: AngleDownIcon\n    },\n    directives: {\n        ripple: Ripple\n    }\n};\n</script>\n","<template>\n    <ul :class=\"level === 0 ? cx('rootList') : cx('submenu')\" :tabindex=\"tabindex\" v-bind=\"level === 0 ? ptm('rootList') : ptm('submenu')\">\n        <li v-if=\"submenu\" :class=\"[cx('submenuLabel', { submenu }), getItemProp(submenu, 'class')]\" :style=\"getItemProp(submenu, 'style')\" role=\"presentation\" v-bind=\"ptm('submenuLabel')\">{{ getItemLabel(submenu) }}</li>\n        <template v-for=\"(processedItem, index) of items\" :key=\"getItemKey(processedItem)\">\n            <li\n                v-if=\"isItemVisible(processedItem) && !getItemProp(processedItem, 'separator')\"\n                :id=\"getItemId(processedItem)\"\n                :style=\"getItemProp(processedItem, 'style')\"\n                :class=\"[cx('item', { processedItem }), getItemProp(processedItem, 'class')]\"\n                role=\"menuitem\"\n                :aria-label=\"getItemLabel(processedItem)\"\n                :aria-disabled=\"isItemDisabled(processedItem) || undefined\"\n                :aria-expanded=\"isItemGroup(processedItem) ? isItemActive(processedItem) : undefined\"\n                :aria-haspopup=\"isItemGroup(processedItem) && !getItemProp(processedItem, 'to') ? 'menu' : undefined\"\n                :aria-level=\"level + 1\"\n                :aria-setsize=\"getAriaSetSize()\"\n                :aria-posinset=\"getAriaPosInset(index)\"\n                v-bind=\"getPTOptions(processedItem, index, 'item')\"\n                :data-p-active=\"isItemActive(processedItem)\"\n                :data-p-focused=\"isItemFocused(processedItem)\"\n                :data-p-disabled=\"isItemDisabled(processedItem)\"\n            >\n                <div :class=\"cx('itemContent')\" @click=\"onItemClick($event, processedItem)\" @mouseenter=\"onItemMouseEnter($event, processedItem)\" v-bind=\"getPTOptions(processedItem, index, 'itemContent')\">\n                    <template v-if=\"!templates.item\">\n                        <a v-ripple :href=\"getItemProp(processedItem, 'url')\" :class=\"cx('itemLink')\" :target=\"getItemProp(processedItem, 'target')\" tabindex=\"-1\" v-bind=\"getPTOptions(processedItem, index, 'itemLink')\">\n                            <component v-if=\"templates.itemicon\" :is=\"templates.itemicon\" :item=\"processedItem.item\" :class=\"cx('itemIcon')\" />\n                            <span v-else-if=\"getItemProp(processedItem, 'icon')\" :class=\"[cx('itemIcon'), getItemProp(processedItem, 'icon')]\" v-bind=\"getPTOptions(processedItem, index, 'itemIcon')\" />\n                            <span :class=\"cx('itemLabel')\" v-bind=\"getPTOptions(processedItem, index, 'itemLabel')\">\n                                {{ getItemLabel(processedItem) }}\n                            </span>\n                            <template v-if=\"isItemGroup(processedItem)\">\n                                <component v-if=\"templates.submenuicon\" :is=\"templates.submenuicon\" :active=\"isItemActive(processedItem)\" :class=\"cx('submenuIcon')\" v-bind=\"getPTOptions(processedItem, index, 'submenuIcon')\" />\n                                <component v-else :is=\"horizontal || mobileActive ? 'AngleDownIcon' : 'AngleRightIcon'\" :class=\"cx('submenuIcon')\" v-bind=\"getPTOptions(processedItem, index, 'submenuIcon')\" />\n                            </template>\n                        </a>\n                    </template>\n                    <component v-else :is=\"templates.item\" :item=\"processedItem.item\" :hasSubmenu=\"isItemGroup(processedItem)\" :label=\"getItemLabel(processedItem)\" :props=\"getMenuItemProps(processedItem, index)\"></component>\n                </div>\n                <div v-if=\"isItemVisible(processedItem) && isItemGroup(processedItem)\" :class=\"cx('overlay')\" v-bind=\"ptm('overlay')\">\n                    <div :class=\"cx('grid')\" v-bind=\"ptm('grid')\">\n                        <div v-for=\"col of processedItem.items\" :key=\"getItemKey(col)\" :class=\"cx('column', { processedItem })\" v-bind=\"ptm('column')\">\n                            <MegaMenuSub\n                                v-for=\"submenu of col\"\n                                :key=\"getSubListKey(submenu)\"\n                                :id=\"getSubListId(submenu)\"\n                                :style=\"sx('submenu', true, { processedItem })\"\n                                role=\"menu\"\n                                :menuId=\"menuId\"\n                                :focusedItemId=\"focusedItemId\"\n                                :submenu=\"submenu\"\n                                :items=\"submenu.items\"\n                                :templates=\"templates\"\n                                :level=\"level + 1\"\n                                :mobileActive=\"mobileActive\"\n                                :pt=\"pt\"\n                                :unstyled=\"unstyled\"\n                                @item-click=\"$emit('item-click', $event)\"\n                                @item-mouseenter=\"$emit('item-mouseenter', $event)\"\n                            />\n                        </div>\n                    </div>\n                </div>\n            </li>\n            <li\n                v-if=\"isItemVisible(processedItem) && getItemProp(processedItem, 'separator')\"\n                :id=\"getItemId(processedItem)\"\n                :class=\"[cx('separator'), getItemProp(processedItem, 'class')]\"\n                :style=\"getItemProp(processedItem, 'style')\"\n                role=\"separator\"\n                v-bind=\"ptm('separator')\"\n            ></li>\n        </template>\n    </ul>\n</template>\n\n<script>\nimport { isNotEmpty, resolve } from '@primeuix/utils/object';\nimport BaseComponent from '@primevue/core/basecomponent';\nimport AngleDownIcon from '@primevue/icons/angledown';\nimport AngleRightIcon from '@primevue/icons/angleright';\nimport Ripple from 'primevue/ripple';\nimport { mergeProps } from 'vue';\n\nexport default {\n    name: 'MegaMenuSub',\n    hostName: 'MegaMenu',\n    extends: BaseComponent,\n    emits: ['item-click', 'item-mouseenter'],\n    props: {\n        menuId: {\n            type: String,\n            default: null\n        },\n        focusedItemId: {\n            type: String,\n            default: null\n        },\n        horizontal: {\n            type: Boolean,\n            default: false\n        },\n        submenu: {\n            type: Object,\n            default: null\n        },\n        mobileActive: {\n            type: Boolean,\n            default: false\n        },\n        items: {\n            type: Array,\n            default: null\n        },\n        level: {\n            type: Number,\n            default: 0\n        },\n        templates: {\n            type: Object,\n            default: null\n        },\n        activeItem: {\n            type: Object,\n            default: null\n        },\n        tabindex: {\n            type: Number,\n            default: 0\n        }\n    },\n    methods: {\n        getSubListId(processedItem) {\n            return `${this.getItemId(processedItem)}_list`;\n        },\n        getSubListKey(processedItem) {\n            return this.getSubListId(processedItem);\n        },\n        getItemId(processedItem) {\n            return `${this.menuId}_${processedItem.key}`;\n        },\n        getItemKey(processedItem) {\n            return this.getItemId(processedItem);\n        },\n        getItemProp(processedItem, name, params) {\n            return processedItem && processedItem.item ? resolve(processedItem.item[name], params) : undefined;\n        },\n        getItemLabel(processedItem) {\n            return this.getItemProp(processedItem, 'label');\n        },\n        getPTOptions(processedItem, index, key) {\n            return this.ptm(key, {\n                context: {\n                    item: processedItem.item,\n                    index,\n                    active: this.isItemActive(processedItem),\n                    focused: this.isItemFocused(processedItem),\n                    disabled: this.isItemDisabled(processedItem)\n                }\n            });\n        },\n        isItemActive(processedItem) {\n            return isNotEmpty(this.activeItem) ? this.activeItem.key === processedItem.key : false;\n        },\n        isItemVisible(processedItem) {\n            return this.getItemProp(processedItem, 'visible') !== false;\n        },\n        isItemDisabled(processedItem) {\n            return this.getItemProp(processedItem, 'disabled');\n        },\n        isItemFocused(processedItem) {\n            return this.focusedItemId === this.getItemId(processedItem);\n        },\n        isItemGroup(processedItem) {\n            return isNotEmpty(processedItem.items);\n        },\n        onItemClick(event, processedItem) {\n            this.getItemProp(processedItem, 'command', { originalEvent: event, item: processedItem.item });\n            this.$emit('item-click', { originalEvent: event, processedItem, isFocus: true });\n        },\n        onItemMouseEnter(event, processedItem) {\n            this.$emit('item-mouseenter', { originalEvent: event, processedItem });\n        },\n        getAriaSetSize() {\n            return this.items.filter((processedItem) => this.isItemVisible(processedItem) && !this.getItemProp(processedItem, 'separator')).length;\n        },\n        getAriaPosInset(index) {\n            return index - this.items.slice(0, index).filter((processedItem) => this.isItemVisible(processedItem) && this.getItemProp(processedItem, 'separator')).length + 1;\n        },\n        getMenuItemProps(processedItem, index) {\n            return {\n                action: mergeProps(\n                    {\n                        class: this.cx('itemLink'),\n                        tabindex: -1\n                    },\n                    this.getPTOptions(processedItem, index, 'itemLink')\n                ),\n                icon: mergeProps(\n                    {\n                        class: [this.cx('itemIcon'), this.getItemProp(processedItem, 'icon')]\n                    },\n                    this.getPTOptions(processedItem, index, 'itemIcon')\n                ),\n                label: mergeProps(\n                    {\n                        class: this.cx('label')\n                    },\n                    this.getPTOptions(processedItem, index, 'label')\n                ),\n                submenuicon: mergeProps(\n                    {\n                        class: this.cx('submenuIcon')\n                    },\n                    this.getPTOptions(processedItem, index, 'submenuIcon')\n                )\n            };\n        }\n    },\n    components: {\n        AngleRightIcon: AngleRightIcon,\n        AngleDownIcon: AngleDownIcon\n    },\n    directives: {\n        ripple: Ripple\n    }\n};\n</script>\n","<template>\n    <div :ref=\"containerRef\" :id=\"id\" :class=\"cx('root')\" v-bind=\"ptmi('root')\">\n        <div v-if=\"$slots.start\" :class=\"cx('start')\" v-bind=\"ptm('start')\">\n            <slot name=\"start\"></slot>\n        </div>\n        <!--TODO: menubutton deprecated since v4.0. Use button-->\n        <slot :id=\"id\" :name=\"$slots.button ? 'button' : 'menubutton'\" :class=\"cx('button')\" :toggleCallback=\"(event) => menuButtonClick(event)\">\n            <a\n                v-if=\"model && model.length > 0\"\n                ref=\"menubutton\"\n                role=\"button\"\n                tabindex=\"0\"\n                :class=\"cx('button')\"\n                :aria-haspopup=\"model.length && model.length > 0 ? true : false\"\n                :aria-expanded=\"mobileActive\"\n                :aria-controls=\"id\"\n                :aria-label=\"$primevue.config.locale.aria?.navigation\"\n                @click=\"menuButtonClick($event)\"\n                @keydown=\"menuButtonKeydown($event)\"\n                v-bind=\"ptm('button')\"\n            >\n                <!--TODO: menubuttonicon deprecated since v4.0. Use buttonicon-->\n                <slot :name=\"$slots.buttonicon ? 'buttonicon' : 'menubuttonicon'\">\n                    <BarsIcon v-bind=\"ptm('buttonIcon')\" />\n                </slot>\n            </a>\n        </slot>\n        <MegaMenuSub\n            :ref=\"menubarRef\"\n            :id=\"id + '_list'\"\n            :tabindex=\"!disabled ? tabindex : -1\"\n            role=\"menubar\"\n            :aria-label=\"ariaLabel\"\n            :aria-labelledby=\"ariaLabelledby\"\n            :aria-disabled=\"disabled || undefined\"\n            :aria-orientation=\"orientation\"\n            :aria-activedescendant=\"focused ? focusedItemId : undefined\"\n            :menuId=\"id\"\n            :focusedItemId=\"focused ? focusedItemId : undefined\"\n            :items=\"processedItems\"\n            :horizontal=\"horizontal\"\n            :templates=\"$slots\"\n            :activeItem=\"activeItem\"\n            :mobileActive=\"mobileActive\"\n            :level=\"0\"\n            :style=\"sx('rootList')\"\n            :pt=\"pt\"\n            :unstyled=\"unstyled\"\n            @focus=\"onFocus\"\n            @blur=\"onBlur\"\n            @keydown=\"onKeyDown\"\n            @item-click=\"onItemClick\"\n            @item-mouseenter=\"onItemMouseEnter\"\n        />\n        <div v-if=\"$slots.end\" :class=\"cx('end')\" v-bind=\"ptm('end')\">\n            <slot name=\"end\"></slot>\n        </div>\n    </div>\n</template>\n\n<script>\nimport { findSingle, focus, isTouchDevice } from '@primeuix/utils/dom';\nimport { findLastIndex, isEmpty, isNotEmpty, isPrintableCharacter, resolve } from '@primeuix/utils/object';\nimport { ZIndex } from '@primeuix/utils/zindex';\nimport { UniqueComponentId } from '@primevue/core/utils';\nimport BarsIcon from '@primevue/icons/bars';\nimport BaseMegaMenu from './BaseMegaMenu.vue';\nimport MegaMenuSub from './MegaMenuSub.vue';\n\nexport default {\n    name: 'MegaMenu',\n    extends: BaseMegaMenu,\n    inheritAttrs: false,\n    emits: ['focus', 'blur'],\n    outsideClickListener: null,\n    resizeListener: null,\n    matchMediaListener: null,\n    container: null,\n    menubar: null,\n    searchTimeout: null,\n    searchValue: null,\n    data() {\n        return {\n            id: this.$attrs.id,\n            mobileActive: false,\n            focused: false,\n            focusedItemInfo: { index: -1, key: '', parentKey: '' },\n            activeItem: null,\n            dirty: false,\n            query: null,\n            queryMatches: false\n        };\n    },\n    watch: {\n        '$attrs.id': function (newValue) {\n            this.id = newValue || UniqueComponentId();\n        },\n        activeItem(newItem) {\n            if (isNotEmpty(newItem)) {\n                this.bindOutsideClickListener();\n                this.bindResizeListener();\n            } else {\n                this.unbindOutsideClickListener();\n                this.unbindResizeListener();\n            }\n        }\n    },\n    mounted() {\n        this.id = this.id || UniqueComponentId();\n        this.bindMatchMediaListener();\n    },\n    beforeUnmount() {\n        this.mobileActive = false;\n        this.unbindOutsideClickListener();\n        this.unbindResizeListener();\n        this.unbindMatchMediaListener();\n    },\n    methods: {\n        getItemProp(item, name) {\n            return item ? resolve(item[name]) : undefined;\n        },\n        getItemLabel(item) {\n            return this.getItemProp(item, 'label');\n        },\n        isItemDisabled(item) {\n            return this.getItemProp(item, 'disabled');\n        },\n        isItemVisible(item) {\n            return this.getItemProp(item, 'visible') !== false;\n        },\n        isItemGroup(item) {\n            return isNotEmpty(this.getItemProp(item, 'items'));\n        },\n        isItemSeparator(item) {\n            return this.getItemProp(item, 'separator');\n        },\n        getProccessedItemLabel(processedItem) {\n            return processedItem ? this.getItemLabel(processedItem.item) : undefined;\n        },\n        isProccessedItemGroup(processedItem) {\n            return processedItem && isNotEmpty(processedItem.items);\n        },\n        toggle(event) {\n            if (this.mobileActive) {\n                this.mobileActive = false;\n                ZIndex.clear(this.menubar);\n                this.hide();\n            } else {\n                this.mobileActive = true;\n                ZIndex.set('menu', this.menubar, this.$primevue.config.zIndex.menu);\n                setTimeout(() => {\n                    this.show();\n                }, 1);\n            }\n\n            this.bindOutsideClickListener();\n            event.preventDefault();\n        },\n        show() {\n            this.focusedItemInfo = { index: this.findFirstFocusedItemIndex(), level: 0, parentKey: '' };\n\n            focus(this.menubar);\n        },\n        hide(event, isFocus) {\n            if (this.mobileActive) {\n                this.mobileActive = false;\n                setTimeout(() => {\n                    focus(this.$refs.menubutton, { preventScroll: true });\n                }, 1);\n            }\n\n            this.activeItem = null;\n            this.focusedItemInfo = { index: -1, key: '', parentKey: '' };\n\n            isFocus && focus(this.menubar);\n            this.dirty = false;\n        },\n        onFocus(event) {\n            this.focused = true;\n\n            if (this.focusedItemInfo.index === -1) {\n                const index = this.findFirstFocusedItemIndex();\n                const processedItem = this.findVisibleItem(index);\n\n                this.focusedItemInfo = { index, key: processedItem.key, parentKey: processedItem.parentKey };\n            }\n\n            this.$emit('focus', event);\n        },\n        onBlur(event) {\n            this.focused = false;\n            this.focusedItemInfo = { index: -1, key: '', parentKey: '' };\n            this.searchValue = '';\n            this.dirty = false;\n            this.$emit('blur', event);\n        },\n        onKeyDown(event) {\n            if (this.disabled) {\n                event.preventDefault();\n\n                return;\n            }\n\n            const metaKey = event.metaKey || event.ctrlKey;\n\n            switch (event.code) {\n                case 'ArrowDown':\n                    this.onArrowDownKey(event);\n                    break;\n\n                case 'ArrowUp':\n                    this.onArrowUpKey(event);\n                    break;\n\n                case 'ArrowLeft':\n                    this.onArrowLeftKey(event);\n                    break;\n\n                case 'ArrowRight':\n                    this.onArrowRightKey(event);\n                    break;\n\n                case 'Home':\n                    this.onHomeKey(event);\n                    break;\n\n                case 'End':\n                    this.onEndKey(event);\n                    break;\n\n                case 'Space':\n                    this.onSpaceKey(event);\n                    break;\n\n                case 'Enter':\n                case 'NumpadEnter':\n                    this.onEnterKey(event);\n                    break;\n\n                case 'Escape':\n                    this.onEscapeKey(event);\n                    break;\n\n                case 'Tab':\n                    this.onTabKey(event);\n                    break;\n\n                case 'PageDown':\n                case 'PageUp':\n                case 'Backspace':\n                case 'ShiftLeft':\n                case 'ShiftRight':\n                    //NOOP\n                    break;\n\n                default:\n                    if (!metaKey && isPrintableCharacter(event.key)) {\n                        this.searchItems(event, event.key);\n                    }\n\n                    break;\n            }\n        },\n        onItemChange(event) {\n            const { processedItem, isFocus } = event;\n\n            if (isEmpty(processedItem)) return;\n\n            const { index, key, parentKey, items } = processedItem;\n            const grouped = isNotEmpty(items);\n\n            grouped && (this.activeItem = processedItem);\n            this.focusedItemInfo = { index, key, parentKey };\n\n            grouped && (this.dirty = true);\n            isFocus && focus(this.menubar);\n        },\n        onItemClick(event) {\n            const { originalEvent, processedItem } = event;\n            const grouped = this.isProccessedItemGroup(processedItem);\n            const root = isEmpty(processedItem.parent);\n            const selected = this.isSelected(processedItem);\n\n            if (selected) {\n                const { index, key, parentKey } = processedItem;\n\n                this.activeItem = null;\n                this.focusedItemInfo = { index, key, parentKey };\n\n                this.dirty = !root;\n\n                if (!this.mobileActive) {\n                    focus(this.menubar, { preventScroll: true });\n                }\n            } else {\n                if (grouped) {\n                    this.onItemChange(event);\n                } else {\n                    this.hide(originalEvent);\n                }\n            }\n        },\n        onItemMouseEnter(event) {\n            if (!this.mobileActive && this.dirty) {\n                this.onItemChange(event);\n            }\n        },\n        menuButtonClick(event) {\n            this.toggle(event);\n        },\n        menuButtonKeydown(event) {\n            (event.code === 'Enter' || event.code === 'NumpadEnter' || event.code === 'Space') && this.menuButtonClick(event);\n        },\n        onArrowDownKey(event) {\n            if (this.horizontal) {\n                if (isNotEmpty(this.activeItem) && this.activeItem.key === this.focusedItemInfo.key) {\n                    this.focusedItemInfo = { index: -1, key: '', parentKey: this.activeItem.key };\n                } else {\n                    const processedItem = this.findVisibleItem(this.focusedItemInfo.index);\n                    const grouped = this.isProccessedItemGroup(processedItem);\n\n                    if (grouped) {\n                        this.onItemChange({ originalEvent: event, processedItem });\n                        this.focusedItemInfo = { index: -1, key: processedItem.key, parentKey: processedItem.parentKey };\n                        this.searchValue = '';\n                    }\n                }\n            }\n\n            const itemIndex = this.focusedItemInfo.index !== -1 ? this.findNextItemIndex(this.focusedItemInfo.index) : this.findFirstFocusedItemIndex();\n\n            this.changeFocusedItemInfo(event, itemIndex);\n            event.preventDefault();\n        },\n        onArrowUpKey(event) {\n            if (event.altKey && this.horizontal) {\n                if (this.focusedItemInfo.index !== -1) {\n                    const processedItem = this.findVisibleItem(this.focusedItemInfo.index);\n                    const grouped = this.isProccessedItemGroup(processedItem);\n\n                    if (!grouped && isNotEmpty(this.activeItem)) {\n                        if (this.focusedItemInfo.index === 0) {\n                            this.focusedItemInfo = { index: this.activeItem.index, key: this.activeItem.key, parentKey: this.activeItem.parentKey };\n                            this.activeItem = null;\n                        } else {\n                            this.changeFocusedItemInfo(event, this.findFirstItemIndex());\n                        }\n                    }\n                }\n\n                event.preventDefault();\n            } else {\n                const itemIndex = this.focusedItemInfo.index !== -1 ? this.findPrevItemIndex(this.focusedItemInfo.index) : this.findLastFocusedItemIndex();\n\n                this.changeFocusedItemInfo(event, itemIndex);\n                event.preventDefault();\n            }\n        },\n        onArrowLeftKey(event) {\n            const processedItem = this.findVisibleItem(this.focusedItemInfo.index);\n            const grouped = this.isProccessedItemGroup(processedItem);\n\n            if (grouped) {\n                if (this.horizontal) {\n                    const itemIndex = this.focusedItemInfo.index !== -1 ? this.findPrevItemIndex(this.focusedItemInfo.index) : this.findLastFocusedItemIndex();\n\n                    this.changeFocusedItemInfo(event, itemIndex);\n                }\n            } else {\n                if (this.vertical && isNotEmpty(this.activeItem)) {\n                    if (processedItem.columnIndex === 0) {\n                        this.focusedItemInfo = { index: this.activeItem.index, key: this.activeItem.key, parentKey: this.activeItem.parentKey };\n                        this.activeItem = null;\n                    }\n                }\n\n                const columnIndex = processedItem.columnIndex - 1;\n                const itemIndex = this.visibleItems.findIndex((item) => item.columnIndex === columnIndex);\n\n                itemIndex !== -1 && this.changeFocusedItemInfo(event, itemIndex);\n            }\n\n            event.preventDefault();\n        },\n        onArrowRightKey(event) {\n            const processedItem = this.findVisibleItem(this.focusedItemInfo.index);\n            const grouped = this.isProccessedItemGroup(processedItem);\n\n            if (grouped) {\n                if (this.vertical) {\n                    if (isNotEmpty(this.activeItem) && this.activeItem.key === processedItem.key) {\n                        this.focusedItemInfo = { index: -1, key: '', parentKey: this.activeItem.key };\n                    } else {\n                        const processedItem = this.findVisibleItem(this.focusedItemInfo.index);\n                        const grouped = this.isProccessedItemGroup(processedItem);\n\n                        if (grouped) {\n                            this.onItemChange({ originalEvent: event, processedItem });\n                            this.focusedItemInfo = { index: -1, key: processedItem.key, parentKey: processedItem.parentKey };\n                            this.searchValue = '';\n                        }\n                    }\n                }\n\n                const itemIndex = this.focusedItemInfo.index !== -1 ? this.findNextItemIndex(this.focusedItemInfo.index) : this.findFirstFocusedItemIndex();\n\n                this.changeFocusedItemInfo(event, itemIndex);\n            } else {\n                const columnIndex = processedItem.columnIndex + 1;\n                const itemIndex = this.visibleItems.findIndex((item) => item.columnIndex === columnIndex);\n\n                itemIndex !== -1 && this.changeFocusedItemInfo(event, itemIndex);\n            }\n\n            event.preventDefault();\n        },\n        onHomeKey(event) {\n            this.changeFocusedItemInfo(event, this.findFirstItemIndex());\n            event.preventDefault();\n        },\n        onEndKey(event) {\n            this.changeFocusedItemInfo(event, this.findLastItemIndex());\n            event.preventDefault();\n        },\n        onEnterKey(event) {\n            if (this.focusedItemInfo.index !== -1) {\n                const element = findSingle(this.menubar, `li[id=\"${`${this.focusedItemId}`}\"]`);\n                const anchorElement = element && findSingle(element, 'a[data-pc-section=\"itemlink\"]');\n\n                anchorElement ? anchorElement.click() : element && element.click();\n\n                const processedItem = this.visibleItems[this.focusedItemInfo.index];\n                const grouped = this.isProccessedItemGroup(processedItem);\n\n                !grouped && this.changeFocusedItemInfo(event, this.findFirstFocusedItemIndex());\n            }\n\n            event.preventDefault();\n        },\n        onSpaceKey(event) {\n            this.onEnterKey(event);\n        },\n        onEscapeKey(event) {\n            if (isNotEmpty(this.activeItem)) {\n                this.focusedItemInfo = { index: this.activeItem.index, key: this.activeItem.key };\n                this.activeItem = null;\n            }\n\n            event.preventDefault();\n        },\n        onTabKey(event) {\n            if (this.focusedItemInfo.index !== -1) {\n                const processedItem = this.findVisibleItem(this.focusedItemInfo.index);\n                const grouped = this.isProccessedItemGroup(processedItem);\n\n                !grouped && this.onItemChange({ originalEvent: event, processedItem });\n            }\n\n            this.hide();\n        },\n        bindOutsideClickListener() {\n            if (!this.outsideClickListener) {\n                this.outsideClickListener = (event) => {\n                    const isOutsideContainer = this.container && !this.container.contains(event.target);\n                    const isOutsideTarget = !(this.target && (this.target === event.target || this.target.contains(event.target)));\n\n                    if (isOutsideContainer && isOutsideTarget) {\n                        this.hide();\n                    }\n                };\n\n                document.addEventListener('click', this.outsideClickListener);\n            }\n        },\n        unbindOutsideClickListener() {\n            if (this.outsideClickListener) {\n                document.removeEventListener('click', this.outsideClickListener);\n                this.outsideClickListener = null;\n            }\n        },\n        bindResizeListener() {\n            if (!this.resizeListener) {\n                this.resizeListener = (event) => {\n                    if (!isTouchDevice()) {\n                        this.hide(event, true);\n                    }\n\n                    this.mobileActive = false;\n                };\n\n                window.addEventListener('resize', this.resizeListener);\n            }\n        },\n        unbindResizeListener() {\n            if (this.resizeListener) {\n                window.removeEventListener('resize', this.resizeListener);\n                this.resizeListener = null;\n            }\n        },\n        bindMatchMediaListener() {\n            if (!this.matchMediaListener) {\n                const query = matchMedia(`(max-width: ${this.breakpoint})`);\n\n                this.query = query;\n                this.queryMatches = query.matches;\n\n                this.matchMediaListener = () => {\n                    this.queryMatches = query.matches;\n                    this.mobileActive = false;\n                };\n\n                this.query.addEventListener('change', this.matchMediaListener);\n            }\n        },\n        unbindMatchMediaListener() {\n            if (this.matchMediaListener) {\n                this.query.removeEventListener('change', this.matchMediaListener);\n                this.matchMediaListener = null;\n            }\n        },\n        isItemMatched(processedItem) {\n            return this.isValidItem(processedItem) && this.getProccessedItemLabel(processedItem)?.toLocaleLowerCase().startsWith(this.searchValue.toLocaleLowerCase());\n        },\n        isValidItem(processedItem) {\n            return !!processedItem && !this.isItemDisabled(processedItem.item) && !this.isItemSeparator(processedItem.item) && this.isItemVisible(processedItem.item);\n        },\n        isValidSelectedItem(processedItem) {\n            return this.isValidItem(processedItem) && this.isSelected(processedItem);\n        },\n        isSelected(processedItem) {\n            return isNotEmpty(this.activeItem) ? this.activeItem.key === processedItem.key : false;\n        },\n        findFirstItemIndex() {\n            return this.visibleItems.findIndex((processedItem) => this.isValidItem(processedItem));\n        },\n        findLastItemIndex() {\n            return findLastIndex(this.visibleItems, (processedItem) => this.isValidItem(processedItem));\n        },\n        findNextItemIndex(index) {\n            const matchedItemIndex = index < this.visibleItems.length - 1 ? this.visibleItems.slice(index + 1).findIndex((processedItem) => this.isValidItem(processedItem)) : -1;\n\n            return matchedItemIndex > -1 ? matchedItemIndex + index + 1 : index;\n        },\n        findPrevItemIndex(index) {\n            const matchedItemIndex = index > 0 ? findLastIndex(this.visibleItems.slice(0, index), (processedItem) => this.isValidItem(processedItem)) : -1;\n\n            return matchedItemIndex > -1 ? matchedItemIndex : index;\n        },\n        findSelectedItemIndex() {\n            return this.visibleItems.findIndex((processedItem) => this.isValidSelectedItem(processedItem));\n        },\n        findFirstFocusedItemIndex() {\n            const selectedIndex = this.findSelectedItemIndex();\n\n            return selectedIndex < 0 ? this.findFirstItemIndex() : selectedIndex;\n        },\n        findLastFocusedItemIndex() {\n            const selectedIndex = this.findSelectedItemIndex();\n\n            return selectedIndex < 0 ? this.findLastItemIndex() : selectedIndex;\n        },\n        findVisibleItem(index) {\n            return isNotEmpty(this.visibleItems) ? this.visibleItems[index] : null;\n        },\n        searchItems(event, char) {\n            this.searchValue = (this.searchValue || '') + char;\n\n            let itemIndex = -1;\n            let matched = false;\n\n            if (this.focusedItemInfo.index !== -1) {\n                itemIndex = this.visibleItems.slice(this.focusedItemInfo.index).findIndex((processedItem) => this.isItemMatched(processedItem));\n                itemIndex = itemIndex === -1 ? this.visibleItems.slice(0, this.focusedItemInfo.index).findIndex((processedItem) => this.isItemMatched(processedItem)) : itemIndex + this.focusedItemInfo.index;\n            } else {\n                itemIndex = this.visibleItems.findIndex((processedItem) => this.isItemMatched(processedItem));\n            }\n\n            if (itemIndex !== -1) {\n                matched = true;\n            }\n\n            if (itemIndex === -1 && this.focusedItemInfo.index === -1) {\n                itemIndex = this.findFirstFocusedItemIndex();\n            }\n\n            if (itemIndex !== -1) {\n                this.changeFocusedItemInfo(event, itemIndex);\n            }\n\n            if (this.searchTimeout) {\n                clearTimeout(this.searchTimeout);\n            }\n\n            this.searchTimeout = setTimeout(() => {\n                this.searchValue = '';\n                this.searchTimeout = null;\n            }, 500);\n\n            return matched;\n        },\n        changeFocusedItemInfo(event, index) {\n            const processedItem = this.findVisibleItem(index);\n\n            this.focusedItemInfo.index = index;\n            this.focusedItemInfo.key = isNotEmpty(processedItem) ? processedItem.key : '';\n            this.scrollInView();\n        },\n        scrollInView(index = -1) {\n            const id = index !== -1 ? `${this.id}_${index}` : this.focusedItemId;\n            let element;\n\n            if (id === null && this.queryMatches) {\n                element = this.$refs.menubutton;\n            } else {\n                element = findSingle(this.menubar, `li[id=\"${id}\"]`);\n            }\n\n            if (element) {\n                element.scrollIntoView && element.scrollIntoView({ block: 'nearest', inline: 'nearest', behavior: 'smooth' });\n            }\n        },\n        createProcessedItems(items, level = 0, parent = {}, parentKey = '', columnIndex) {\n            const processedItems = [];\n\n            items &&\n                items.forEach((item, index) => {\n                    const key = (parentKey !== '' ? parentKey + '_' : '') + (columnIndex !== undefined ? columnIndex + '_' : '') + index;\n                    const newItem = {\n                        item,\n                        index,\n                        level,\n                        key,\n                        parent,\n                        parentKey,\n                        columnIndex: columnIndex !== undefined ? columnIndex : parent.columnIndex !== undefined ? parent.columnIndex : index\n                    };\n\n                    newItem['items'] =\n                        level === 0 && item.items && item.items.length > 0 ? item.items.map((_items, _index) => this.createProcessedItems(_items, level + 1, newItem, key, _index)) : this.createProcessedItems(item.items, level + 1, newItem, key);\n                    processedItems.push(newItem);\n                });\n\n            return processedItems;\n        },\n        containerRef(el) {\n            this.container = el;\n        },\n        menubarRef(el) {\n            this.menubar = el ? el.$el : undefined;\n        }\n    },\n    computed: {\n        processedItems() {\n            return this.createProcessedItems(this.model || []);\n        },\n        visibleItems() {\n            const processedItem = isNotEmpty(this.activeItem) ? this.activeItem : null;\n\n            return processedItem && processedItem.key === this.focusedItemInfo.parentKey\n                ? processedItem.items.reduce((items, col) => {\n                      col.forEach((submenu) => {\n                          submenu.items.forEach((a) => {\n                              items.push(a);\n                          });\n                      });\n\n                      return items;\n                  }, [])\n                : this.processedItems;\n        },\n        horizontal() {\n            return this.orientation === 'horizontal';\n        },\n        vertical() {\n            return this.orientation === 'vertical';\n        },\n        focusedItemId() {\n            return isNotEmpty(this.focusedItemInfo.key) ? `${this.id}_${this.focusedItemInfo.key}` : null;\n        }\n    },\n    components: {\n        MegaMenuSub: MegaMenuSub,\n        BarsIcon: BarsIcon\n    }\n};\n</script>\n","<template>\n    <div :ref=\"containerRef\" :id=\"id\" :class=\"cx('root')\" v-bind=\"ptmi('root')\">\n        <div v-if=\"$slots.start\" :class=\"cx('start')\" v-bind=\"ptm('start')\">\n            <slot name=\"start\"></slot>\n        </div>\n        <!--TODO: menubutton deprecated since v4.0. Use button-->\n        <slot :id=\"id\" :name=\"$slots.button ? 'button' : 'menubutton'\" :class=\"cx('button')\" :toggleCallback=\"(event) => menuButtonClick(event)\">\n            <a\n                v-if=\"model && model.length > 0\"\n                ref=\"menubutton\"\n                role=\"button\"\n                tabindex=\"0\"\n                :class=\"cx('button')\"\n                :aria-haspopup=\"model.length && model.length > 0 ? true : false\"\n                :aria-expanded=\"mobileActive\"\n                :aria-controls=\"id\"\n                :aria-label=\"$primevue.config.locale.aria?.navigation\"\n                @click=\"menuButtonClick($event)\"\n                @keydown=\"menuButtonKeydown($event)\"\n                v-bind=\"ptm('button')\"\n            >\n                <!--TODO: menubuttonicon deprecated since v4.0. Use buttonicon-->\n                <slot :name=\"$slots.buttonicon ? 'buttonicon' : 'menubuttonicon'\">\n                    <BarsIcon v-bind=\"ptm('buttonIcon')\" />\n                </slot>\n            </a>\n        </slot>\n        <MegaMenuSub\n            :ref=\"menubarRef\"\n            :id=\"id + '_list'\"\n            :tabindex=\"!disabled ? tabindex : -1\"\n            role=\"menubar\"\n            :aria-label=\"ariaLabel\"\n            :aria-labelledby=\"ariaLabelledby\"\n            :aria-disabled=\"disabled || undefined\"\n            :aria-orientation=\"orientation\"\n            :aria-activedescendant=\"focused ? focusedItemId : undefined\"\n            :menuId=\"id\"\n            :focusedItemId=\"focused ? focusedItemId : undefined\"\n            :items=\"processedItems\"\n            :horizontal=\"horizontal\"\n            :templates=\"$slots\"\n            :activeItem=\"activeItem\"\n            :mobileActive=\"mobileActive\"\n            :level=\"0\"\n            :style=\"sx('rootList')\"\n            :pt=\"pt\"\n            :unstyled=\"unstyled\"\n            @focus=\"onFocus\"\n            @blur=\"onBlur\"\n            @keydown=\"onKeyDown\"\n            @item-click=\"onItemClick\"\n            @item-mouseenter=\"onItemMouseEnter\"\n        />\n        <div v-if=\"$slots.end\" :class=\"cx('end')\" v-bind=\"ptm('end')\">\n            <slot name=\"end\"></slot>\n        </div>\n    </div>\n</template>\n\n<script>\nimport { findSingle, focus, isTouchDevice } from '@primeuix/utils/dom';\nimport { findLastIndex, isEmpty, isNotEmpty, isPrintableCharacter, resolve } from '@primeuix/utils/object';\nimport { ZIndex } from '@primeuix/utils/zindex';\nimport { UniqueComponentId } from '@primevue/core/utils';\nimport BarsIcon from '@primevue/icons/bars';\nimport BaseMegaMenu from './BaseMegaMenu.vue';\nimport MegaMenuSub from './MegaMenuSub.vue';\n\nexport default {\n    name: 'MegaMenu',\n    extends: BaseMegaMenu,\n    inheritAttrs: false,\n    emits: ['focus', 'blur'],\n    outsideClickListener: null,\n    resizeListener: null,\n    matchMediaListener: null,\n    container: null,\n    menubar: null,\n    searchTimeout: null,\n    searchValue: null,\n    data() {\n        return {\n            id: this.$attrs.id,\n            mobileActive: false,\n            focused: false,\n            focusedItemInfo: { index: -1, key: '', parentKey: '' },\n            activeItem: null,\n            dirty: false,\n            query: null,\n            queryMatches: false\n        };\n    },\n    watch: {\n        '$attrs.id': function (newValue) {\n            this.id = newValue || UniqueComponentId();\n        },\n        activeItem(newItem) {\n            if (isNotEmpty(newItem)) {\n                this.bindOutsideClickListener();\n                this.bindResizeListener();\n            } else {\n                this.unbindOutsideClickListener();\n                this.unbindResizeListener();\n            }\n        }\n    },\n    mounted() {\n        this.id = this.id || UniqueComponentId();\n        this.bindMatchMediaListener();\n    },\n    beforeUnmount() {\n        this.mobileActive = false;\n        this.unbindOutsideClickListener();\n        this.unbindResizeListener();\n        this.unbindMatchMediaListener();\n    },\n    methods: {\n        getItemProp(item, name) {\n            return item ? resolve(item[name]) : undefined;\n        },\n        getItemLabel(item) {\n            return this.getItemProp(item, 'label');\n        },\n        isItemDisabled(item) {\n            return this.getItemProp(item, 'disabled');\n        },\n        isItemVisible(item) {\n            return this.getItemProp(item, 'visible') !== false;\n        },\n        isItemGroup(item) {\n            return isNotEmpty(this.getItemProp(item, 'items'));\n        },\n        isItemSeparator(item) {\n            return this.getItemProp(item, 'separator');\n        },\n        getProccessedItemLabel(processedItem) {\n            return processedItem ? this.getItemLabel(processedItem.item) : undefined;\n        },\n        isProccessedItemGroup(processedItem) {\n            return processedItem && isNotEmpty(processedItem.items);\n        },\n        toggle(event) {\n            if (this.mobileActive) {\n                this.mobileActive = false;\n                ZIndex.clear(this.menubar);\n                this.hide();\n            } else {\n                this.mobileActive = true;\n                ZIndex.set('menu', this.menubar, this.$primevue.config.zIndex.menu);\n                setTimeout(() => {\n                    this.show();\n                }, 1);\n            }\n\n            this.bindOutsideClickListener();\n            event.preventDefault();\n        },\n        show() {\n            this.focusedItemInfo = { index: this.findFirstFocusedItemIndex(), level: 0, parentKey: '' };\n\n            focus(this.menubar);\n        },\n        hide(event, isFocus) {\n            if (this.mobileActive) {\n                this.mobileActive = false;\n                setTimeout(() => {\n                    focus(this.$refs.menubutton, { preventScroll: true });\n                }, 1);\n            }\n\n            this.activeItem = null;\n            this.focusedItemInfo = { index: -1, key: '', parentKey: '' };\n\n            isFocus && focus(this.menubar);\n            this.dirty = false;\n        },\n        onFocus(event) {\n            this.focused = true;\n\n            if (this.focusedItemInfo.index === -1) {\n                const index = this.findFirstFocusedItemIndex();\n                const processedItem = this.findVisibleItem(index);\n\n                this.focusedItemInfo = { index, key: processedItem.key, parentKey: processedItem.parentKey };\n            }\n\n            this.$emit('focus', event);\n        },\n        onBlur(event) {\n            this.focused = false;\n            this.focusedItemInfo = { index: -1, key: '', parentKey: '' };\n            this.searchValue = '';\n            this.dirty = false;\n            this.$emit('blur', event);\n        },\n        onKeyDown(event) {\n            if (this.disabled) {\n                event.preventDefault();\n\n                return;\n            }\n\n            const metaKey = event.metaKey || event.ctrlKey;\n\n            switch (event.code) {\n                case 'ArrowDown':\n                    this.onArrowDownKey(event);\n                    break;\n\n                case 'ArrowUp':\n                    this.onArrowUpKey(event);\n                    break;\n\n                case 'ArrowLeft':\n                    this.onArrowLeftKey(event);\n                    break;\n\n                case 'ArrowRight':\n                    this.onArrowRightKey(event);\n                    break;\n\n                case 'Home':\n                    this.onHomeKey(event);\n                    break;\n\n                case 'End':\n                    this.onEndKey(event);\n                    break;\n\n                case 'Space':\n                    this.onSpaceKey(event);\n                    break;\n\n                case 'Enter':\n                case 'NumpadEnter':\n                    this.onEnterKey(event);\n                    break;\n\n                case 'Escape':\n                    this.onEscapeKey(event);\n                    break;\n\n                case 'Tab':\n                    this.onTabKey(event);\n                    break;\n\n                case 'PageDown':\n                case 'PageUp':\n                case 'Backspace':\n                case 'ShiftLeft':\n                case 'ShiftRight':\n                    //NOOP\n                    break;\n\n                default:\n                    if (!metaKey && isPrintableCharacter(event.key)) {\n                        this.searchItems(event, event.key);\n                    }\n\n                    break;\n            }\n        },\n        onItemChange(event) {\n            const { processedItem, isFocus } = event;\n\n            if (isEmpty(processedItem)) return;\n\n            const { index, key, parentKey, items } = processedItem;\n            const grouped = isNotEmpty(items);\n\n            grouped && (this.activeItem = processedItem);\n            this.focusedItemInfo = { index, key, parentKey };\n\n            grouped && (this.dirty = true);\n            isFocus && focus(this.menubar);\n        },\n        onItemClick(event) {\n            const { originalEvent, processedItem } = event;\n            const grouped = this.isProccessedItemGroup(processedItem);\n            const root = isEmpty(processedItem.parent);\n            const selected = this.isSelected(processedItem);\n\n            if (selected) {\n                const { index, key, parentKey } = processedItem;\n\n                this.activeItem = null;\n                this.focusedItemInfo = { index, key, parentKey };\n\n                this.dirty = !root;\n\n                if (!this.mobileActive) {\n                    focus(this.menubar, { preventScroll: true });\n                }\n            } else {\n                if (grouped) {\n                    this.onItemChange(event);\n                } else {\n                    this.hide(originalEvent);\n                }\n            }\n        },\n        onItemMouseEnter(event) {\n            if (!this.mobileActive && this.dirty) {\n                this.onItemChange(event);\n            }\n        },\n        menuButtonClick(event) {\n            this.toggle(event);\n        },\n        menuButtonKeydown(event) {\n            (event.code === 'Enter' || event.code === 'NumpadEnter' || event.code === 'Space') && this.menuButtonClick(event);\n        },\n        onArrowDownKey(event) {\n            if (this.horizontal) {\n                if (isNotEmpty(this.activeItem) && this.activeItem.key === this.focusedItemInfo.key) {\n                    this.focusedItemInfo = { index: -1, key: '', parentKey: this.activeItem.key };\n                } else {\n                    const processedItem = this.findVisibleItem(this.focusedItemInfo.index);\n                    const grouped = this.isProccessedItemGroup(processedItem);\n\n                    if (grouped) {\n                        this.onItemChange({ originalEvent: event, processedItem });\n                        this.focusedItemInfo = { index: -1, key: processedItem.key, parentKey: processedItem.parentKey };\n                        this.searchValue = '';\n                    }\n                }\n            }\n\n            const itemIndex = this.focusedItemInfo.index !== -1 ? this.findNextItemIndex(this.focusedItemInfo.index) : this.findFirstFocusedItemIndex();\n\n            this.changeFocusedItemInfo(event, itemIndex);\n            event.preventDefault();\n        },\n        onArrowUpKey(event) {\n            if (event.altKey && this.horizontal) {\n                if (this.focusedItemInfo.index !== -1) {\n                    const processedItem = this.findVisibleItem(this.focusedItemInfo.index);\n                    const grouped = this.isProccessedItemGroup(processedItem);\n\n                    if (!grouped && isNotEmpty(this.activeItem)) {\n                        if (this.focusedItemInfo.index === 0) {\n                            this.focusedItemInfo = { index: this.activeItem.index, key: this.activeItem.key, parentKey: this.activeItem.parentKey };\n                            this.activeItem = null;\n                        } else {\n                            this.changeFocusedItemInfo(event, this.findFirstItemIndex());\n                        }\n                    }\n                }\n\n                event.preventDefault();\n            } else {\n                const itemIndex = this.focusedItemInfo.index !== -1 ? this.findPrevItemIndex(this.focusedItemInfo.index) : this.findLastFocusedItemIndex();\n\n                this.changeFocusedItemInfo(event, itemIndex);\n                event.preventDefault();\n            }\n        },\n        onArrowLeftKey(event) {\n            const processedItem = this.findVisibleItem(this.focusedItemInfo.index);\n            const grouped = this.isProccessedItemGroup(processedItem);\n\n            if (grouped) {\n                if (this.horizontal) {\n                    const itemIndex = this.focusedItemInfo.index !== -1 ? this.findPrevItemIndex(this.focusedItemInfo.index) : this.findLastFocusedItemIndex();\n\n                    this.changeFocusedItemInfo(event, itemIndex);\n                }\n            } else {\n                if (this.vertical && isNotEmpty(this.activeItem)) {\n                    if (processedItem.columnIndex === 0) {\n                        this.focusedItemInfo = { index: this.activeItem.index, key: this.activeItem.key, parentKey: this.activeItem.parentKey };\n                        this.activeItem = null;\n                    }\n                }\n\n                const columnIndex = processedItem.columnIndex - 1;\n                const itemIndex = this.visibleItems.findIndex((item) => item.columnIndex === columnIndex);\n\n                itemIndex !== -1 && this.changeFocusedItemInfo(event, itemIndex);\n            }\n\n            event.preventDefault();\n        },\n        onArrowRightKey(event) {\n            const processedItem = this.findVisibleItem(this.focusedItemInfo.index);\n            const grouped = this.isProccessedItemGroup(processedItem);\n\n            if (grouped) {\n                if (this.vertical) {\n                    if (isNotEmpty(this.activeItem) && this.activeItem.key === processedItem.key) {\n                        this.focusedItemInfo = { index: -1, key: '', parentKey: this.activeItem.key };\n                    } else {\n                        const processedItem = this.findVisibleItem(this.focusedItemInfo.index);\n                        const grouped = this.isProccessedItemGroup(processedItem);\n\n                        if (grouped) {\n                            this.onItemChange({ originalEvent: event, processedItem });\n                            this.focusedItemInfo = { index: -1, key: processedItem.key, parentKey: processedItem.parentKey };\n                            this.searchValue = '';\n                        }\n                    }\n                }\n\n                const itemIndex = this.focusedItemInfo.index !== -1 ? this.findNextItemIndex(this.focusedItemInfo.index) : this.findFirstFocusedItemIndex();\n\n                this.changeFocusedItemInfo(event, itemIndex);\n            } else {\n                const columnIndex = processedItem.columnIndex + 1;\n                const itemIndex = this.visibleItems.findIndex((item) => item.columnIndex === columnIndex);\n\n                itemIndex !== -1 && this.changeFocusedItemInfo(event, itemIndex);\n            }\n\n            event.preventDefault();\n        },\n        onHomeKey(event) {\n            this.changeFocusedItemInfo(event, this.findFirstItemIndex());\n            event.preventDefault();\n        },\n        onEndKey(event) {\n            this.changeFocusedItemInfo(event, this.findLastItemIndex());\n            event.preventDefault();\n        },\n        onEnterKey(event) {\n            if (this.focusedItemInfo.index !== -1) {\n                const element = findSingle(this.menubar, `li[id=\"${`${this.focusedItemId}`}\"]`);\n                const anchorElement = element && findSingle(element, 'a[data-pc-section=\"itemlink\"]');\n\n                anchorElement ? anchorElement.click() : element && element.click();\n\n                const processedItem = this.visibleItems[this.focusedItemInfo.index];\n                const grouped = this.isProccessedItemGroup(processedItem);\n\n                !grouped && this.changeFocusedItemInfo(event, this.findFirstFocusedItemIndex());\n            }\n\n            event.preventDefault();\n        },\n        onSpaceKey(event) {\n            this.onEnterKey(event);\n        },\n        onEscapeKey(event) {\n            if (isNotEmpty(this.activeItem)) {\n                this.focusedItemInfo = { index: this.activeItem.index, key: this.activeItem.key };\n                this.activeItem = null;\n            }\n\n            event.preventDefault();\n        },\n        onTabKey(event) {\n            if (this.focusedItemInfo.index !== -1) {\n                const processedItem = this.findVisibleItem(this.focusedItemInfo.index);\n                const grouped = this.isProccessedItemGroup(processedItem);\n\n                !grouped && this.onItemChange({ originalEvent: event, processedItem });\n            }\n\n            this.hide();\n        },\n        bindOutsideClickListener() {\n            if (!this.outsideClickListener) {\n                this.outsideClickListener = (event) => {\n                    const isOutsideContainer = this.container && !this.container.contains(event.target);\n                    const isOutsideTarget = !(this.target && (this.target === event.target || this.target.contains(event.target)));\n\n                    if (isOutsideContainer && isOutsideTarget) {\n                        this.hide();\n                    }\n                };\n\n                document.addEventListener('click', this.outsideClickListener);\n            }\n        },\n        unbindOutsideClickListener() {\n            if (this.outsideClickListener) {\n                document.removeEventListener('click', this.outsideClickListener);\n                this.outsideClickListener = null;\n            }\n        },\n        bindResizeListener() {\n            if (!this.resizeListener) {\n                this.resizeListener = (event) => {\n                    if (!isTouchDevice()) {\n                        this.hide(event, true);\n                    }\n\n                    this.mobileActive = false;\n                };\n\n                window.addEventListener('resize', this.resizeListener);\n            }\n        },\n        unbindResizeListener() {\n            if (this.resizeListener) {\n                window.removeEventListener('resize', this.resizeListener);\n                this.resizeListener = null;\n            }\n        },\n        bindMatchMediaListener() {\n            if (!this.matchMediaListener) {\n                const query = matchMedia(`(max-width: ${this.breakpoint})`);\n\n                this.query = query;\n                this.queryMatches = query.matches;\n\n                this.matchMediaListener = () => {\n                    this.queryMatches = query.matches;\n                    this.mobileActive = false;\n                };\n\n                this.query.addEventListener('change', this.matchMediaListener);\n            }\n        },\n        unbindMatchMediaListener() {\n            if (this.matchMediaListener) {\n                this.query.removeEventListener('change', this.matchMediaListener);\n                this.matchMediaListener = null;\n            }\n        },\n        isItemMatched(processedItem) {\n            return this.isValidItem(processedItem) && this.getProccessedItemLabel(processedItem)?.toLocaleLowerCase().startsWith(this.searchValue.toLocaleLowerCase());\n        },\n        isValidItem(processedItem) {\n            return !!processedItem && !this.isItemDisabled(processedItem.item) && !this.isItemSeparator(processedItem.item) && this.isItemVisible(processedItem.item);\n        },\n        isValidSelectedItem(processedItem) {\n            return this.isValidItem(processedItem) && this.isSelected(processedItem);\n        },\n        isSelected(processedItem) {\n            return isNotEmpty(this.activeItem) ? this.activeItem.key === processedItem.key : false;\n        },\n        findFirstItemIndex() {\n            return this.visibleItems.findIndex((processedItem) => this.isValidItem(processedItem));\n        },\n        findLastItemIndex() {\n            return findLastIndex(this.visibleItems, (processedItem) => this.isValidItem(processedItem));\n        },\n        findNextItemIndex(index) {\n            const matchedItemIndex = index < this.visibleItems.length - 1 ? this.visibleItems.slice(index + 1).findIndex((processedItem) => this.isValidItem(processedItem)) : -1;\n\n            return matchedItemIndex > -1 ? matchedItemIndex + index + 1 : index;\n        },\n        findPrevItemIndex(index) {\n            const matchedItemIndex = index > 0 ? findLastIndex(this.visibleItems.slice(0, index), (processedItem) => this.isValidItem(processedItem)) : -1;\n\n            return matchedItemIndex > -1 ? matchedItemIndex : index;\n        },\n        findSelectedItemIndex() {\n            return this.visibleItems.findIndex((processedItem) => this.isValidSelectedItem(processedItem));\n        },\n        findFirstFocusedItemIndex() {\n            const selectedIndex = this.findSelectedItemIndex();\n\n            return selectedIndex < 0 ? this.findFirstItemIndex() : selectedIndex;\n        },\n        findLastFocusedItemIndex() {\n            const selectedIndex = this.findSelectedItemIndex();\n\n            return selectedIndex < 0 ? this.findLastItemIndex() : selectedIndex;\n        },\n        findVisibleItem(index) {\n            return isNotEmpty(this.visibleItems) ? this.visibleItems[index] : null;\n        },\n        searchItems(event, char) {\n            this.searchValue = (this.searchValue || '') + char;\n\n            let itemIndex = -1;\n            let matched = false;\n\n            if (this.focusedItemInfo.index !== -1) {\n                itemIndex = this.visibleItems.slice(this.focusedItemInfo.index).findIndex((processedItem) => this.isItemMatched(processedItem));\n                itemIndex = itemIndex === -1 ? this.visibleItems.slice(0, this.focusedItemInfo.index).findIndex((processedItem) => this.isItemMatched(processedItem)) : itemIndex + this.focusedItemInfo.index;\n            } else {\n                itemIndex = this.visibleItems.findIndex((processedItem) => this.isItemMatched(processedItem));\n            }\n\n            if (itemIndex !== -1) {\n                matched = true;\n            }\n\n            if (itemIndex === -1 && this.focusedItemInfo.index === -1) {\n                itemIndex = this.findFirstFocusedItemIndex();\n            }\n\n            if (itemIndex !== -1) {\n                this.changeFocusedItemInfo(event, itemIndex);\n            }\n\n            if (this.searchTimeout) {\n                clearTimeout(this.searchTimeout);\n            }\n\n            this.searchTimeout = setTimeout(() => {\n                this.searchValue = '';\n                this.searchTimeout = null;\n            }, 500);\n\n            return matched;\n        },\n        changeFocusedItemInfo(event, index) {\n            const processedItem = this.findVisibleItem(index);\n\n            this.focusedItemInfo.index = index;\n            this.focusedItemInfo.key = isNotEmpty(processedItem) ? processedItem.key : '';\n            this.scrollInView();\n        },\n        scrollInView(index = -1) {\n            const id = index !== -1 ? `${this.id}_${index}` : this.focusedItemId;\n            let element;\n\n            if (id === null && this.queryMatches) {\n                element = this.$refs.menubutton;\n            } else {\n                element = findSingle(this.menubar, `li[id=\"${id}\"]`);\n            }\n\n            if (element) {\n                element.scrollIntoView && element.scrollIntoView({ block: 'nearest', inline: 'nearest', behavior: 'smooth' });\n            }\n        },\n        createProcessedItems(items, level = 0, parent = {}, parentKey = '', columnIndex) {\n            const processedItems = [];\n\n            items &&\n                items.forEach((item, index) => {\n                    const key = (parentKey !== '' ? parentKey + '_' : '') + (columnIndex !== undefined ? columnIndex + '_' : '') + index;\n                    const newItem = {\n                        item,\n                        index,\n                        level,\n                        key,\n                        parent,\n                        parentKey,\n                        columnIndex: columnIndex !== undefined ? columnIndex : parent.columnIndex !== undefined ? parent.columnIndex : index\n                    };\n\n                    newItem['items'] =\n                        level === 0 && item.items && item.items.length > 0 ? item.items.map((_items, _index) => this.createProcessedItems(_items, level + 1, newItem, key, _index)) : this.createProcessedItems(item.items, level + 1, newItem, key);\n                    processedItems.push(newItem);\n                });\n\n            return processedItems;\n        },\n        containerRef(el) {\n            this.container = el;\n        },\n        menubarRef(el) {\n            this.menubar = el ? el.$el : undefined;\n        }\n    },\n    computed: {\n        processedItems() {\n            return this.createProcessedItems(this.model || []);\n        },\n        visibleItems() {\n            const processedItem = isNotEmpty(this.activeItem) ? this.activeItem : null;\n\n            return processedItem && processedItem.key === this.focusedItemInfo.parentKey\n                ? processedItem.items.reduce((items, col) => {\n                      col.forEach((submenu) => {\n                          submenu.items.forEach((a) => {\n                              items.push(a);\n                          });\n                      });\n\n                      return items;\n                  }, [])\n                : this.processedItems;\n        },\n        horizontal() {\n            return this.orientation === 'horizontal';\n        },\n        vertical() {\n            return this.orientation === 'vertical';\n        },\n        focusedItemId() {\n            return isNotEmpty(this.focusedItemInfo.key) ? `${this.id}_${this.focusedItemInfo.key}` : null;\n        }\n    },\n    components: {\n        MegaMenuSub: MegaMenuSub,\n        BarsIcon: BarsIcon\n    }\n};\n</script>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}