{"ast":null,"code":"import { mergeProps, openBlock, createElementBlock } from 'vue';\nimport BaseInput from '@primevue/core/baseinput';\nimport TextareaStyle from 'primevue/textarea/style';\nvar script$1 = {\n  name: 'BaseTextarea',\n  \"extends\": BaseInput,\n  props: {\n    autoResize: Boolean\n  },\n  style: TextareaStyle,\n  provide: function provide() {\n    return {\n      $pcTextarea: this,\n      $parentInstance: this\n    };\n  }\n};\nvar script = {\n  name: 'Textarea',\n  \"extends\": script$1,\n  inheritAttrs: false,\n  observer: null,\n  mounted: function mounted() {\n    var _this = this;\n    if (this.autoResize) {\n      this.observer = new ResizeObserver(function () {\n        _this.resize();\n      });\n      this.observer.observe(this.$el);\n    }\n  },\n  updated: function updated() {\n    if (this.autoResize) {\n      this.resize();\n    }\n  },\n  beforeUnmount: function beforeUnmount() {\n    if (this.observer) {\n      this.observer.disconnect();\n    }\n  },\n  methods: {\n    resize: function resize() {\n      if (!this.$el.offsetParent) return;\n      this.$el.style.height = 'auto';\n      this.$el.style.height = this.$el.scrollHeight + 'px';\n      if (parseFloat(this.$el.style.height) >= parseFloat(this.$el.style.maxHeight)) {\n        this.$el.style.overflowY = 'scroll';\n        this.$el.style.height = this.$el.style.maxHeight;\n      } else {\n        this.$el.style.overflow = 'hidden';\n      }\n    },\n    onInput: function onInput(event) {\n      if (this.autoResize) {\n        this.resize();\n      }\n      this.writeValue(event.target.value, event);\n    }\n  },\n  computed: {\n    attrs: function attrs() {\n      return mergeProps(this.ptmi('root', {\n        context: {\n          filled: this.$filled,\n          disabled: this.disabled\n        }\n      }), this.formField);\n    }\n  }\n};\nvar _hoisted_1 = [\"value\", \"disabled\", \"aria-invalid\"];\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  return openBlock(), createElementBlock(\"textarea\", mergeProps({\n    \"class\": _ctx.cx('root'),\n    value: _ctx.d_value,\n    disabled: _ctx.disabled,\n    \"aria-invalid\": _ctx.invalid || undefined,\n    onInput: _cache[0] || (_cache[0] = function () {\n      return $options.onInput && $options.onInput.apply($options, arguments);\n    })\n  }, $options.attrs), null, 16, _hoisted_1);\n}\nscript.render = render;\nexport { script as default };","map":{"version":3,"names":["script$1","name","BaseInput","props","autoResize","Boolean","style","TextareaStyle","provide","$pcTextarea","$parentInstance","script","inheritAttrs","observer","mounted","_this","ResizeObserver","resize","observe","$el","updated","beforeUnmount","disconnect","methods","offsetParent","height","scrollHeight","parseFloat","maxHeight","overflowY","overflow","onInput","event","writeValue","target","value","computed","attrs","mergeProps","ptmi","context","filled","$filled","disabled","formField","openBlock","createElementBlock","_ctx","cx","d_value","invalid","undefined","_cache","$options","apply","arguments","_hoisted_1"],"sources":["../../src/textarea/BaseTextarea.vue","../../src/textarea/Textarea.vue","../../src/textarea/Textarea.vue?vue&type=template&id=1950f9e4&lang.js"],"sourcesContent":["<script>\nimport BaseInput from '@primevue/core/baseinput';\nimport TextareaStyle from 'primevue/textarea/style';\n\nexport default {\n    name: 'BaseTextarea',\n    extends: BaseInput,\n    props: {\n        autoResize: Boolean\n    },\n    style: TextareaStyle,\n    provide() {\n        return {\n            $pcTextarea: this,\n            $parentInstance: this\n        };\n    }\n};\n</script>\n","<template>\n    <textarea :class=\"cx('root')\" :value=\"d_value\" :disabled=\"disabled\" :aria-invalid=\"invalid || undefined\" @input=\"onInput\" v-bind=\"attrs\"></textarea>\n</template>\n\n<script>\nimport { mergeProps } from 'vue';\nimport BaseTextarea from './BaseTextarea.vue';\n\nexport default {\n    name: 'Textarea',\n    extends: BaseTextarea,\n    inheritAttrs: false,\n    observer: null,\n    mounted() {\n        if (this.autoResize) {\n            this.observer = new ResizeObserver(() => {\n                this.resize();\n            });\n            this.observer.observe(this.$el);\n        }\n    },\n    updated() {\n        if (this.autoResize) {\n            this.resize();\n        }\n    },\n    beforeUnmount() {\n        if (this.observer) {\n            this.observer.disconnect();\n        }\n    },\n    methods: {\n        resize() {\n            if (!this.$el.offsetParent) return;\n\n            this.$el.style.height = 'auto';\n            this.$el.style.height = this.$el.scrollHeight + 'px';\n\n            if (parseFloat(this.$el.style.height) >= parseFloat(this.$el.style.maxHeight)) {\n                this.$el.style.overflowY = 'scroll';\n                this.$el.style.height = this.$el.style.maxHeight;\n            } else {\n                this.$el.style.overflow = 'hidden';\n            }\n        },\n        onInput(event) {\n            if (this.autoResize) {\n                this.resize();\n            }\n\n            this.writeValue(event.target.value, event);\n        }\n    },\n    computed: {\n        attrs() {\n            return mergeProps(\n                this.ptmi('root', {\n                    context: {\n                        filled: this.$filled,\n                        disabled: this.disabled\n                    }\n                }),\n                this.formField\n            );\n        }\n    }\n};\n</script>\n","<template>\n    <textarea :class=\"cx('root')\" :value=\"d_value\" :disabled=\"disabled\" :aria-invalid=\"invalid || undefined\" @input=\"onInput\" v-bind=\"attrs\"></textarea>\n</template>\n\n<script>\nimport { mergeProps } from 'vue';\nimport BaseTextarea from './BaseTextarea.vue';\n\nexport default {\n    name: 'Textarea',\n    extends: BaseTextarea,\n    inheritAttrs: false,\n    observer: null,\n    mounted() {\n        if (this.autoResize) {\n            this.observer = new ResizeObserver(() => {\n                this.resize();\n            });\n            this.observer.observe(this.$el);\n        }\n    },\n    updated() {\n        if (this.autoResize) {\n            this.resize();\n        }\n    },\n    beforeUnmount() {\n        if (this.observer) {\n            this.observer.disconnect();\n        }\n    },\n    methods: {\n        resize() {\n            if (!this.$el.offsetParent) return;\n\n            this.$el.style.height = 'auto';\n            this.$el.style.height = this.$el.scrollHeight + 'px';\n\n            if (parseFloat(this.$el.style.height) >= parseFloat(this.$el.style.maxHeight)) {\n                this.$el.style.overflowY = 'scroll';\n                this.$el.style.height = this.$el.style.maxHeight;\n            } else {\n                this.$el.style.overflow = 'hidden';\n            }\n        },\n        onInput(event) {\n            if (this.autoResize) {\n                this.resize();\n            }\n\n            this.writeValue(event.target.value, event);\n        }\n    },\n    computed: {\n        attrs() {\n            return mergeProps(\n                this.ptmi('root', {\n                    context: {\n                        filled: this.$filled,\n                        disabled: this.disabled\n                    }\n                }),\n                this.formField\n            );\n        }\n    }\n};\n</script>\n"],"mappings":";;;AAIA,IAAAA,QAAA,GAAe;EACXC,IAAI,EAAE,cAAc;EACpB,WAASC,SAAS;EAClBC,KAAK,EAAE;IACHC,UAAU,EAAEC;GACf;EACDC,KAAK,EAAEC,aAAa;EACpBC,OAAO,WAAPA,OAAOA,CAAA,EAAG;IACN,OAAO;MACHC,WAAW,EAAE,IAAI;MACjBC,eAAe,EAAE;KACpB;EACL;AACJ,CAAC;ACTD,IAAAC,MAAA,GAAe;EACXV,IAAI,EAAE,UAAU;EAChB,WAASD,QAAY;EACrBY,YAAY,EAAE,KAAK;EACnBC,QAAQ,EAAE,IAAI;EACdC,OAAO,WAAPA,OAAOA,CAAA,EAAG;IAAA,IAAAC,KAAA;IACN,IAAI,IAAI,CAACX,UAAU,EAAE;MACjB,IAAI,CAACS,QAAO,GAAI,IAAIG,cAAc,CAAC,YAAM;QACrCD,KAAI,CAACE,MAAM,EAAE;MACjB,CAAC,CAAC;MACF,IAAI,CAACJ,QAAQ,CAACK,OAAO,CAAC,IAAI,CAACC,GAAG,CAAC;IACnC;GACH;EACDC,OAAO,WAAPA,OAAOA,CAAA,EAAG;IACN,IAAI,IAAI,CAAChB,UAAU,EAAE;MACjB,IAAI,CAACa,MAAM,EAAE;IACjB;GACH;EACDI,aAAa,WAAbA,aAAaA,CAAA,EAAG;IACZ,IAAI,IAAI,CAACR,QAAQ,EAAE;MACf,IAAI,CAACA,QAAQ,CAACS,UAAU,EAAE;IAC9B;GACH;EACDC,OAAO,EAAE;IACLN,MAAM,WAANA,MAAMA,CAAA,EAAG;MACL,IAAI,CAAC,IAAI,CAACE,GAAG,CAACK,YAAY,EAAE;MAE5B,IAAI,CAACL,GAAG,CAACb,KAAK,CAACmB,MAAK,GAAI,MAAM;MAC9B,IAAI,CAACN,GAAG,CAACb,KAAK,CAACmB,MAAO,GAAE,IAAI,CAACN,GAAG,CAACO,YAAA,GAAe,IAAI;MAEpD,IAAIC,UAAU,CAAC,IAAI,CAACR,GAAG,CAACb,KAAK,CAACmB,MAAM,CAAE,IAAGE,UAAU,CAAC,IAAI,CAACR,GAAG,CAACb,KAAK,CAACsB,SAAS,CAAC,EAAE;QAC3E,IAAI,CAACT,GAAG,CAACb,KAAK,CAACuB,SAAU,GAAE,QAAQ;QACnC,IAAI,CAACV,GAAG,CAACb,KAAK,CAACmB,MAAA,GAAS,IAAI,CAACN,GAAG,CAACb,KAAK,CAACsB,SAAS;MACpD,CAAE,MAAK;QACH,IAAI,CAACT,GAAG,CAACb,KAAK,CAACwB,QAAS,GAAE,QAAQ;MACtC;KACH;IACDC,OAAO,EAAP,SAAAA,OAAOA,CAACC,KAAK,EAAE;MACX,IAAI,IAAI,CAAC5B,UAAU,EAAE;QACjB,IAAI,CAACa,MAAM,EAAE;MACjB;MAEA,IAAI,CAACgB,UAAU,CAACD,KAAK,CAACE,MAAM,CAACC,KAAK,EAAEH,KAAK,CAAC;IAC9C;GACH;EACDI,QAAQ,EAAE;IACNC,KAAK,WAALA,KAAKA,CAAA,EAAG;MACJ,OAAOC,UAAU,CACb,IAAI,CAACC,IAAI,CAAC,MAAM,EAAE;QACdC,OAAO,EAAE;UACLC,MAAM,EAAE,IAAI,CAACC,OAAO;UACpBC,QAAQ,EAAE,IAAI,CAACA;QACnB;MACJ,CAAC,CAAC,EACF,IAAI,CAACC,SACT,CAAC;IACL;EACJ;AACJ,CAAC;;;ECjEG,OAAAC,SAAA,IAAAC,kBAAA,CAAmJ,YAAnJR,UAAmJ;IAAxI,SAAOS,IAAE,CAAAC,EAAA;IAAWb,KAAK,EAAEY,IAAO,CAAAE,OAAA;IAAGN,QAAQ,EAAEI,IAAQ,CAAAJ,QAAA;IAAG,cAAY,EAAEI,IAAM,CAAAG,OAAA,IAAKC,SAAS;IAAGpB,OAAK,EAAAqB,MAAA,QAAAA,MAAA;aAAEC,QAAO,CAAAtB,OAAA,IAAAsB,QAAA,CAAAtB,OAAA,CAAAuB,KAAA,CAAAD,QAAA,EAAAE,SAAA;KAAA;KAAUF,QAAK,CAAAhB,KAAA,aAAAmB,UAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}