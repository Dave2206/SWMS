{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock, Fragment as _Fragment, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"header-container shadow-md\"\n};\nconst _hoisted_2 = {\n  class: \"p-fluid\"\n};\nconst _hoisted_3 = {\n  class: \"p-field mb-4\"\n};\nconst _hoisted_4 = {\n  class: \"p-field mb-6\"\n};\nconst _hoisted_5 = {\n  class: \"p-field button-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Button = _resolveComponent(\"Button\");\n  const _component_Menubar = _resolveComponent(\"Menubar\");\n  const _component_InputText = _resolveComponent(\"InputText\");\n  const _component_Dialog = _resolveComponent(\"Dialog\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", _hoisted_1, [_createCommentVNode(\" Menu Bar (only visible after login) \"), $data.isLoggedIn ? (_openBlock(), _createBlock(_component_Menubar, {\n    key: 0,\n    model: $options.filteredMenuItems\n  }, {\n    start: _withCtx(() => _cache[3] || (_cache[3] = [_createElementVNode(\"span\", {\n      class: \"text-xl font-bold text-gray-800\"\n    }, \"Solid Waste Management System\", -1 /* HOISTED */)])),\n    end: _withCtx(() => [_createCommentVNode(\" Button to trigger the login modal \"), _createVNode(_component_Button, {\n      label: \"Logout\",\n      icon: \"pi pi-sign-out\",\n      class: \"p-button-outlined p-button-lg\",\n      onClick: $options.logout\n    }, null, 8 /* PROPS */, [\"onClick\"])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"model\"])) : _createCommentVNode(\"v-if\", true)]), _createCommentVNode(\" Login Modal \"), _createVNode(_component_Dialog, {\n    header: \"Login\",\n    visible: $data.showLoginModal,\n    \"onUpdate:visible\": _cache[2] || (_cache[2] = $event => $data.showLoginModal = $event),\n    modal: \"\",\n    class: \"login-modal p-dialog-lg\",\n    style: {\n      \"width\": \"40vw\",\n      \"max-width\": \"500px\"\n    }\n  }, {\n    default: _withCtx(() => [_createCommentVNode(\" Logo \"), _cache[6] || (_cache[6] = _createElementVNode(\"div\", {\n      class: \"flex justify-center mb-6\"\n    }, [_createElementVNode(\"img\", {\n      src: \"assets/logo.png\",\n      alt: \"Logo\",\n      class: \"h-25 w-auto\"\n    })], -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_2, [_createCommentVNode(\" Username Field \"), _createElementVNode(\"div\", _hoisted_3, [_cache[4] || (_cache[4] = _createElementVNode(\"label\", {\n      for: \"username\",\n      class: \"block text-lg font-medium text-gray-700 mb-2\"\n    }, \"Username\", -1 /* HOISTED */)), _createVNode(_component_InputText, {\n      id: \"username\",\n      modelValue: $data.username,\n      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.username = $event),\n      placeholder: \"Enter your username\",\n      class: \"p-inputtext-lg w-full\"\n    }, null, 8 /* PROPS */, [\"modelValue\"])]), _createCommentVNode(\" Password Field \"), _createElementVNode(\"div\", _hoisted_4, [_cache[5] || (_cache[5] = _createElementVNode(\"label\", {\n      for: \"password\",\n      class: \"block text-lg font-medium text-gray-700 mb-2\"\n    }, \"Password\", -1 /* HOISTED */)), _createVNode(_component_InputText, {\n      type: \"password\",\n      id: \"password\",\n      modelValue: $data.password,\n      \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.password = $event),\n      placeholder: \"Enter your password\",\n      class: \"p-inputtext-lg w-full\",\n      feedback: \"\"\n    }, null, 8 /* PROPS */, [\"modelValue\"])]), _createCommentVNode(\" Button Container \"), _createElementVNode(\"div\", _hoisted_5, [_createVNode(_component_Button, {\n      label: \"Login\",\n      icon: \"pi pi-sign-in\",\n      class: \"p-button-lg p-button-success w-full login-btn\",\n      onClick: $options.login\n    }, null, 8 /* PROPS */, [\"onClick\"])])])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"visible\"])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["class","_createElementBlock","_Fragment","_createElementVNode","_hoisted_1","_createCommentVNode","$data","isLoggedIn","_createBlock","_component_Menubar","key","model","$options","filteredMenuItems","start","_withCtx","_cache","end","_createVNode","_component_Button","label","icon","onClick","logout","_","_component_Dialog","header","visible","showLoginModal","$event","modal","style","default","src","alt","_hoisted_2","_hoisted_3","for","_component_InputText","id","modelValue","username","placeholder","_hoisted_4","type","password","feedback","_hoisted_5","login"],"sources":["C:\\Users\\darle\\solid-waste-management-system\\src\\components\\Header.vue"],"sourcesContent":["<template>\r\n  <div class=\"header-container shadow-md\">\r\n    <!-- Menu Bar (only visible after login) -->\r\n    <Menubar v-if=\"isLoggedIn\" :model=\"filteredMenuItems\">\r\n      <template #start>\r\n        <span class=\"text-xl font-bold text-gray-800\">Solid Waste Management System</span>\r\n      </template>\r\n      <template #end>\r\n        <!-- Button to trigger the login modal -->\r\n        <Button label=\"Logout\" icon=\"pi pi-sign-out\" class=\"p-button-outlined p-button-lg\" @click=\"logout\" />\r\n      </template>\r\n    </Menubar>\r\n  </div>\r\n\r\n  <!-- Login Modal -->\r\n  <Dialog \r\n    header=\"Login\" \r\n    v-model:visible=\"showLoginModal\" \r\n    modal \r\n    class=\"login-modal p-dialog-lg\" \r\n    style=\"width: 40vw; max-width: 500px;\">\r\n  \r\n    <!-- Logo -->\r\n    <div class=\"flex justify-center mb-6\">\r\n      <img src=\"assets/logo.png\" alt=\"Logo\" class=\"h-25 w-auto\" />\r\n    </div>\r\n    \r\n    <div class=\"p-fluid\">\r\n      <!-- Username Field -->\r\n      <div class=\"p-field mb-4\">\r\n        <label for=\"username\" class=\"block text-lg font-medium text-gray-700 mb-2\">Username</label>\r\n          <InputText \r\n            id=\"username\" \r\n            v-model=\"username\" \r\n            placeholder=\"Enter your username\" \r\n            class=\"p-inputtext-lg w-full\" />\r\n      </div>\r\n\r\n      <!-- Password Field -->\r\n      <div class=\"p-field mb-6\">\r\n        <label for=\"password\" class=\"block text-lg font-medium text-gray-700 mb-2\">Password</label>\r\n          <InputText \r\n            type=\"password\" \r\n            id=\"password\" \r\n            v-model=\"password\" \r\n            placeholder=\"Enter your password\" \r\n            class=\"p-inputtext-lg w-full\" \r\n            feedback />\r\n      </div>\r\n\r\n      <!-- Button Container -->\r\n      <div class=\"p-field button-container\">\r\n        <Button \r\n          label=\"Login\" \r\n          icon=\"pi pi-sign-in\" \r\n          class=\"p-button-lg p-button-success w-full login-btn\" \r\n          @click=\"login\" />\r\n      </div>\r\n    </div>\r\n  </Dialog>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"HeaderVue\",\r\n  data() {\r\n    return {\r\n      showLoginModal: false, // Controls modal visibility\r\n      isLoggedIn: false, // Indicates if the user is logged in\r\n      username: '', // Username input field\r\n      password: '', // Password input field\r\n      userRole: '', // User role after login\r\n      menuItems: [\r\n        { label: 'Announcement', icon: 'pi pi-megaphone', command: () => this.navigateTo('AnnouncementPage') },\r\n        { label: 'Concerns', icon: 'pi pi-comments', command: () => this.navigateTo('ConcernPage') },\r\n        { label: 'Messages', icon: 'pi pi-envelope', command: () => this.navigateTo('MessagePage') },\r\n        { label: 'Reports and Analytics', icon: 'pi pi-file', command: () => this.navigateTo('ReportPage') },\r\n        { label: 'Account Management', icon: 'pi pi-users', command: () => this.navigateTo('AccountManagementPage') },\r\n      ],\r\n    };\r\n  },\r\n  computed: {\r\n    filteredMenuItems() {\r\n      // Filter menu items based on the user's role\r\n      if (this.userRole === 'LGU') {\r\n        return this.menuItems.filter(item => item.label !== 'Reports and Analytics' && item.label !== 'Concerns' && item.label !== 'Account Management');\r\n      }\r\n      if (this.userRole === 'BGY_admin') {\r\n        return this.menuItems.filter(item => item.label !== 'Reports and Analytics' && item.label !== 'Account Management');\r\n      }\r\n      if (this.userRole === 'DVR') {\r\n        return this.menuItems.filter(item => item.label === 'Messages');\r\n      }\r\n      if (this.userRole === 'CZN') {\r\n        return this.menuItems.filter(item => item.label === 'Announcement');\r\n      }\r\n      return this.menuItems; // Default for super admin and anyone else with all access\r\n    }\r\n  },\r\n  methods: {\r\n    login() {\r\n      // Handle login logic here and set user role\r\n      console.log('Logging in with:', this.username, this.password);\r\n      this.userRole = this.username; // Set user role based on username or login data\r\n      this.isLoggedIn = true; // Set login state to true\r\n      this.showLoginModal = false; // Close the modal after login\r\n    },\r\n    logout() {\r\n      // Handle logout logic\r\n      console.log('Logging out');\r\n      this.isLoggedIn = false; // Set login state to false\r\n      this.userRole = ''; // Clear the user role\r\n    },\r\n    navigateTo(route) {\r\n      console.log(`Navigating to ${route}`);\r\n      // Replace with actual navigation logic, e.g.,\r\n      this.$router.push(`/${route}`);\r\n    }\r\n  }\r\n};\r\n</script>\r\n"],"mappings":";;EACOA,KAAK,EAAC;AAA4B;;EA0BhCA,KAAK,EAAC;AAAS;;EAEbA,KAAK,EAAC;AAAc;;EAUpBA,KAAK,EAAC;AAAc;;EAYpBA,KAAK,EAAC;AAA0B;;;;;;uBAnD3CC,mBAAA,CAAAC,SAAA,SACEC,mBAAA,CAWM,OAXNC,UAWM,GAVJC,mBAAA,yCAA4C,EAC7BC,KAAA,CAAAC,UAAU,I,cAAzBC,YAAA,CAQUC,kBAAA;IAXdC,GAAA;IAGgCC,KAAK,EAAEC,QAAA,CAAAC;;IACtBC,KAAK,EAAAC,QAAA,CACd,MAAkFC,MAAA,QAAAA,MAAA,OAAlFb,mBAAA,CAAkF;MAA5EH,KAAK,EAAC;IAAiC,GAAC,+BAA6B,oB;IAElEiB,GAAG,EAAAF,QAAA,CACZ,MAA0C,CAA1CV,mBAAA,uCAA0C,EAC1Ca,YAAA,CAAqGC,iBAAA;MAA7FC,KAAK,EAAC,QAAQ;MAACC,IAAI,EAAC,gBAAgB;MAACrB,KAAK,EAAC,+BAA+B;MAAEsB,OAAK,EAAEV,QAAA,CAAAW;;IATnGC,CAAA;kCAAAnB,mBAAA,e,GAcEA,mBAAA,iBAAoB,EACpBa,YAAA,CA4CSO,iBAAA;IA3CPC,MAAM,EAAC,OAAO;IACNC,OAAO,EAAErB,KAAA,CAAAsB,cAAc;IAjBnC,oBAAAZ,MAAA,QAAAA,MAAA,MAAAa,MAAA,IAiBqBvB,KAAA,CAAAsB,cAAc,GAAAC,MAAA;IAC/BC,KAAK,EAAL,EAAK;IACL9B,KAAK,EAAC,yBAAyB;IAC/B+B,KAAsC,EAAtC;MAAA;MAAA;IAAA;;IApBJC,OAAA,EAAAjB,QAAA,CAsBI,MAAa,CAAbV,mBAAA,UAAa,E,0BACbF,mBAAA,CAEM;MAFDH,KAAK,EAAC;IAA0B,IACnCG,mBAAA,CAA4D;MAAvD8B,GAAG,EAAC,iBAAiB;MAACC,GAAG,EAAC,MAAM;MAAClC,KAAK,EAAC;6BAG9CG,mBAAA,CA+BM,OA/BNgC,UA+BM,GA9BJ9B,mBAAA,oBAAuB,EACvBF,mBAAA,CAOM,OAPNiC,UAOM,G,0BANJjC,mBAAA,CAA2F;MAApFkC,GAAG,EAAC,UAAU;MAACrC,KAAK,EAAC;OAA+C,UAAQ,sBACjFkB,YAAA,CAIkCoB,oBAAA;MAHhCC,EAAE,EAAC,UAAU;MAhCzBC,UAAA,EAiCqBlC,KAAA,CAAAmC,QAAQ;MAjC7B,uBAAAzB,MAAA,QAAAA,MAAA,MAAAa,MAAA,IAiCqBvB,KAAA,CAAAmC,QAAQ,GAAAZ,MAAA;MACjBa,WAAW,EAAC,qBAAqB;MACjC1C,KAAK,EAAC;+CAGZK,mBAAA,oBAAuB,EACvBF,mBAAA,CASM,OATNwC,UASM,G,0BARJxC,mBAAA,CAA2F;MAApFkC,GAAG,EAAC,UAAU;MAACrC,KAAK,EAAC;OAA+C,UAAQ,sBACjFkB,YAAA,CAMaoB,oBAAA;MALXM,IAAI,EAAC,UAAU;MACfL,EAAE,EAAC,UAAU;MA3CzBC,UAAA,EA4CqBlC,KAAA,CAAAuC,QAAQ;MA5C7B,uBAAA7B,MAAA,QAAAA,MAAA,MAAAa,MAAA,IA4CqBvB,KAAA,CAAAuC,QAAQ,GAAAhB,MAAA;MACjBa,WAAW,EAAC,qBAAqB;MACjC1C,KAAK,EAAC,uBAAuB;MAC7B8C,QAAQ,EAAR;+CAGNzC,mBAAA,sBAAyB,EACzBF,mBAAA,CAMM,OANN4C,UAMM,GALJ7B,YAAA,CAImBC,iBAAA;MAHjBC,KAAK,EAAC,OAAO;MACbC,IAAI,EAAC,eAAe;MACpBrB,KAAK,EAAC,+CAA+C;MACpDsB,OAAK,EAAEV,QAAA,CAAAoC;;IAxDlBxB,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}