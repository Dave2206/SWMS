{"ast":null,"code":"import BaseStyle from '@primevue/core/base/style';\nvar theme = function theme(_ref) {\n  var dt = _ref.dt;\n  return \"\\n.p-tree {\\n    background: \".concat(dt('tree.background'), \";\\n    color: \").concat(dt('tree.color'), \";\\n    padding: \").concat(dt('tree.padding'), \";\\n}\\n\\n.p-tree-root-children,\\n.p-tree-node-children {\\n    display: flex;\\n    list-style-type: none;\\n    flex-direction: column;\\n    margin: 0;\\n    gap: \").concat(dt('tree.gap'), \";\\n}\\n\\n.p-tree-root-children {\\n    padding: 0;\\n    padding-block-start: \").concat(dt('tree.gap'), \";\\n}\\n\\n.p-tree-node-children {\\n    padding: 0;\\n    padding-block-start: \").concat(dt('tree.gap'), \";\\n    padding-inline-start: \").concat(dt('tree.indent'), \";\\n}\\n\\n.p-tree-node {\\n    padding: 0;\\n    outline: 0 none;\\n}\\n\\n.p-tree-node-content {\\n    border-radius: \").concat(dt('tree.node.border.radius'), \";\\n    padding: \").concat(dt('tree.node.padding'), \";\\n    display: flex;\\n    align-items: center;\\n    outline-color: transparent;\\n    color: \").concat(dt('tree.node.color'), \";\\n    gap: \").concat(dt('tree.node.gap'), \";\\n    transition: background \").concat(dt('tree.transition.duration'), \", color \").concat(dt('tree.transition.duration'), \", outline-color \").concat(dt('tree.transition.duration'), \", box-shadow \").concat(dt('tree.transition.duration'), \";\\n}\\n\\n.p-tree-node:focus-visible > .p-tree-node-content {\\n    box-shadow: \").concat(dt('tree.node.focus.ring.shadow'), \";\\n    outline: \").concat(dt('tree.node.focus.ring.width'), \" \").concat(dt('tree.node.focus.ring.style'), \" \").concat(dt('tree.node.focus.ring.color'), \";\\n    outline-offset: \").concat(dt('tree.node.focus.ring.offset'), \";\\n}\\n\\n.p-tree-node-content.p-tree-node-selectable:not(.p-tree-node-selected):hover {\\n    background: \").concat(dt('tree.node.hover.background'), \";\\n    color: \").concat(dt('tree.node.hover.color'), \";\\n}\\n\\n.p-tree-node-content.p-tree-node-selectable:not(.p-tree-node-selected):hover .p-tree-node-icon {\\n    color: \").concat(dt('tree.node.icon.hover.color'), \";\\n}\\n\\n.p-tree-node-content.p-tree-node-selected {\\n    background: \").concat(dt('tree.node.selected.background'), \";\\n    color: \").concat(dt('tree.node.selected.color'), \";\\n}\\n\\n.p-tree-node-content.p-tree-node-selected .p-tree-node-toggle-button {\\n    color: inherit;\\n}\\n\\n.p-tree-node-toggle-button {\\n    cursor: pointer;\\n    user-select: none;\\n    display: inline-flex;\\n    align-items: center;\\n    justify-content: center;\\n    overflow: hidden;\\n    position: relative;\\n    flex-shrink: 0;\\n    width: \").concat(dt('tree.node.toggle.button.size'), \";\\n    height: \").concat(dt('tree.node.toggle.button.size'), \";\\n    color: \").concat(dt('tree.node.toggle.button.color'), \";\\n    border: 0 none;\\n    background: transparent;\\n    border-radius: \").concat(dt('tree.node.toggle.button.border.radius'), \";\\n    transition: background \").concat(dt('tree.transition.duration'), \", color \").concat(dt('tree.transition.duration'), \", border-color \").concat(dt('tree.transition.duration'), \", outline-color \").concat(dt('tree.transition.duration'), \", box-shadow \").concat(dt('tree.transition.duration'), \";\\n    outline-color: transparent;\\n    padding: 0;\\n}\\n\\n.p-tree-node-toggle-button:enabled:hover {\\n    background: \").concat(dt('tree.node.toggle.button.hover.background'), \";\\n    color: \").concat(dt('tree.node.toggle.button.hover.color'), \";\\n}\\n\\n.p-tree-node-content.p-tree-node-selected .p-tree-node-toggle-button:hover {\\n    background: \").concat(dt('tree.node.toggle.button.selected.hover.background'), \";\\n    color: \").concat(dt('tree.node.toggle.button.selected.hover.color'), \";\\n}\\n\\n.p-tree-root {\\n    overflow: auto;\\n}\\n\\n.p-tree-node-selectable {\\n    cursor: pointer;\\n    user-select: none;\\n}\\n\\n.p-tree-node-leaf > .p-tree-node-content .p-tree-node-toggle-button {\\n    visibility: hidden;\\n}\\n\\n.p-tree-node-icon {\\n    color: \").concat(dt('tree.node.icon.color'), \";\\n    transition: color \").concat(dt('tree.transition.duration'), \";\\n}\\n\\n.p-tree-node-content.p-tree-node-selected .p-tree-node-icon {\\n    color: \").concat(dt('tree.node.icon.selected.color'), \";\\n}\\n\\n.p-tree-filter {\\n    margin: \").concat(dt('tree.filter.margin'), \";\\n}\\n\\n.p-tree-filter-input {\\n    width: 100%;\\n}\\n\\n.p-tree-loading {\\n    position: relative;\\n    height: 100%;\\n}\\n\\n.p-tree-loading-icon {\\n    font-size: \").concat(dt('tree.loading.icon.size'), \";\\n    width: \").concat(dt('tree.loading.icon.size'), \";\\n    height: \").concat(dt('tree.loading.icon.size'), \";\\n}\\n\\n.p-tree .p-tree-mask {\\n    position: absolute;\\n    z-index: 1;\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n}\\n\\n.p-tree-flex-scrollable {\\n    display: flex;\\n    flex: 1;\\n    height: 100%;\\n    flex-direction: column;\\n}\\n\\n.p-tree-flex-scrollable .p-tree-root {\\n    flex: 1;\\n}\\n\");\n};\nvar classes = {\n  root: function root(_ref2) {\n    var props = _ref2.props;\n    return ['p-tree p-component', {\n      'p-tree-selectable': props.selectionMode != null,\n      'p-tree-loading': props.loading,\n      'p-tree-flex-scrollable': props.scrollHeight === 'flex'\n    }];\n  },\n  mask: 'p-tree-mask p-overlay-mask',\n  loadingIcon: 'p-tree-loading-icon',\n  pcFilterContainer: 'p-tree-filter',\n  pcFilterInput: 'p-tree-filter-input',\n  wrapper: 'p-tree-root',\n  //TODO: discuss\n  rootChildren: 'p-tree-root-children',\n  node: function node(_ref3) {\n    var instance = _ref3.instance;\n    return ['p-tree-node', {\n      'p-tree-node-leaf': instance.leaf\n    }];\n  },\n  nodeContent: function nodeContent(_ref4) {\n    var instance = _ref4.instance;\n    return ['p-tree-node-content', instance.node.styleClass, {\n      'p-tree-node-selectable': instance.selectable,\n      'p-tree-node-selected': instance.checkboxMode && instance.$parentInstance.highlightOnSelect ? instance.checked : instance.selected\n    }];\n  },\n  nodeToggleButton: 'p-tree-node-toggle-button',\n  nodeToggleIcon: 'p-tree-node-toggle-icon',\n  nodeCheckbox: 'p-tree-node-checkbox',\n  nodeIcon: 'p-tree-node-icon',\n  nodeLabel: 'p-tree-node-label',\n  nodeChildren: 'p-tree-node-children'\n};\nvar TreeStyle = BaseStyle.extend({\n  name: 'tree',\n  theme: theme,\n  classes: classes\n});\nexport { TreeStyle as default };","map":{"version":3,"names":["theme","_ref","dt","concat","classes","root","_ref2","props","selectionMode","loading","scrollHeight","mask","loadingIcon","pcFilterContainer","pcFilterInput","wrapper","rootChildren","node","_ref3","instance","leaf","nodeContent","_ref4","styleClass","selectable","checkboxMode","$parentInstance","highlightOnSelect","checked","selected","nodeToggleButton","nodeToggleIcon","nodeCheckbox","nodeIcon","nodeLabel","nodeChildren","TreeStyle","BaseStyle","extend","name"],"sources":["../../../src/tree/style/TreeStyle.js"],"sourcesContent":["import BaseStyle from '@primevue/core/base/style';\n\nconst theme = ({ dt }) => `\n.p-tree {\n    background: ${dt('tree.background')};\n    color: ${dt('tree.color')};\n    padding: ${dt('tree.padding')};\n}\n\n.p-tree-root-children,\n.p-tree-node-children {\n    display: flex;\n    list-style-type: none;\n    flex-direction: column;\n    margin: 0;\n    gap: ${dt('tree.gap')};\n}\n\n.p-tree-root-children {\n    padding: 0;\n    padding-block-start: ${dt('tree.gap')};\n}\n\n.p-tree-node-children {\n    padding: 0;\n    padding-block-start: ${dt('tree.gap')};\n    padding-inline-start: ${dt('tree.indent')};\n}\n\n.p-tree-node {\n    padding: 0;\n    outline: 0 none;\n}\n\n.p-tree-node-content {\n    border-radius: ${dt('tree.node.border.radius')};\n    padding: ${dt('tree.node.padding')};\n    display: flex;\n    align-items: center;\n    outline-color: transparent;\n    color: ${dt('tree.node.color')};\n    gap: ${dt('tree.node.gap')};\n    transition: background ${dt('tree.transition.duration')}, color ${dt('tree.transition.duration')}, outline-color ${dt('tree.transition.duration')}, box-shadow ${dt('tree.transition.duration')};\n}\n\n.p-tree-node:focus-visible > .p-tree-node-content {\n    box-shadow: ${dt('tree.node.focus.ring.shadow')};\n    outline: ${dt('tree.node.focus.ring.width')} ${dt('tree.node.focus.ring.style')} ${dt('tree.node.focus.ring.color')};\n    outline-offset: ${dt('tree.node.focus.ring.offset')};\n}\n\n.p-tree-node-content.p-tree-node-selectable:not(.p-tree-node-selected):hover {\n    background: ${dt('tree.node.hover.background')};\n    color: ${dt('tree.node.hover.color')};\n}\n\n.p-tree-node-content.p-tree-node-selectable:not(.p-tree-node-selected):hover .p-tree-node-icon {\n    color: ${dt('tree.node.icon.hover.color')};\n}\n\n.p-tree-node-content.p-tree-node-selected {\n    background: ${dt('tree.node.selected.background')};\n    color: ${dt('tree.node.selected.color')};\n}\n\n.p-tree-node-content.p-tree-node-selected .p-tree-node-toggle-button {\n    color: inherit;\n}\n\n.p-tree-node-toggle-button {\n    cursor: pointer;\n    user-select: none;\n    display: inline-flex;\n    align-items: center;\n    justify-content: center;\n    overflow: hidden;\n    position: relative;\n    flex-shrink: 0;\n    width: ${dt('tree.node.toggle.button.size')};\n    height: ${dt('tree.node.toggle.button.size')};\n    color: ${dt('tree.node.toggle.button.color')};\n    border: 0 none;\n    background: transparent;\n    border-radius: ${dt('tree.node.toggle.button.border.radius')};\n    transition: background ${dt('tree.transition.duration')}, color ${dt('tree.transition.duration')}, border-color ${dt('tree.transition.duration')}, outline-color ${dt('tree.transition.duration')}, box-shadow ${dt('tree.transition.duration')};\n    outline-color: transparent;\n    padding: 0;\n}\n\n.p-tree-node-toggle-button:enabled:hover {\n    background: ${dt('tree.node.toggle.button.hover.background')};\n    color: ${dt('tree.node.toggle.button.hover.color')};\n}\n\n.p-tree-node-content.p-tree-node-selected .p-tree-node-toggle-button:hover {\n    background: ${dt('tree.node.toggle.button.selected.hover.background')};\n    color: ${dt('tree.node.toggle.button.selected.hover.color')};\n}\n\n.p-tree-root {\n    overflow: auto;\n}\n\n.p-tree-node-selectable {\n    cursor: pointer;\n    user-select: none;\n}\n\n.p-tree-node-leaf > .p-tree-node-content .p-tree-node-toggle-button {\n    visibility: hidden;\n}\n\n.p-tree-node-icon {\n    color: ${dt('tree.node.icon.color')};\n    transition: color ${dt('tree.transition.duration')};\n}\n\n.p-tree-node-content.p-tree-node-selected .p-tree-node-icon {\n    color: ${dt('tree.node.icon.selected.color')};\n}\n\n.p-tree-filter {\n    margin: ${dt('tree.filter.margin')};\n}\n\n.p-tree-filter-input {\n    width: 100%;\n}\n\n.p-tree-loading {\n    position: relative;\n    height: 100%;\n}\n\n.p-tree-loading-icon {\n    font-size: ${dt('tree.loading.icon.size')};\n    width: ${dt('tree.loading.icon.size')};\n    height: ${dt('tree.loading.icon.size')};\n}\n\n.p-tree .p-tree-mask {\n    position: absolute;\n    z-index: 1;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}\n\n.p-tree-flex-scrollable {\n    display: flex;\n    flex: 1;\n    height: 100%;\n    flex-direction: column;\n}\n\n.p-tree-flex-scrollable .p-tree-root {\n    flex: 1;\n}\n`;\n\nconst classes = {\n    root: ({ props }) => [\n        'p-tree p-component',\n        {\n            'p-tree-selectable': props.selectionMode != null,\n            'p-tree-loading': props.loading,\n            'p-tree-flex-scrollable': props.scrollHeight === 'flex'\n        }\n    ],\n    mask: 'p-tree-mask p-overlay-mask',\n    loadingIcon: 'p-tree-loading-icon',\n    pcFilterContainer: 'p-tree-filter',\n    pcFilterInput: 'p-tree-filter-input',\n    wrapper: 'p-tree-root', //TODO: discuss\n    rootChildren: 'p-tree-root-children',\n    node: ({ instance }) => ['p-tree-node', { 'p-tree-node-leaf': instance.leaf }],\n    nodeContent: ({ instance }) => [\n        'p-tree-node-content',\n        instance.node.styleClass,\n        {\n            'p-tree-node-selectable': instance.selectable,\n            'p-tree-node-selected': instance.checkboxMode && instance.$parentInstance.highlightOnSelect ? instance.checked : instance.selected\n        }\n    ],\n    nodeToggleButton: 'p-tree-node-toggle-button',\n    nodeToggleIcon: 'p-tree-node-toggle-icon',\n    nodeCheckbox: 'p-tree-node-checkbox',\n    nodeIcon: 'p-tree-node-icon',\n    nodeLabel: 'p-tree-node-label',\n    nodeChildren: 'p-tree-node-children'\n};\n\nexport default BaseStyle.extend({\n    name: 'tree',\n    theme,\n    classes\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}