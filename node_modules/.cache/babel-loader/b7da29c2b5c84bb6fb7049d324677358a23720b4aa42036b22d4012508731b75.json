{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from \"axios\";\nimport { format } from \"date-fns\";\nexport default {\n  data() {\n    return {\n      username: \"\",\n      // Logged-in user's username\n      announcements: [],\n      // List of announcements\n      loading: true,\n      // Loading state\n      isLoggedIn: false // Check if the user is logged in\n    };\n  },\n  created() {\n    this.checkAuthentication(); // Check login status\n    this.fetchAnnouncements(); // Fetch announcements\n  },\n  methods: {\n    checkAuthentication() {\n      const token = localStorage.getItem(\"auth_token\");\n      if (token) {\n        this.isLoggedIn = true;\n        this.fetchUserData();\n      }\n    },\n    async fetchUserData() {\n      try {\n        const response = await axios.get(\"http://127.0.0.1:8000/api/user/profile\", {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem(\"auth_token\")}`\n          }\n        });\n        this.username = response.data.username || \"User\"; // Fallback if no username is provided\n      } catch (error) {\n        console.error(\"Error fetching user data:\", error);\n      }\n    },\n    async fetchAnnouncements() {\n      try {\n        const response = await axios.get(\"http://127.0.0.1:8000/api/announcements\", {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem(\"auth_token\")}`\n          }\n        });\n        this.announcements = response.data.data || []; // Handle API response\n      } catch (error) {\n        console.error(\"Error fetching announcements:\", error);\n      } finally {\n        this.loading = false; // End loading state\n      }\n    },\n    formatDate(date) {\n      return format(new Date(date), \"MMMM d, yyyy h:mm a\"); // Format the date\n    },\n    navigateToCreateAnnouncement() {\n      this.$router.push({\n        name: \"AnnouncementPage\"\n      }); // Navigate to the create announcement page\n    },\n    getInitials(name) {\n      if (!name) return \"\"; // Check if the name is available\n      const nameParts = name.split(\" \");\n      const firstName = nameParts[0] || \"\";\n      const lastName = nameParts[1] || \"\";\n      return (firstName[0] || \"\") + (lastName[0] || \"\"); // Return initials\n    },\n    getAvatarBackgroundColor(name) {\n      if (!name) return \"#007bff\"; // Default color if no name is provided\n      const colors = [\"#FF5733\", \"#33FF57\", \"#3357FF\", \"#FF33A6\", \"#FFC300\", \"#FF6347\", \"#32CD32\"];\n      const index = name.charCodeAt(0) % colors.length; // Pick color based on first character of name\n      return colors[index];\n    }\n  }\n};","map":{"version":3,"names":["axios","format","data","username","announcements","loading","isLoggedIn","created","checkAuthentication","fetchAnnouncements","methods","token","localStorage","getItem","fetchUserData","response","get","headers","Authorization","error","console","formatDate","date","Date","navigateToCreateAnnouncement","$router","push","name","getInitials","nameParts","split","firstName","lastName","getAvatarBackgroundColor","colors","index","charCodeAt","length"],"sources":["C:\\Users\\darle\\solid-waste-management-system\\src\\components\\DashboardPage.vue"],"sourcesContent":["<template>\r\n  <div class=\"dashboard\">\r\n    <!-- Conditional rendering based on login status -->\r\n    <template v-if=\"isLoggedIn\">\r\n      <h1>Welcome, {{ username }}!</h1>\r\n\r\n      <div class=\"dashboard-actions\">\r\n        <Button \r\n          label=\"Create Announcement\" \r\n          icon=\"pi pi-plus\" \r\n          class=\"p-button-success\" \r\n          @click=\"navigateToCreateAnnouncement\" \r\n        />\r\n      </div>\r\n    </template>\r\n\r\n      <div v-if=\"loading\" class=\"loading\">Loading announcements...</div>\r\n\r\n      <div v-else-if=\"announcements.length === 0\" class=\"no-announcements\">\r\n        <p>No announcements available. Be the first to create one!</p>\r\n      </div>\r\n\r\n      <div v-else class=\"announcement-feed\">\r\n        <ul>\r\n          <li v-for=\"announcement in announcements\" :key=\"announcement.id\" class=\"announcement-card\">\r\n            <div class=\"announcement-header\">\r\n              <div class=\"avatar\" :style=\"{ backgroundColor: getAvatarBackgroundColor(announcement.author) }\">\r\n                <span>{{ getInitials(announcement.author) }}</span>\r\n              </div>\r\n              <div class=\"announcement-meta\">\r\n                <h3>{{ announcement.subject }}</h3>\r\n                <small>{{ formatDate(announcement.created_at) }}</small>\r\n              </div>\r\n            </div>\r\n\r\n            <p class=\"announcement-body\">{{ announcement.body }}</p>\r\n\r\n            <div v-if=\"announcement.image_path\" class=\"announcement-image\">\r\n              <img \r\n                :src=\"`http://127.0.0.1:8000/storage/${announcement.image_path}`\" \r\n                alt=\"Announcement Image\" \r\n                class=\"resized-image\"\r\n              />\r\n            </div>\r\n\r\n            <div class=\"announcement-footer\">\r\n              <small>Effective Date: {{ formatDate(announcement.effective_date) }}</small>\r\n              <br />\r\n              <small>Posted by: {{ announcement.author || \"Unknown\" }}</small>\r\n            </div>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    \r\n\r\n    <!-- Not Logged In Message -->\r\n    <template v-else>\r\n      <p>Please <a href=\"/login\" class=\"text-green-600 hover:underline\">log in</a> to access your dashboard.</p>\r\n    </template>\r\n  </div>\r\n</template>\r\n\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nimport { format } from \"date-fns\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      username: \"\", // Logged-in user's username\r\n      announcements: [], // List of announcements\r\n      loading: true, // Loading state\r\n      isLoggedIn: false, // Check if the user is logged in\r\n    };\r\n  },\r\n  created() {\r\n    this.checkAuthentication(); // Check login status\r\n    this.fetchAnnouncements(); // Fetch announcements\r\n  },\r\n  methods: {\r\n    checkAuthentication() {\r\n      const token = localStorage.getItem(\"auth_token\");\r\n      if (token) {\r\n        this.isLoggedIn = true;\r\n        this.fetchUserData();\r\n      }\r\n    },\r\n    async fetchUserData() {\r\n      try {\r\n        const response = await axios.get(\"http://127.0.0.1:8000/api/user/profile\", {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem(\"auth_token\")}`,\r\n          },\r\n        });\r\n        this.username = response.data.username || \"User\"; // Fallback if no username is provided\r\n      } catch (error) {\r\n        console.error(\"Error fetching user data:\", error);\r\n      }\r\n    },\r\n    async fetchAnnouncements() {\r\n      try {\r\n        const response = await axios.get(\"http://127.0.0.1:8000/api/announcements\", {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem(\"auth_token\")}`,\r\n          },\r\n        });\r\n        this.announcements = response.data.data || []; // Handle API response\r\n      } catch (error) {\r\n        console.error(\"Error fetching announcements:\", error);\r\n      } finally {\r\n        this.loading = false; // End loading state\r\n      }\r\n    },\r\n    formatDate(date) {\r\n      return format(new Date(date), \"MMMM d, yyyy h:mm a\"); // Format the date\r\n    },\r\n    navigateToCreateAnnouncement() {\r\n      this.$router.push({ name: \"AnnouncementPage\" }); // Navigate to the create announcement page\r\n    },\r\n    getInitials(name) {\r\n      if (!name) return \"\"; // Check if the name is available\r\n      const nameParts = name.split(\" \");\r\n      const firstName = nameParts[0] || \"\";\r\n      const lastName = nameParts[1] || \"\";\r\n      return (firstName[0] || \"\") + (lastName[0] || \"\"); // Return initials\r\n    },\r\n    getAvatarBackgroundColor(name) {\r\n      if (!name) return \"#007bff\"; // Default color if no name is provided\r\n      const colors = [\"#FF5733\", \"#33FF57\", \"#3357FF\", \"#FF33A6\", \"#FFC300\", \"#FF6347\", \"#32CD32\"];\r\n      const index = name.charCodeAt(0) % colors.length; // Pick color based on first character of name\r\n      return colors[index];\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.dashboard {\r\n  padding: 20px;\r\n}\r\n\r\nh1 {\r\n  font-size: 2rem;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.dashboard-actions {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.loading,\r\n.no-announcements {\r\n  text-align: center;\r\n  font-size: 1.2rem;\r\n  color: #777;\r\n}\r\n\r\n.announcement-feed {\r\n  margin-top: 20px;\r\n}\r\n\r\n.announcement-card {\r\n  padding: 20px;\r\n  background: #fff;\r\n  border-radius: 10px;\r\n  border: 1px solid #ddd;\r\n  margin-bottom: 20px;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n  transition: transform 0.2s ease;\r\n}\r\n\r\n.announcement-card:hover {\r\n  transform: scale(1.02);\r\n}\r\n\r\n.announcement-header {\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.avatar {\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 50%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-size: 1.2rem;\r\n  color: white;\r\n  margin-right: 15px;\r\n  background-color: #007bff; /* Default background color */\r\n}\r\n\r\n.announcement-meta {\r\n  flex: 1;\r\n}\r\n\r\n.announcement-meta h3 {\r\n  font-size: 1.2rem;\r\n  margin: 0;\r\n  font-weight: bold;\r\n}\r\n\r\n.announcement-meta small {\r\n  font-size: 0.9rem;\r\n  color: #666;\r\n}\r\n\r\n.announcement-body {\r\n  font-size: 1.1rem;\r\n  color: #333;\r\n  margin: 15px 0;\r\n}\r\n\r\n.announcement-image img {\r\n  width: 100%;\r\n  max-height: 300px;\r\n  object-fit: cover;\r\n  border-radius: 10px;\r\n  margin-top: 15px;\r\n}\r\n\r\n.announcement-footer {\r\n  font-size: 0.9rem;\r\n  color: #777;\r\n  margin-top: 15px;\r\n}\r\n\r\n.resized-image {\r\n  max-width: 100%;\r\n  max-height: 400px;\r\n  object-fit: contain;\r\n}\r\n\r\nbutton {\r\n  cursor: pointer;\r\n  padding: 8px 20px;\r\n  background-color: #007bff;\r\n  border: none;\r\n  color: white;\r\n  font-size: 1rem;\r\n  border-radius: 5px;\r\n}\r\n\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}