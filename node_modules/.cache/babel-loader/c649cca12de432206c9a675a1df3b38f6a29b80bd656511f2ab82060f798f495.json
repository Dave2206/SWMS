{"ast":null,"code":"import { $dt } from '@primeuix/styled';\nimport BaseEditableHolder from '@primevue/core/baseeditableholder';\nimport KnobStyle from 'primevue/knob/style';\nimport { openBlock, createElementBlock, mergeProps, createElementVNode, toDisplayString, createCommentVNode } from 'vue';\nvar script$1 = {\n  name: 'BaseKnob',\n  \"extends\": BaseEditableHolder,\n  props: {\n    size: {\n      type: Number,\n      \"default\": 100\n    },\n    readonly: {\n      type: Boolean,\n      \"default\": false\n    },\n    step: {\n      type: Number,\n      \"default\": 1\n    },\n    min: {\n      type: Number,\n      \"default\": 0\n    },\n    max: {\n      type: Number,\n      \"default\": 100\n    },\n    valueColor: {\n      type: String,\n      \"default\": function _default() {\n        return $dt('knob.value.background').variable;\n      }\n    },\n    rangeColor: {\n      type: String,\n      \"default\": function _default() {\n        return $dt('knob.range.background').variable;\n      }\n    },\n    textColor: {\n      type: String,\n      \"default\": function _default() {\n        return $dt('knob.text.color').variable;\n      }\n    },\n    strokeWidth: {\n      type: Number,\n      \"default\": 14\n    },\n    showValue: {\n      type: Boolean,\n      \"default\": true\n    },\n    valueTemplate: {\n      type: [String, Function],\n      \"default\": '{value}'\n    },\n    tabindex: {\n      type: Number,\n      \"default\": 0\n    },\n    ariaLabelledby: {\n      type: String,\n      \"default\": null\n    },\n    ariaLabel: {\n      type: String,\n      \"default\": null\n    }\n  },\n  style: KnobStyle,\n  provide: function provide() {\n    return {\n      $pcKnob: this,\n      $parentInstance: this\n    };\n  }\n};\n\n// Set fix value for SSR.\nvar Math_PI = 3.14159265358979;\nvar script = {\n  name: 'Knob',\n  \"extends\": script$1,\n  inheritAttrs: false,\n  emits: ['change'],\n  data: function data() {\n    return {\n      radius: 40,\n      midX: 50,\n      midY: 50,\n      minRadians: 4 * Math_PI / 3,\n      maxRadians: -Math_PI / 3\n    };\n  },\n  methods: {\n    updateValueByOffset: function updateValueByOffset(offsetX, offsetY) {\n      var dx = offsetX - this.size / 2;\n      var dy = this.size / 2 - offsetY;\n      var angle = Math.atan2(dy, dx);\n      var start = -Math_PI / 2 - Math_PI / 6;\n      this.updateModel(angle, start);\n    },\n    updateModel: function updateModel(angle, start) {\n      var mappedValue;\n      if (angle > this.maxRadians) mappedValue = this.mapRange(angle, this.minRadians, this.maxRadians, this.min, this.max);else if (angle < start) mappedValue = this.mapRange(angle + 2 * Math_PI, this.minRadians, this.maxRadians, this.min, this.max);else return;\n      var newValue = Math.round((mappedValue - this.min) / this.step) * this.step + this.min;\n      this.writeValue(newValue);\n      this.$emit('change', newValue);\n    },\n    updateModelValue: function updateModelValue(newValue) {\n      if (newValue > this.max) this.writeValue(this.max);else if (newValue < this.min) this.writeValue(this.min);else this.writeValue(newValue);\n    },\n    mapRange: function mapRange(x, inMin, inMax, outMin, outMax) {\n      return (x - inMin) * (outMax - outMin) / (inMax - inMin) + outMin;\n    },\n    onClick: function onClick(event) {\n      if (!this.disabled && !this.readonly) {\n        this.updateValueByOffset(event.offsetX, event.offsetY);\n      }\n    },\n    onBlur: function onBlur(event) {\n      var _this$formField$onBlu, _this$formField;\n      (_this$formField$onBlu = (_this$formField = this.formField).onBlur) === null || _this$formField$onBlu === void 0 || _this$formField$onBlu.call(_this$formField, event);\n    },\n    onMouseDown: function onMouseDown(event) {\n      if (!this.disabled && !this.readonly) {\n        window.addEventListener('mousemove', this.onMouseMove);\n        window.addEventListener('mouseup', this.onMouseUp);\n        event.preventDefault();\n      }\n    },\n    onMouseUp: function onMouseUp(event) {\n      if (!this.disabled && !this.readonly) {\n        window.removeEventListener('mousemove', this.onMouseMove);\n        window.removeEventListener('mouseup', this.onMouseUp);\n        event.preventDefault();\n      }\n    },\n    onTouchStart: function onTouchStart(event) {\n      if (!this.disabled && !this.readonly) {\n        window.addEventListener('touchmove', this.onTouchMove);\n        window.addEventListener('touchend', this.onTouchEnd);\n        event.preventDefault();\n      }\n    },\n    onTouchEnd: function onTouchEnd(event) {\n      if (!this.disabled && !this.readonly) {\n        window.removeEventListener('touchmove', this.onTouchMove);\n        window.removeEventListener('touchend', this.onTouchEnd);\n        event.preventDefault();\n      }\n    },\n    onMouseMove: function onMouseMove(event) {\n      if (!this.disabled && !this.readonly) {\n        this.updateValueByOffset(event.offsetX, event.offsetY);\n        event.preventDefault();\n      }\n    },\n    onTouchMove: function onTouchMove(event) {\n      if (!this.disabled && !this.readonly && event.touches.length == 1) {\n        var rect = this.$el.getBoundingClientRect();\n        var touch = event.targetTouches.item(0);\n        var offsetX = touch.clientX - rect.left;\n        var offsetY = touch.clientY - rect.top;\n        this.updateValueByOffset(offsetX, offsetY);\n      }\n    },\n    onKeyDown: function onKeyDown(event) {\n      if (!this.disabled && !this.readonly) {\n        switch (event.code) {\n          case 'ArrowRight':\n          case 'ArrowUp':\n            {\n              event.preventDefault();\n              this.updateModelValue(this.d_value + this.step);\n              break;\n            }\n          case 'ArrowLeft':\n          case 'ArrowDown':\n            {\n              event.preventDefault();\n              this.updateModelValue(this.d_value - this.step);\n              break;\n            }\n          case 'Home':\n            {\n              event.preventDefault();\n              this.writeValue(this.min);\n              break;\n            }\n          case 'End':\n            {\n              event.preventDefault();\n              this.writeValue(this.max);\n              break;\n            }\n          case 'PageUp':\n            {\n              event.preventDefault();\n              this.updateModelValue(this.d_value + 10);\n              break;\n            }\n          case 'PageDown':\n            {\n              event.preventDefault();\n              this.updateModelValue(this.d_value - 10);\n              break;\n            }\n        }\n      }\n    }\n  },\n  computed: {\n    rangePath: function rangePath() {\n      return \"M \".concat(this.minX, \" \").concat(this.minY, \" A \").concat(this.radius, \" \").concat(this.radius, \" 0 1 1 \").concat(this.maxX, \" \").concat(this.maxY);\n    },\n    valuePath: function valuePath() {\n      return \"M \".concat(this.zeroX, \" \").concat(this.zeroY, \" A \").concat(this.radius, \" \").concat(this.radius, \" 0 \").concat(this.largeArc, \" \").concat(this.sweep, \" \").concat(this.valueX, \" \").concat(this.valueY);\n    },\n    zeroRadians: function zeroRadians() {\n      if (this.min > 0 && this.max > 0) return this.mapRange(this.min, this.min, this.max, this.minRadians, this.maxRadians);else return this.mapRange(0, this.min, this.max, this.minRadians, this.maxRadians);\n    },\n    valueRadians: function valueRadians() {\n      return this.mapRange(this.d_value, this.min, this.max, this.minRadians, this.maxRadians);\n    },\n    minX: function minX() {\n      return this.midX + Math.cos(this.minRadians) * this.radius;\n    },\n    minY: function minY() {\n      return this.midY - Math.sin(this.minRadians) * this.radius;\n    },\n    maxX: function maxX() {\n      return this.midX + Math.cos(this.maxRadians) * this.radius;\n    },\n    maxY: function maxY() {\n      return this.midY - Math.sin(this.maxRadians) * this.radius;\n    },\n    zeroX: function zeroX() {\n      return this.midX + Math.cos(this.zeroRadians) * this.radius;\n    },\n    zeroY: function zeroY() {\n      return this.midY - Math.sin(this.zeroRadians) * this.radius;\n    },\n    valueX: function valueX() {\n      return this.midX + Math.cos(this.valueRadians) * this.radius;\n    },\n    valueY: function valueY() {\n      return this.midY - Math.sin(this.valueRadians) * this.radius;\n    },\n    largeArc: function largeArc() {\n      return Math.abs(this.zeroRadians - this.valueRadians) < Math_PI ? 0 : 1;\n    },\n    sweep: function sweep() {\n      return this.valueRadians > this.zeroRadians ? 0 : 1;\n    },\n    valueToDisplay: function valueToDisplay() {\n      if (typeof this.valueTemplate === 'string') {\n        return this.valueTemplate.replace(/{value}/g, this.d_value);\n      } else {\n        return this.valueTemplate(this.d_value);\n      }\n    }\n  }\n};\n//Derived and forked from https://github.com/kramer99/vue-knob-control\n\nvar _hoisted_1 = [\"width\", \"height\", \"tabindex\", \"aria-valuemin\", \"aria-valuemax\", \"aria-valuenow\", \"aria-labelledby\", \"aria-label\"];\nvar _hoisted_2 = [\"d\", \"stroke-width\", \"stroke\"];\nvar _hoisted_3 = [\"d\", \"stroke-width\", \"stroke\"];\nvar _hoisted_4 = [\"fill\"];\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  return openBlock(), createElementBlock(\"div\", mergeProps({\n    \"class\": _ctx.cx('root')\n  }, _ctx.ptmi('root')), [(openBlock(), createElementBlock(\"svg\", mergeProps({\n    viewBox: \"0 0 100 100\",\n    role: \"slider\",\n    width: _ctx.size,\n    height: _ctx.size,\n    tabindex: _ctx.readonly || _ctx.disabled ? -1 : _ctx.tabindex,\n    \"aria-valuemin\": _ctx.min,\n    \"aria-valuemax\": _ctx.max,\n    \"aria-valuenow\": _ctx.d_value,\n    \"aria-labelledby\": _ctx.ariaLabelledby,\n    \"aria-label\": _ctx.ariaLabel,\n    onClick: _cache[0] || (_cache[0] = function () {\n      return $options.onClick && $options.onClick.apply($options, arguments);\n    }),\n    onBlur: _cache[1] || (_cache[1] = function () {\n      return $options.onBlur && $options.onBlur.apply($options, arguments);\n    }),\n    onKeydown: _cache[2] || (_cache[2] = function () {\n      return $options.onKeyDown && $options.onKeyDown.apply($options, arguments);\n    }),\n    onMousedown: _cache[3] || (_cache[3] = function () {\n      return $options.onMouseDown && $options.onMouseDown.apply($options, arguments);\n    }),\n    onMouseup: _cache[4] || (_cache[4] = function () {\n      return $options.onMouseUp && $options.onMouseUp.apply($options, arguments);\n    }),\n    onTouchstartPassive: _cache[5] || (_cache[5] = function () {\n      return $options.onTouchStart && $options.onTouchStart.apply($options, arguments);\n    }),\n    onTouchend: _cache[6] || (_cache[6] = function () {\n      return $options.onTouchEnd && $options.onTouchEnd.apply($options, arguments);\n    })\n  }, _ctx.ptm('svg')), [createElementVNode(\"path\", mergeProps({\n    d: $options.rangePath,\n    \"stroke-width\": _ctx.strokeWidth,\n    stroke: _ctx.rangeColor,\n    \"class\": _ctx.cx('range')\n  }, _ctx.ptm('range')), null, 16, _hoisted_2), createElementVNode(\"path\", mergeProps({\n    d: $options.valuePath,\n    \"stroke-width\": _ctx.strokeWidth,\n    stroke: _ctx.valueColor,\n    \"class\": _ctx.cx('value')\n  }, _ctx.ptm('value')), null, 16, _hoisted_3), _ctx.showValue ? (openBlock(), createElementBlock(\"text\", mergeProps({\n    key: 0,\n    x: 50,\n    y: 57,\n    \"text-anchor\": \"middle\",\n    fill: _ctx.textColor,\n    \"class\": _ctx.cx('text')\n  }, _ctx.ptm('text')), toDisplayString($options.valueToDisplay), 17, _hoisted_4)) : createCommentVNode(\"\", true)], 16, _hoisted_1))], 16);\n}\nscript.render = render;\nexport { script as default };","map":{"version":3,"names":["script$1","name","BaseEditableHolder","props","size","type","Number","readonly","Boolean","step","min","max","valueColor","String","_default","$dt","variable","rangeColor","textColor","strokeWidth","showValue","valueTemplate","Function","tabindex","ariaLabelledby","ariaLabel","style","KnobStyle","provide","$pcKnob","$parentInstance","Math_PI","script","inheritAttrs","emits","data","radius","midX","midY","minRadians","maxRadians","methods","updateValueByOffset","offsetX","offsetY","dx","dy","angle","Math","atan2","start","updateModel","mappedValue","mapRange","newValue","round","writeValue","$emit","updateModelValue","x","inMin","inMax","outMin","outMax","onClick","event","disabled","onBlur","_this$formField$onBlu","_this$formField","formField","call","onMouseDown","window","addEventListener","onMouseMove","onMouseUp","preventDefault","removeEventListener","onTouchStart","onTouchMove","onTouchEnd","touches","length","rect","$el","getBoundingClientRect","touch","targetTouches","item","clientX","left","clientY","top","onKeyDown","code","d_value","computed","rangePath","concat","minX","minY","maxX","maxY","valuePath","zeroX","zeroY","largeArc","sweep","valueX","valueY","zeroRadians","valueRadians","cos","sin","abs","valueToDisplay","replace","openBlock","createElementBlock","mergeProps","_ctx","cx","ptmi","viewBox","role","width","height","_cache","$options","apply","arguments","onKeydown","onMousedown","onMouseup","onTouchend","ptm","createElementVNode","d","stroke","_hoisted_2","_hoisted_3","y","fill","toDisplayString","_hoisted_4","createCommentVNode","_hoisted_1"],"sources":["../../src/knob/BaseKnob.vue","../../src/knob/Knob.vue","../../src/knob/Knob.vue?vue&type=template&id=af093930&lang.js"],"sourcesContent":["<script>\nimport { $dt } from '@primeuix/styled';\nimport BaseEditableHolder from '@primevue/core/baseeditableholder';\nimport KnobStyle from 'primevue/knob/style';\n\nexport default {\n    name: 'BaseKnob',\n    extends: BaseEditableHolder,\n    props: {\n        size: {\n            type: Number,\n            default: 100\n        },\n        readonly: {\n            type: Boolean,\n            default: false\n        },\n        step: {\n            type: Number,\n            default: 1\n        },\n        min: {\n            type: Number,\n            default: 0\n        },\n        max: {\n            type: Number,\n            default: 100\n        },\n        valueColor: {\n            type: String,\n            default: () => {\n                return $dt('knob.value.background').variable;\n            }\n        },\n        rangeColor: {\n            type: String,\n            default: () => {\n                return $dt('knob.range.background').variable;\n            }\n        },\n        textColor: {\n            type: String,\n            default: () => {\n                return $dt('knob.text.color').variable;\n            }\n        },\n        strokeWidth: {\n            type: Number,\n            default: 14\n        },\n        showValue: {\n            type: Boolean,\n            default: true\n        },\n        valueTemplate: {\n            type: [String, Function],\n            default: '{value}'\n        },\n        tabindex: {\n            type: Number,\n            default: 0\n        },\n        ariaLabelledby: {\n            type: String,\n            default: null\n        },\n        ariaLabel: {\n            type: String,\n            default: null\n        }\n    },\n    style: KnobStyle,\n    provide() {\n        return {\n            $pcKnob: this,\n            $parentInstance: this\n        };\n    }\n};\n</script>\n","<template>\n    <div :class=\"cx('root')\" v-bind=\"ptmi('root')\">\n        <svg\n            viewBox=\"0 0 100 100\"\n            role=\"slider\"\n            :width=\"size\"\n            :height=\"size\"\n            :tabindex=\"readonly || disabled ? -1 : tabindex\"\n            :aria-valuemin=\"min\"\n            :aria-valuemax=\"max\"\n            :aria-valuenow=\"d_value\"\n            :aria-labelledby=\"ariaLabelledby\"\n            :aria-label=\"ariaLabel\"\n            @click=\"onClick\"\n            @blur=\"onBlur\"\n            @keydown=\"onKeyDown\"\n            @mousedown=\"onMouseDown\"\n            @mouseup=\"onMouseUp\"\n            @touchstart.passive=\"onTouchStart\"\n            @touchend=\"onTouchEnd\"\n            v-bind=\"ptm('svg')\"\n        >\n            <path :d=\"rangePath\" :stroke-width=\"strokeWidth\" :stroke=\"rangeColor\" :class=\"cx('range')\" v-bind=\"ptm('range')\"></path>\n            <path :d=\"valuePath\" :stroke-width=\"strokeWidth\" :stroke=\"valueColor\" :class=\"cx('value')\" v-bind=\"ptm('value')\"></path>\n            <text v-if=\"showValue\" :x=\"50\" :y=\"57\" text-anchor=\"middle\" :fill=\"textColor\" :class=\"cx('text')\" v-bind=\"ptm('text')\">{{ valueToDisplay }}</text>\n        </svg>\n    </div>\n</template>\n\n<script>\nimport BaseKnob from './BaseKnob.vue';\n\n// Set fix value for SSR.\nconst Math_PI = 3.14159265358979;\n\nexport default {\n    name: 'Knob',\n    extends: BaseKnob,\n    inheritAttrs: false,\n    emits: ['change'],\n    data() {\n        return {\n            radius: 40,\n            midX: 50,\n            midY: 50,\n            minRadians: (4 * Math_PI) / 3,\n            maxRadians: -Math_PI / 3\n        };\n    },\n    methods: {\n        updateValueByOffset(offsetX, offsetY) {\n            let dx = offsetX - this.size / 2;\n            let dy = this.size / 2 - offsetY;\n            let angle = Math.atan2(dy, dx);\n            let start = -Math_PI / 2 - Math_PI / 6;\n\n            this.updateModel(angle, start);\n        },\n        updateModel(angle, start) {\n            let mappedValue;\n\n            if (angle > this.maxRadians) mappedValue = this.mapRange(angle, this.minRadians, this.maxRadians, this.min, this.max);\n            else if (angle < start) mappedValue = this.mapRange(angle + 2 * Math_PI, this.minRadians, this.maxRadians, this.min, this.max);\n            else return;\n\n            let newValue = Math.round((mappedValue - this.min) / this.step) * this.step + this.min;\n\n            this.writeValue(newValue);\n            this.$emit('change', newValue);\n        },\n        updateModelValue(newValue) {\n            if (newValue > this.max) this.writeValue(this.max);\n            else if (newValue < this.min) this.writeValue(this.min);\n            else this.writeValue(newValue);\n        },\n        mapRange(x, inMin, inMax, outMin, outMax) {\n            return ((x - inMin) * (outMax - outMin)) / (inMax - inMin) + outMin;\n        },\n        onClick(event) {\n            if (!this.disabled && !this.readonly) {\n                this.updateValueByOffset(event.offsetX, event.offsetY);\n            }\n        },\n        onBlur(event) {\n            this.formField.onBlur?.(event);\n        },\n        onMouseDown(event) {\n            if (!this.disabled && !this.readonly) {\n                window.addEventListener('mousemove', this.onMouseMove);\n                window.addEventListener('mouseup', this.onMouseUp);\n                event.preventDefault();\n            }\n        },\n        onMouseUp(event) {\n            if (!this.disabled && !this.readonly) {\n                window.removeEventListener('mousemove', this.onMouseMove);\n                window.removeEventListener('mouseup', this.onMouseUp);\n                event.preventDefault();\n            }\n        },\n        onTouchStart(event) {\n            if (!this.disabled && !this.readonly) {\n                window.addEventListener('touchmove', this.onTouchMove);\n                window.addEventListener('touchend', this.onTouchEnd);\n                event.preventDefault();\n            }\n        },\n        onTouchEnd(event) {\n            if (!this.disabled && !this.readonly) {\n                window.removeEventListener('touchmove', this.onTouchMove);\n                window.removeEventListener('touchend', this.onTouchEnd);\n                event.preventDefault();\n            }\n        },\n        onMouseMove(event) {\n            if (!this.disabled && !this.readonly) {\n                this.updateValueByOffset(event.offsetX, event.offsetY);\n                event.preventDefault();\n            }\n        },\n        onTouchMove(event) {\n            if (!this.disabled && !this.readonly && event.touches.length == 1) {\n                const rect = this.$el.getBoundingClientRect();\n                const touch = event.targetTouches.item(0);\n                const offsetX = touch.clientX - rect.left;\n                const offsetY = touch.clientY - rect.top;\n\n                this.updateValueByOffset(offsetX, offsetY);\n            }\n        },\n        onKeyDown(event) {\n            if (!this.disabled && !this.readonly) {\n                switch (event.code) {\n                    case 'ArrowRight':\n\n                    case 'ArrowUp': {\n                        event.preventDefault();\n                        this.updateModelValue(this.d_value + this.step);\n                        break;\n                    }\n\n                    case 'ArrowLeft':\n\n                    case 'ArrowDown': {\n                        event.preventDefault();\n                        this.updateModelValue(this.d_value - this.step);\n                        break;\n                    }\n\n                    case 'Home': {\n                        event.preventDefault();\n                        this.writeValue(this.min);\n                        break;\n                    }\n\n                    case 'End': {\n                        event.preventDefault();\n                        this.writeValue(this.max);\n                        break;\n                    }\n\n                    case 'PageUp': {\n                        event.preventDefault();\n                        this.updateModelValue(this.d_value + 10);\n                        break;\n                    }\n\n                    case 'PageDown': {\n                        event.preventDefault();\n                        this.updateModelValue(this.d_value - 10);\n                        break;\n                    }\n                }\n            }\n        }\n    },\n    computed: {\n        rangePath() {\n            return `M ${this.minX} ${this.minY} A ${this.radius} ${this.radius} 0 1 1 ${this.maxX} ${this.maxY}`;\n        },\n        valuePath() {\n            return `M ${this.zeroX} ${this.zeroY} A ${this.radius} ${this.radius} 0 ${this.largeArc} ${this.sweep} ${this.valueX} ${this.valueY}`;\n        },\n        zeroRadians() {\n            if (this.min > 0 && this.max > 0) return this.mapRange(this.min, this.min, this.max, this.minRadians, this.maxRadians);\n            else return this.mapRange(0, this.min, this.max, this.minRadians, this.maxRadians);\n        },\n        valueRadians() {\n            return this.mapRange(this.d_value, this.min, this.max, this.minRadians, this.maxRadians);\n        },\n        minX() {\n            return this.midX + Math.cos(this.minRadians) * this.radius;\n        },\n        minY() {\n            return this.midY - Math.sin(this.minRadians) * this.radius;\n        },\n        maxX() {\n            return this.midX + Math.cos(this.maxRadians) * this.radius;\n        },\n        maxY() {\n            return this.midY - Math.sin(this.maxRadians) * this.radius;\n        },\n        zeroX() {\n            return this.midX + Math.cos(this.zeroRadians) * this.radius;\n        },\n        zeroY() {\n            return this.midY - Math.sin(this.zeroRadians) * this.radius;\n        },\n        valueX() {\n            return this.midX + Math.cos(this.valueRadians) * this.radius;\n        },\n        valueY() {\n            return this.midY - Math.sin(this.valueRadians) * this.radius;\n        },\n        largeArc() {\n            return Math.abs(this.zeroRadians - this.valueRadians) < Math_PI ? 0 : 1;\n        },\n        sweep() {\n            return this.valueRadians > this.zeroRadians ? 0 : 1;\n        },\n        valueToDisplay() {\n            if (typeof this.valueTemplate === 'string') {\n                return this.valueTemplate.replace(/{value}/g, this.d_value);\n            } else {\n                return this.valueTemplate(this.d_value);\n            }\n        }\n    }\n};\n//Derived and forked from https://github.com/kramer99/vue-knob-control\n</script>\n","<template>\n    <div :class=\"cx('root')\" v-bind=\"ptmi('root')\">\n        <svg\n            viewBox=\"0 0 100 100\"\n            role=\"slider\"\n            :width=\"size\"\n            :height=\"size\"\n            :tabindex=\"readonly || disabled ? -1 : tabindex\"\n            :aria-valuemin=\"min\"\n            :aria-valuemax=\"max\"\n            :aria-valuenow=\"d_value\"\n            :aria-labelledby=\"ariaLabelledby\"\n            :aria-label=\"ariaLabel\"\n            @click=\"onClick\"\n            @blur=\"onBlur\"\n            @keydown=\"onKeyDown\"\n            @mousedown=\"onMouseDown\"\n            @mouseup=\"onMouseUp\"\n            @touchstart.passive=\"onTouchStart\"\n            @touchend=\"onTouchEnd\"\n            v-bind=\"ptm('svg')\"\n        >\n            <path :d=\"rangePath\" :stroke-width=\"strokeWidth\" :stroke=\"rangeColor\" :class=\"cx('range')\" v-bind=\"ptm('range')\"></path>\n            <path :d=\"valuePath\" :stroke-width=\"strokeWidth\" :stroke=\"valueColor\" :class=\"cx('value')\" v-bind=\"ptm('value')\"></path>\n            <text v-if=\"showValue\" :x=\"50\" :y=\"57\" text-anchor=\"middle\" :fill=\"textColor\" :class=\"cx('text')\" v-bind=\"ptm('text')\">{{ valueToDisplay }}</text>\n        </svg>\n    </div>\n</template>\n\n<script>\nimport BaseKnob from './BaseKnob.vue';\n\n// Set fix value for SSR.\nconst Math_PI = 3.14159265358979;\n\nexport default {\n    name: 'Knob',\n    extends: BaseKnob,\n    inheritAttrs: false,\n    emits: ['change'],\n    data() {\n        return {\n            radius: 40,\n            midX: 50,\n            midY: 50,\n            minRadians: (4 * Math_PI) / 3,\n            maxRadians: -Math_PI / 3\n        };\n    },\n    methods: {\n        updateValueByOffset(offsetX, offsetY) {\n            let dx = offsetX - this.size / 2;\n            let dy = this.size / 2 - offsetY;\n            let angle = Math.atan2(dy, dx);\n            let start = -Math_PI / 2 - Math_PI / 6;\n\n            this.updateModel(angle, start);\n        },\n        updateModel(angle, start) {\n            let mappedValue;\n\n            if (angle > this.maxRadians) mappedValue = this.mapRange(angle, this.minRadians, this.maxRadians, this.min, this.max);\n            else if (angle < start) mappedValue = this.mapRange(angle + 2 * Math_PI, this.minRadians, this.maxRadians, this.min, this.max);\n            else return;\n\n            let newValue = Math.round((mappedValue - this.min) / this.step) * this.step + this.min;\n\n            this.writeValue(newValue);\n            this.$emit('change', newValue);\n        },\n        updateModelValue(newValue) {\n            if (newValue > this.max) this.writeValue(this.max);\n            else if (newValue < this.min) this.writeValue(this.min);\n            else this.writeValue(newValue);\n        },\n        mapRange(x, inMin, inMax, outMin, outMax) {\n            return ((x - inMin) * (outMax - outMin)) / (inMax - inMin) + outMin;\n        },\n        onClick(event) {\n            if (!this.disabled && !this.readonly) {\n                this.updateValueByOffset(event.offsetX, event.offsetY);\n            }\n        },\n        onBlur(event) {\n            this.formField.onBlur?.(event);\n        },\n        onMouseDown(event) {\n            if (!this.disabled && !this.readonly) {\n                window.addEventListener('mousemove', this.onMouseMove);\n                window.addEventListener('mouseup', this.onMouseUp);\n                event.preventDefault();\n            }\n        },\n        onMouseUp(event) {\n            if (!this.disabled && !this.readonly) {\n                window.removeEventListener('mousemove', this.onMouseMove);\n                window.removeEventListener('mouseup', this.onMouseUp);\n                event.preventDefault();\n            }\n        },\n        onTouchStart(event) {\n            if (!this.disabled && !this.readonly) {\n                window.addEventListener('touchmove', this.onTouchMove);\n                window.addEventListener('touchend', this.onTouchEnd);\n                event.preventDefault();\n            }\n        },\n        onTouchEnd(event) {\n            if (!this.disabled && !this.readonly) {\n                window.removeEventListener('touchmove', this.onTouchMove);\n                window.removeEventListener('touchend', this.onTouchEnd);\n                event.preventDefault();\n            }\n        },\n        onMouseMove(event) {\n            if (!this.disabled && !this.readonly) {\n                this.updateValueByOffset(event.offsetX, event.offsetY);\n                event.preventDefault();\n            }\n        },\n        onTouchMove(event) {\n            if (!this.disabled && !this.readonly && event.touches.length == 1) {\n                const rect = this.$el.getBoundingClientRect();\n                const touch = event.targetTouches.item(0);\n                const offsetX = touch.clientX - rect.left;\n                const offsetY = touch.clientY - rect.top;\n\n                this.updateValueByOffset(offsetX, offsetY);\n            }\n        },\n        onKeyDown(event) {\n            if (!this.disabled && !this.readonly) {\n                switch (event.code) {\n                    case 'ArrowRight':\n\n                    case 'ArrowUp': {\n                        event.preventDefault();\n                        this.updateModelValue(this.d_value + this.step);\n                        break;\n                    }\n\n                    case 'ArrowLeft':\n\n                    case 'ArrowDown': {\n                        event.preventDefault();\n                        this.updateModelValue(this.d_value - this.step);\n                        break;\n                    }\n\n                    case 'Home': {\n                        event.preventDefault();\n                        this.writeValue(this.min);\n                        break;\n                    }\n\n                    case 'End': {\n                        event.preventDefault();\n                        this.writeValue(this.max);\n                        break;\n                    }\n\n                    case 'PageUp': {\n                        event.preventDefault();\n                        this.updateModelValue(this.d_value + 10);\n                        break;\n                    }\n\n                    case 'PageDown': {\n                        event.preventDefault();\n                        this.updateModelValue(this.d_value - 10);\n                        break;\n                    }\n                }\n            }\n        }\n    },\n    computed: {\n        rangePath() {\n            return `M ${this.minX} ${this.minY} A ${this.radius} ${this.radius} 0 1 1 ${this.maxX} ${this.maxY}`;\n        },\n        valuePath() {\n            return `M ${this.zeroX} ${this.zeroY} A ${this.radius} ${this.radius} 0 ${this.largeArc} ${this.sweep} ${this.valueX} ${this.valueY}`;\n        },\n        zeroRadians() {\n            if (this.min > 0 && this.max > 0) return this.mapRange(this.min, this.min, this.max, this.minRadians, this.maxRadians);\n            else return this.mapRange(0, this.min, this.max, this.minRadians, this.maxRadians);\n        },\n        valueRadians() {\n            return this.mapRange(this.d_value, this.min, this.max, this.minRadians, this.maxRadians);\n        },\n        minX() {\n            return this.midX + Math.cos(this.minRadians) * this.radius;\n        },\n        minY() {\n            return this.midY - Math.sin(this.minRadians) * this.radius;\n        },\n        maxX() {\n            return this.midX + Math.cos(this.maxRadians) * this.radius;\n        },\n        maxY() {\n            return this.midY - Math.sin(this.maxRadians) * this.radius;\n        },\n        zeroX() {\n            return this.midX + Math.cos(this.zeroRadians) * this.radius;\n        },\n        zeroY() {\n            return this.midY - Math.sin(this.zeroRadians) * this.radius;\n        },\n        valueX() {\n            return this.midX + Math.cos(this.valueRadians) * this.radius;\n        },\n        valueY() {\n            return this.midY - Math.sin(this.valueRadians) * this.radius;\n        },\n        largeArc() {\n            return Math.abs(this.zeroRadians - this.valueRadians) < Math_PI ? 0 : 1;\n        },\n        sweep() {\n            return this.valueRadians > this.zeroRadians ? 0 : 1;\n        },\n        valueToDisplay() {\n            if (typeof this.valueTemplate === 'string') {\n                return this.valueTemplate.replace(/{value}/g, this.d_value);\n            } else {\n                return this.valueTemplate(this.d_value);\n            }\n        }\n    }\n};\n//Derived and forked from https://github.com/kramer99/vue-knob-control\n</script>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}