{"ast":null,"code":"import { ref, onMounted } from 'vue';\nimport axios from 'axios';\nexport default {\n  __name: 'AssignedRoutesPage',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const assignedRoutes = ref([]);\n    const loading = ref(true);\n    const error = ref(null);\n    const fetchRoutes = async () => {\n      try {\n        const response = await axios.get('http://127.0.0.1:8000/api/complaints/routes');\n        assignedRoutes.value = response.data;\n      } catch (err) {\n        error.value = 'Failed to load routes';\n      } finally {\n        loading.value = false;\n      }\n    };\n    onMounted(fetchRoutes);\n    const __returned__ = {\n      assignedRoutes,\n      loading,\n      error,\n      fetchRoutes,\n      ref,\n      onMounted,\n      get axios() {\n        return axios;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","axios","assignedRoutes","loading","error","fetchRoutes","response","get","value","data","err"],"sources":["C:/Users/darle/solid-waste-management-system/src/components/AssignedRoutesPage.vue"],"sourcesContent":["<template>\r\n  <div class=\"p-4\">\r\n    <h1 class=\"text-2xl font-bold mb-4\">Assigned Routes</h1>\r\n    <div v-if=\"loading\">Loading...</div>\r\n    <div v-else-if=\"error\" class=\"text-red-500\">{{ error }}</div>\r\n    <ul v-else class=\"bg-white shadow rounded-lg p-4\">\r\n      <li v-for=\"route in assignedRoutes\" :key=\"route.id\" class=\"border-b py-2\">\r\n        <div class=\"font-semibold\">{{ route.name }}</div>\r\n        <div>{{ route.description }}</div>\r\n        <div><strong>Email:</strong> {{ route.email }}</div>\r\n        <div><strong>Address:</strong> {{ route.address }}</div>\r\n        <div><strong>File Path:</strong> {{ route.file_path }}</div>\r\n        <div><strong>Created At:</strong> {{ route.created_at }}</div>\r\n        <div><strong>Updated At:</strong> {{ route.updated_at }}</div>\r\n        <div><strong>Verified:</strong> {{ route.is_verified ? 'Yes' : 'No' }}</div>\r\n        <div><strong>Assigned:</strong> {{ route.is_assigned ? 'Yes' : 'No' }}</div>\r\n        <div><strong>Assigned To:</strong> {{ route.assigned_to }}</div>\r\n        <div><strong>Assigned Date:</strong> {{ route.assigned_date }}</div>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted } from 'vue';\r\nimport axios from 'axios';\r\n\r\nconst assignedRoutes = ref([]);\r\nconst loading = ref(true);\r\nconst error = ref(null);\r\n\r\nconst fetchRoutes = async () => {\r\n  try {\r\n    const response = await axios.get('http://127.0.0.1:8000/api/complaints/routes');\r\n    assignedRoutes.value = response.data;\r\n  } catch (err) {\r\n    error.value = 'Failed to load routes';\r\n  } finally {\r\n    loading.value = false;\r\n  }\r\n};\r\n\r\nonMounted(fetchRoutes);\r\n</script>\r\n\r\n<style scoped>\r\nul li:last-child {\r\n  border-bottom: none;\r\n}\r\n</style>\r\n"],"mappings":"AAwBA,SAASA,GAAG,EAAEC,SAAS,QAAQ,KAAK;AACpC,OAAOC,KAAK,MAAM,OAAO;;;;;;;IAEzB,MAAMC,cAAc,GAAGH,GAAG,CAAC,EAAE,CAAC;IAC9B,MAAMI,OAAO,GAAGJ,GAAG,CAAC,IAAI,CAAC;IACzB,MAAMK,KAAK,GAAGL,GAAG,CAAC,IAAI,CAAC;IAEvB,MAAMM,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,GAAG,CAAC,6CAA6C,CAAC;QAC/EL,cAAc,CAACM,KAAK,GAAGF,QAAQ,CAACG,IAAI;MACtC,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZN,KAAK,CAACI,KAAK,GAAG,uBAAuB;MACvC,CAAC,SAAS;QACRL,OAAO,CAACK,KAAK,GAAG,KAAK;MACvB;IACF,CAAC;IAEDR,SAAS,CAACK,WAAW,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}