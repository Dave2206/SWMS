{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport axios from \"axios\";\nexport default {\n  name: \"HeaderVue\",\n  data() {\n    return {\n      showLoginModal: false,\n      // Controls modal visibility\n      isLoggedIn: false,\n      // Indicates if the user is logged in\n      email: \"\",\n      // Email input\n      password: \"\",\n      // Password input\n      abilities: [] // User's access levels\n    };\n  },\n  computed: {\n    filteredMenuItems() {\n      // Generate menu items dynamically based on abilities\n      return this.abilities.map(ability => {\n        const routes = {\n          announcement: {\n            label: \"Announcement\",\n            icon: \"pi pi-megaphone\",\n            page: \"AnnouncementPage\"\n          },\n          messages: {\n            label: \"Messages\",\n            icon: \"pi pi-comments\",\n            page: \"MessagePage\"\n          },\n          account_management: {\n            label: \"Account Management\",\n            icon: \"pi pi-users\",\n            page: \"AccountManagementPage\"\n          },\n          concern: {\n            label: \"Concerns\",\n            icon: \"pi pi-comments\",\n            page: \"ConcernPage\"\n          },\n          reports_and_analytics: {\n            label: \"Reports and Analytics\",\n            icon: \"pi pi-file\",\n            page: \"ReportPage\"\n          },\n          complain: {\n            label: \"Complain\",\n            icon: \"pi pi-folder-open\",\n            page: \"ComplainPage\"\n          },\n          routes: {\n            label: \"Routes\",\n            icon: \"pi pi-folder-open\",\n            page: \"RoutesPage\"\n          }\n        };\n        const route = routes[ability];\n        return route ? {\n          label: route.label,\n          icon: route.icon,\n          command: () => this.navigateTo(route.page)\n        } : null;\n      }).filter(item => item !== null); // Filter out null entries\n    }\n  },\n  methods: {\n    async login() {\n      try {\n        const response = await axios.post(\"http://127.0.0.1:8000/api/login\", {\n          email: this.email,\n          password: this.password\n        });\n\n        // Save token to localStorage\n        localStorage.setItem(\"auth_token\", response.data.access_token);\n\n        // Set token in axios headers\n        axios.defaults.headers.common[\"Authorization\"] = `Bearer ${localStorage.getItem(\"auth_token\")}`;\n\n        // Set login state\n        this.isLoggedIn = true;\n        this.showLoginModal = false;\n        this.$refs.toast.add({\n          severity: 'success',\n          summary: 'Login successfully',\n          detail: \"Login successfully\",\n          life: 3000\n        });\n\n        // Fetch user abilities\n        await this.fetchAbilities();\n\n        // Redirect to dashboard\n        this.$router.push(\"/DashboardPage\");\n      } catch (error) {\n        this.$refs.toast.add({\n          severity: 'error',\n          summary: 'Login failed',\n          detail: error.response.data.message,\n          life: 3000\n        });\n      }\n    },\n    logout() {\n      localStorage.removeItem(\"auth_token\");\n      this.isLoggedIn = false;\n      this.abilities = [];\n      this.$router.push(\"/\");\n    },\n    async fetchAbilities() {\n      try {\n        const response = await axios.get(\"http://127.0.0.1:8000/api/user/access-levels\");\n        this.abilities = response.data.access_levels || [];\n      } catch (error) {\n        console.error(\"Error fetching abilities:\", error);\n        this.abilities = [];\n      }\n    },\n    navigateTo(page) {\n      this.$router.push({\n        name: page\n      });\n    }\n  },\n  async mounted() {\n    const token = localStorage.getItem(\"auth_token\");\n    if (token) {\n      axios.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\n      this.isLoggedIn = true;\n      await this.fetchAbilities();\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","showLoginModal","isLoggedIn","email","password","abilities","computed","filteredMenuItems","map","ability","routes","announcement","label","icon","page","messages","account_management","concern","reports_and_analytics","complain","route","command","navigateTo","filter","item","methods","login","response","post","localStorage","setItem","access_token","defaults","headers","common","getItem","$refs","toast","add","severity","summary","detail","life","fetchAbilities","$router","push","error","message","logout","removeItem","get","access_levels","console","mounted","token"],"sources":["C:\\Users\\darle\\solid-waste-management-system\\src\\components\\Header.vue"],"sourcesContent":["<template>\r\n    <!-- Menu Bar -->\r\n    <Menubar :model=\"filteredMenuItems\">\r\n      <template #start>\r\n        <span class=\"text-xl font-bold text-gray-800\">Solid Waste Management System</span>\r\n      </template>\r\n      <template #end>\r\n        <!-- Login or Logout Button -->\r\n        <Button \r\n          v-if=\"!isLoggedIn\" \r\n          label=\"Login\" \r\n          icon=\"pi pi-user\" \r\n          class=\"p-button-outlined p-button-lg\" \r\n          @click=\"showLoginModal = true\" \r\n        />\r\n        <Button \r\n          v-if=\"isLoggedIn\" \r\n          label=\"Logout\" \r\n          icon=\"pi pi-sign-out\" \r\n          class=\"p-button-outlined p-button-lg\" \r\n          @click=\"logout\" \r\n        />\r\n      </template>\r\n    </Menubar>\r\n\r\n    <!-- Login Modal -->\r\n    <Dialog \r\n      header=\"Login\" \r\n      v-model:visible=\"showLoginModal\" \r\n      modal \r\n      class=\"login-modal p-dialog-lg\" \r\n      style=\"width: 40vw; max-width: 500px;\"\r\n    >\r\n      <!-- Logo -->\r\n      <div class=\"flex justify-center mb-6\">\r\n        <img src=\"assets/logo.png\" alt=\"Logo\" class=\"h-25 w-auto\" />\r\n      </div>\r\n\r\n      <div class=\"p-fluid\">\r\n        <!-- Email Field -->\r\n        <div class=\"p-field mb-4\">\r\n          <label for=\"email\" class=\"block text-lg font-medium text-gray-700 mb-2\">Email</label>\r\n          <InputText \r\n            id=\"email\" \r\n            v-model=\"email\" \r\n            placeholder=\"Enter your email\" \r\n            class=\"p-inputtext-lg w-full\" \r\n          />\r\n        </div>\r\n\r\n        <!-- Password Field -->\r\n        <div class=\"p-field mb-6\">\r\n          <label for=\"password\" class=\"block text-lg font-medium text-gray-700 mb-2\">Password</label>\r\n          <InputText \r\n            type=\"password\" \r\n            id=\"password\" \r\n            v-model=\"password\" \r\n            placeholder=\"Enter your password\" \r\n            class=\"p-inputtext-lg w-full\" \r\n          />\r\n        </div>\r\n\r\n        <!-- Login Button -->\r\n        <div class=\"p-field button-container\">\r\n          <Button \r\n            label=\"Login\" \r\n            icon=\"pi pi-sign-in\" \r\n            class=\"p-button-lg p-button-success w-full login-btn\" \r\n            @click=\"login\" \r\n          />\r\n        </div>\r\n      </div>\r\n    </Dialog>\r\n     <!-- Toast Notification -->\r\n    <Toast ref=\"toast\"></Toast>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  name: \"HeaderVue\",\r\n  data() {\r\n    return {\r\n      showLoginModal: false, // Controls modal visibility\r\n      isLoggedIn: false, // Indicates if the user is logged in\r\n      email: \"\", // Email input\r\n      password: \"\", // Password input\r\n      abilities: [], // User's access levels\r\n    };\r\n  },\r\n  computed: {\r\n    filteredMenuItems() {\r\n      // Generate menu items dynamically based on abilities\r\n      return this.abilities.map((ability) => {\r\n        const routes = {\r\n          announcement: { label: \"Announcement\", icon: \"pi pi-megaphone\", page: \"AnnouncementPage\" },\r\n          messages: { label: \"Messages\", icon: \"pi pi-comments\", page: \"MessagePage\" },\r\n          account_management: { label: \"Account Management\", icon: \"pi pi-users\", page: \"AccountManagementPage\" },\r\n          concern: { label: \"Concerns\", icon: \"pi pi-comments\", page: \"ConcernPage\" },\r\n          reports_and_analytics: { label: \"Reports and Analytics\", icon: \"pi pi-file\", page: \"ReportPage\" },\r\n          complain:{ label: \"Complain\", icon: \"pi pi-folder-open\", page: \"ComplainPage\"},\r\n          routes:{ label: \"Routes\", icon: \"pi pi-folder-open\", page: \"RoutesPage\"},\r\n        };\r\n\r\n        const route = routes[ability];\r\n        return route\r\n          ? {\r\n              label: route.label,\r\n              icon: route.icon,\r\n              command: () => this.navigateTo(route.page),\r\n            }\r\n          : null;\r\n      }).filter((item) => item !== null); // Filter out null entries\r\n    },\r\n  },\r\n  methods: {\r\n    async login() {\r\n      try {\r\n        const response = await axios.post(\"http://127.0.0.1:8000/api/login\", {\r\n          email: this.email,\r\n          password: this.password,\r\n        });\r\n\r\n        // Save token to localStorage\r\n        localStorage.setItem(\"auth_token\", response.data.access_token);\r\n\r\n        // Set token in axios headers\r\n        axios.defaults.headers.common[\"Authorization\"] = `Bearer ${localStorage.getItem(\"auth_token\")}`;\r\n\r\n        // Set login state\r\n        this.isLoggedIn = true;\r\n        this.showLoginModal = false;\r\n\r\n        this.$refs.toast.add({ severity: 'success', summary: 'Login successfully', detail: \"Login successfully\", life: 3000 });\r\n\r\n        // Fetch user abilities\r\n        await this.fetchAbilities();\r\n\r\n        // Redirect to dashboard\r\n        this.$router.push(\"/DashboardPage\");\r\n      } catch (error) {\r\n         this.$refs.toast.add({ severity: 'error', summary: 'Login failed', detail: error.response.data.message, life: 3000 });\r\n      }\r\n    },\r\n    logout() {\r\n      localStorage.removeItem(\"auth_token\");\r\n      this.isLoggedIn = false;\r\n      this.abilities = [];\r\n      this.$router.push(\"/\");\r\n    },\r\n    async fetchAbilities() {\r\n      try {\r\n        const response = await axios.get(\"http://127.0.0.1:8000/api/user/access-levels\");\r\n        this.abilities = response.data.access_levels || [];\r\n      } catch (error) {\r\n        console.error(\"Error fetching abilities:\", error);\r\n        this.abilities = [];\r\n      }\r\n    },\r\n    navigateTo(page) {\r\n      this.$router.push({ name: page });\r\n    },\r\n  },\r\n  async mounted() {\r\n    const token = localStorage.getItem(\"auth_token\");\r\n    if (token) {\r\n      axios.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\r\n      this.isLoggedIn = true;\r\n      await this.fetchAbilities();\r\n    }\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.header-container {\r\n  padding: 0 20px;\r\n  background: #f8f9fa;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}