{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.find.js\";\nimport \"core-js/modules/esnext.iterator.for-each.js\";\nimport \"core-js/modules/esnext.iterator.reduce.js\";\nimport \"core-js/modules/esnext.iterator.some.js\";\nimport { findSingle, focus, getAttribute } from '@primeuix/utils/dom';\nimport { resolve, isNotEmpty, isPrintableCharacter, findLast, isEmpty, equals } from '@primeuix/utils/object';\nimport { UniqueComponentId } from '@primevue/core/utils';\nimport ChevronDownIcon from '@primevue/icons/chevrondown';\nimport ChevronRightIcon from '@primevue/icons/chevronright';\nimport { mergeProps, resolveComponent, resolveDirective, openBlock, createElementBlock, normalizeClass, Fragment, renderList, createElementVNode, withDirectives, createBlock, resolveDynamicComponent, createCommentVNode, toDisplayString, createVNode, Transition, withCtx, vShow, renderSlot } from 'vue';\nimport BaseComponent from '@primevue/core/basecomponent';\nimport PanelMenuStyle from 'primevue/panelmenu/style';\nimport Ripple from 'primevue/ripple';\nvar script$3 = {\n  name: 'BasePanelMenu',\n  \"extends\": BaseComponent,\n  props: {\n    model: {\n      type: Array,\n      \"default\": null\n    },\n    expandedKeys: {\n      type: Object,\n      \"default\": null\n    },\n    multiple: {\n      type: Boolean,\n      \"default\": false\n    },\n    tabindex: {\n      type: Number,\n      \"default\": 0\n    }\n  },\n  style: PanelMenuStyle,\n  provide: function provide() {\n    return {\n      $pcPanelMenu: this,\n      $parentInstance: this\n    };\n  }\n};\nvar script$2 = {\n  name: 'PanelMenuSub',\n  hostName: 'PanelMenu',\n  \"extends\": BaseComponent,\n  emits: ['item-toggle', 'item-mousemove'],\n  props: {\n    panelId: {\n      type: String,\n      \"default\": null\n    },\n    focusedItemId: {\n      type: String,\n      \"default\": null\n    },\n    items: {\n      type: Array,\n      \"default\": null\n    },\n    level: {\n      type: Number,\n      \"default\": 0\n    },\n    templates: {\n      type: Object,\n      \"default\": null\n    },\n    activeItemPath: {\n      type: Object,\n      \"default\": null\n    },\n    tabindex: {\n      type: Number,\n      \"default\": -1\n    }\n  },\n  methods: {\n    getItemId: function getItemId(processedItem) {\n      return \"\".concat(this.panelId, \"_\").concat(processedItem.key);\n    },\n    getItemKey: function getItemKey(processedItem) {\n      return this.getItemId(processedItem);\n    },\n    getItemProp: function getItemProp(processedItem, name, params) {\n      return processedItem && processedItem.item ? resolve(processedItem.item[name], params) : undefined;\n    },\n    getItemLabel: function getItemLabel(processedItem) {\n      return this.getItemProp(processedItem, 'label');\n    },\n    getPTOptions: function getPTOptions(key, processedItem, index) {\n      return this.ptm(key, {\n        context: {\n          item: processedItem.item,\n          index: index,\n          active: this.isItemActive(processedItem),\n          focused: this.isItemFocused(processedItem),\n          disabled: this.isItemDisabled(processedItem)\n        }\n      });\n    },\n    isItemActive: function isItemActive(processedItem) {\n      return this.activeItemPath.some(function (path) {\n        return path.key === processedItem.key;\n      });\n    },\n    isItemVisible: function isItemVisible(processedItem) {\n      return this.getItemProp(processedItem, 'visible') !== false;\n    },\n    isItemDisabled: function isItemDisabled(processedItem) {\n      return this.getItemProp(processedItem, 'disabled');\n    },\n    isItemFocused: function isItemFocused(processedItem) {\n      return this.focusedItemId === this.getItemId(processedItem);\n    },\n    isItemGroup: function isItemGroup(processedItem) {\n      return isNotEmpty(processedItem.items);\n    },\n    onItemClick: function onItemClick(event, processedItem) {\n      this.getItemProp(processedItem, 'command', {\n        originalEvent: event,\n        item: processedItem.item\n      });\n      this.$emit('item-toggle', {\n        processedItem: processedItem,\n        expanded: !this.isItemActive(processedItem)\n      });\n    },\n    onItemToggle: function onItemToggle(event) {\n      this.$emit('item-toggle', event);\n    },\n    onItemMouseMove: function onItemMouseMove(event, processedItem) {\n      this.$emit('item-mousemove', {\n        originalEvent: event,\n        processedItem: processedItem\n      });\n    },\n    getAriaSetSize: function getAriaSetSize() {\n      var _this = this;\n      return this.items.filter(function (processedItem) {\n        return _this.isItemVisible(processedItem) && !_this.getItemProp(processedItem, 'separator');\n      }).length;\n    },\n    getAriaPosInset: function getAriaPosInset(index) {\n      var _this2 = this;\n      return index - this.items.slice(0, index).filter(function (processedItem) {\n        return _this2.isItemVisible(processedItem) && _this2.getItemProp(processedItem, 'separator');\n      }).length + 1;\n    },\n    getMenuItemProps: function getMenuItemProps(processedItem, index) {\n      return {\n        action: mergeProps({\n          \"class\": this.cx('itemLink'),\n          tabindex: -1\n        }, this.getPTOptions('itemLink', processedItem, index)),\n        icon: mergeProps({\n          \"class\": [this.cx('itemIcon'), this.getItemProp(processedItem, 'icon')]\n        }, this.getPTOptions('itemIcon', processedItem, index)),\n        label: mergeProps({\n          \"class\": this.cx('itemLabel')\n        }, this.getPTOptions('itemLabel', processedItem, index)),\n        submenuicon: mergeProps({\n          \"class\": this.cx('submenuIcon')\n        }, this.getPTOptions('submenuicon', processedItem, index))\n      };\n    }\n  },\n  components: {\n    ChevronRightIcon: ChevronRightIcon,\n    ChevronDownIcon: ChevronDownIcon\n  },\n  directives: {\n    ripple: Ripple\n  }\n};\nvar _hoisted_1$1 = [\"tabindex\"];\nvar _hoisted_2$1 = [\"id\", \"aria-label\", \"aria-expanded\", \"aria-level\", \"aria-setsize\", \"aria-posinset\", \"data-p-focused\", \"data-p-disabled\"];\nvar _hoisted_3$1 = [\"onClick\", \"onMousemove\"];\nvar _hoisted_4$1 = [\"href\", \"target\"];\nfunction render$2(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_PanelMenuSub = resolveComponent(\"PanelMenuSub\", true);\n  var _directive_ripple = resolveDirective(\"ripple\");\n  return openBlock(), createElementBlock(\"ul\", {\n    \"class\": normalizeClass(_ctx.cx('submenu')),\n    tabindex: $props.tabindex\n  }, [(openBlock(true), createElementBlock(Fragment, null, renderList($props.items, function (processedItem, index) {\n    return openBlock(), createElementBlock(Fragment, {\n      key: $options.getItemKey(processedItem)\n    }, [$options.isItemVisible(processedItem) && !$options.getItemProp(processedItem, 'separator') ? (openBlock(), createElementBlock(\"li\", mergeProps({\n      key: 0,\n      id: $options.getItemId(processedItem),\n      \"class\": [_ctx.cx('item', {\n        processedItem: processedItem\n      }), $options.getItemProp(processedItem, 'class')],\n      style: $options.getItemProp(processedItem, 'style'),\n      role: \"treeitem\",\n      \"aria-label\": $options.getItemLabel(processedItem),\n      \"aria-expanded\": $options.isItemGroup(processedItem) ? $options.isItemActive(processedItem) : undefined,\n      \"aria-level\": $props.level + 1,\n      \"aria-setsize\": $options.getAriaSetSize(),\n      \"aria-posinset\": $options.getAriaPosInset(index),\n      ref_for: true\n    }, $options.getPTOptions('item', processedItem, index), {\n      \"data-p-focused\": $options.isItemFocused(processedItem),\n      \"data-p-disabled\": $options.isItemDisabled(processedItem)\n    }), [createElementVNode(\"div\", mergeProps({\n      \"class\": _ctx.cx('itemContent'),\n      onClick: function onClick($event) {\n        return $options.onItemClick($event, processedItem);\n      },\n      onMousemove: function onMousemove($event) {\n        return $options.onItemMouseMove($event, processedItem);\n      },\n      ref_for: true\n    }, $options.getPTOptions('itemContent', processedItem, index)), [!$props.templates.item ? withDirectives((openBlock(), createElementBlock(\"a\", mergeProps({\n      key: 0,\n      href: $options.getItemProp(processedItem, 'url'),\n      \"class\": _ctx.cx('itemLink'),\n      target: $options.getItemProp(processedItem, 'target'),\n      tabindex: \"-1\",\n      ref_for: true\n    }, $options.getPTOptions('itemLink', processedItem, index)), [$options.isItemGroup(processedItem) ? (openBlock(), createElementBlock(Fragment, {\n      key: 0\n    }, [$props.templates.submenuicon ? (openBlock(), createBlock(resolveDynamicComponent($props.templates.submenuicon), mergeProps({\n      key: 0,\n      \"class\": _ctx.cx('submenuIcon'),\n      active: $options.isItemActive(processedItem),\n      ref_for: true\n    }, $options.getPTOptions('submenuIcon', processedItem, index)), null, 16, [\"class\", \"active\"])) : (openBlock(), createBlock(resolveDynamicComponent($options.isItemActive(processedItem) ? 'ChevronDownIcon' : 'ChevronRightIcon'), mergeProps({\n      key: 1,\n      \"class\": _ctx.cx('submenuIcon'),\n      ref_for: true\n    }, $options.getPTOptions('submenuIcon', processedItem, index)), null, 16, [\"class\"]))], 64)) : createCommentVNode(\"\", true), $props.templates.itemicon ? (openBlock(), createBlock(resolveDynamicComponent($props.templates.itemicon), {\n      key: 1,\n      item: processedItem.item,\n      \"class\": normalizeClass(_ctx.cx('itemIcon'))\n    }, null, 8, [\"item\", \"class\"])) : $options.getItemProp(processedItem, 'icon') ? (openBlock(), createElementBlock(\"span\", mergeProps({\n      key: 2,\n      \"class\": [_ctx.cx('itemIcon'), $options.getItemProp(processedItem, 'icon')],\n      ref_for: true\n    }, $options.getPTOptions('itemIcon', processedItem, index)), null, 16)) : createCommentVNode(\"\", true), createElementVNode(\"span\", mergeProps({\n      \"class\": _ctx.cx('itemLabel'),\n      ref_for: true\n    }, $options.getPTOptions('itemLabel', processedItem, index)), toDisplayString($options.getItemLabel(processedItem)), 17)], 16, _hoisted_4$1)), [[_directive_ripple]]) : (openBlock(), createBlock(resolveDynamicComponent($props.templates.item), {\n      key: 1,\n      item: processedItem.item,\n      root: false,\n      active: $options.isItemActive(processedItem),\n      hasSubmenu: $options.isItemGroup(processedItem),\n      label: $options.getItemLabel(processedItem),\n      props: $options.getMenuItemProps(processedItem, index)\n    }, null, 8, [\"item\", \"active\", \"hasSubmenu\", \"label\", \"props\"]))], 16, _hoisted_3$1), createVNode(Transition, mergeProps({\n      name: \"p-toggleable-content\",\n      ref_for: true\n    }, _ctx.ptm('transition')), {\n      \"default\": withCtx(function () {\n        return [withDirectives(createElementVNode(\"div\", mergeProps({\n          \"class\": _ctx.cx('contentContainer'),\n          ref_for: true\n        }, _ctx.ptm('contentContainer')), [$options.isItemVisible(processedItem) && $options.isItemGroup(processedItem) ? (openBlock(), createBlock(_component_PanelMenuSub, mergeProps({\n          key: 0,\n          id: $options.getItemId(processedItem) + '_list',\n          role: \"group\",\n          panelId: $props.panelId,\n          focusedItemId: $props.focusedItemId,\n          items: processedItem.items,\n          level: $props.level + 1,\n          templates: $props.templates,\n          activeItemPath: $props.activeItemPath,\n          onItemToggle: $options.onItemToggle,\n          onItemMousemove: _cache[0] || (_cache[0] = function ($event) {\n            return _ctx.$emit('item-mousemove', $event);\n          }),\n          pt: _ctx.pt,\n          unstyled: _ctx.unstyled,\n          ref_for: true\n        }, _ctx.ptm('submenu')), null, 16, [\"id\", \"panelId\", \"focusedItemId\", \"items\", \"level\", \"templates\", \"activeItemPath\", \"onItemToggle\", \"pt\", \"unstyled\"])) : createCommentVNode(\"\", true)], 16), [[vShow, $options.isItemActive(processedItem)]])];\n      }),\n      _: 2\n    }, 1040)], 16, _hoisted_2$1)) : createCommentVNode(\"\", true), $options.isItemVisible(processedItem) && $options.getItemProp(processedItem, 'separator') ? (openBlock(), createElementBlock(\"li\", mergeProps({\n      key: 1,\n      style: $options.getItemProp(processedItem, 'style'),\n      \"class\": [_ctx.cx('separator'), $options.getItemProp(processedItem, 'class')],\n      role: \"separator\",\n      ref_for: true\n    }, _ctx.ptm('separator')), null, 16)) : createCommentVNode(\"\", true)], 64);\n  }), 128))], 10, _hoisted_1$1);\n}\nscript$2.render = render$2;\nfunction _slicedToArray(r, e) {\n  return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest();\n}\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _unsupportedIterableToArray(r, a) {\n  if (r) {\n    if (\"string\" == typeof r) return _arrayLikeToArray(r, a);\n    var t = {}.toString.call(r).slice(8, -1);\n    return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0;\n  }\n}\nfunction _arrayLikeToArray(r, a) {\n  (null == a || a > r.length) && (a = r.length);\n  for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];\n  return n;\n}\nfunction _iterableToArrayLimit(r, l) {\n  var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"];\n  if (null != t) {\n    var e,\n      n,\n      i,\n      u,\n      a = [],\n      f = !0,\n      o = !1;\n    try {\n      if (i = (t = t.call(r)).next, 0 === l) ;else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0);\n    } catch (r) {\n      o = !0, n = r;\n    } finally {\n      try {\n        if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return;\n      } finally {\n        if (o) throw n;\n      }\n    }\n    return a;\n  }\n}\nfunction _arrayWithHoles(r) {\n  if (Array.isArray(r)) return r;\n}\nvar script$1 = {\n  name: 'PanelMenuList',\n  hostName: 'PanelMenu',\n  \"extends\": BaseComponent,\n  emits: ['item-toggle', 'header-focus'],\n  props: {\n    panelId: {\n      type: String,\n      \"default\": null\n    },\n    items: {\n      type: Array,\n      \"default\": null\n    },\n    templates: {\n      type: Object,\n      \"default\": null\n    },\n    expandedKeys: {\n      type: Object,\n      \"default\": null\n    }\n  },\n  searchTimeout: null,\n  searchValue: null,\n  data: function data() {\n    return {\n      focused: false,\n      focusedItem: null,\n      activeItemPath: []\n    };\n  },\n  watch: {\n    expandedKeys: function expandedKeys(newValue) {\n      this.autoUpdateActiveItemPath(newValue);\n    }\n  },\n  mounted: function mounted() {\n    this.autoUpdateActiveItemPath(this.expandedKeys);\n  },\n  methods: {\n    getItemProp: function getItemProp(processedItem, name) {\n      return processedItem && processedItem.item ? resolve(processedItem.item[name]) : undefined;\n    },\n    getItemLabel: function getItemLabel(processedItem) {\n      return this.getItemProp(processedItem, 'label');\n    },\n    isItemVisible: function isItemVisible(processedItem) {\n      return this.getItemProp(processedItem, 'visible') !== false;\n    },\n    isItemDisabled: function isItemDisabled(processedItem) {\n      return this.getItemProp(processedItem, 'disabled');\n    },\n    isItemActive: function isItemActive(processedItem) {\n      return this.activeItemPath.some(function (path) {\n        return path.key === processedItem.parentKey;\n      });\n    },\n    isItemGroup: function isItemGroup(processedItem) {\n      return isNotEmpty(processedItem.items);\n    },\n    onFocus: function onFocus(event) {\n      this.focused = true;\n      this.focusedItem = this.focusedItem || (this.isElementInPanel(event, event.relatedTarget) ? this.findFirstItem() : this.findLastItem());\n    },\n    onBlur: function onBlur() {\n      this.focused = false;\n      this.focusedItem = null;\n      this.searchValue = '';\n    },\n    onKeyDown: function onKeyDown(event) {\n      var metaKey = event.metaKey || event.ctrlKey;\n      switch (event.code) {\n        case 'ArrowDown':\n          this.onArrowDownKey(event);\n          break;\n        case 'ArrowUp':\n          this.onArrowUpKey(event);\n          break;\n        case 'ArrowLeft':\n          this.onArrowLeftKey(event);\n          break;\n        case 'ArrowRight':\n          this.onArrowRightKey(event);\n          break;\n        case 'Home':\n          this.onHomeKey(event);\n          break;\n        case 'End':\n          this.onEndKey(event);\n          break;\n        case 'Space':\n          this.onSpaceKey(event);\n          break;\n        case 'Enter':\n        case 'NumpadEnter':\n          this.onEnterKey(event);\n          break;\n        case 'Escape':\n        case 'Tab':\n        case 'PageDown':\n        case 'PageUp':\n        case 'Backspace':\n        case 'ShiftLeft':\n        case 'ShiftRight':\n          //NOOP\n          break;\n        default:\n          if (!metaKey && isPrintableCharacter(event.key)) {\n            this.searchItems(event, event.key);\n          }\n          break;\n      }\n    },\n    onArrowDownKey: function onArrowDownKey(event) {\n      var processedItem = isNotEmpty(this.focusedItem) ? this.findNextItem(this.focusedItem) : this.findFirstItem();\n      this.changeFocusedItem({\n        originalEvent: event,\n        processedItem: processedItem,\n        focusOnNext: true\n      });\n      event.preventDefault();\n    },\n    onArrowUpKey: function onArrowUpKey(event) {\n      var processedItem = isNotEmpty(this.focusedItem) ? this.findPrevItem(this.focusedItem) : this.findLastItem();\n      this.changeFocusedItem({\n        originalEvent: event,\n        processedItem: processedItem,\n        selfCheck: true\n      });\n      event.preventDefault();\n    },\n    onArrowLeftKey: function onArrowLeftKey(event) {\n      var _this = this;\n      if (isNotEmpty(this.focusedItem)) {\n        var matched = this.activeItemPath.some(function (p) {\n          return p.key === _this.focusedItem.key;\n        });\n        if (matched) {\n          this.activeItemPath = this.activeItemPath.filter(function (p) {\n            return p.key !== _this.focusedItem.key;\n          });\n        } else {\n          this.focusedItem = isNotEmpty(this.focusedItem.parent) ? this.focusedItem.parent : this.focusedItem;\n        }\n        event.preventDefault();\n      }\n    },\n    onArrowRightKey: function onArrowRightKey(event) {\n      var _this2 = this;\n      if (isNotEmpty(this.focusedItem)) {\n        var grouped = this.isItemGroup(this.focusedItem);\n        if (grouped) {\n          var matched = this.activeItemPath.some(function (p) {\n            return p.key === _this2.focusedItem.key;\n          });\n          if (matched) {\n            this.onArrowDownKey(event);\n          } else {\n            this.activeItemPath = this.activeItemPath.filter(function (p) {\n              return p.parentKey !== _this2.focusedItem.parentKey;\n            });\n            this.activeItemPath.push(this.focusedItem);\n          }\n        }\n        event.preventDefault();\n      }\n    },\n    onHomeKey: function onHomeKey(event) {\n      this.changeFocusedItem({\n        originalEvent: event,\n        processedItem: this.findFirstItem(),\n        allowHeaderFocus: false\n      });\n      event.preventDefault();\n    },\n    onEndKey: function onEndKey(event) {\n      this.changeFocusedItem({\n        originalEvent: event,\n        processedItem: this.findLastItem(),\n        focusOnNext: true,\n        allowHeaderFocus: false\n      });\n      event.preventDefault();\n    },\n    onEnterKey: function onEnterKey(event) {\n      if (isNotEmpty(this.focusedItem)) {\n        var element = findSingle(this.$el, \"li[id=\\\"\".concat(\"\".concat(this.focusedItemId), \"\\\"]\"));\n        var anchorElement = element && (findSingle(element, '[data-pc-section=\"itemlink\"]') || findSingle(element, 'a,button'));\n        anchorElement ? anchorElement.click() : element && element.click();\n      }\n      event.preventDefault();\n    },\n    onSpaceKey: function onSpaceKey(event) {\n      this.onEnterKey(event);\n    },\n    onItemToggle: function onItemToggle(event) {\n      var processedItem = event.processedItem,\n        expanded = event.expanded;\n      if (this.expandedKeys) {\n        this.$emit('item-toggle', {\n          item: processedItem.item,\n          expanded: expanded\n        });\n      } else {\n        this.activeItemPath = this.activeItemPath.filter(function (p) {\n          return p.parentKey !== processedItem.parentKey;\n        });\n        expanded && this.activeItemPath.push(processedItem);\n      }\n      this.focusedItem = processedItem;\n      focus(this.$el);\n    },\n    onItemMouseMove: function onItemMouseMove(event) {\n      if (this.focused) {\n        this.focusedItem = event.processedItem;\n      }\n    },\n    isElementInPanel: function isElementInPanel(event, element) {\n      var panel = event.currentTarget.closest('[data-pc-section=\"panel\"]');\n      return panel && panel.contains(element);\n    },\n    isItemMatched: function isItemMatched(processedItem) {\n      var _this$getItemLabel;\n      return this.isValidItem(processedItem) && ((_this$getItemLabel = this.getItemLabel(processedItem)) === null || _this$getItemLabel === void 0 ? void 0 : _this$getItemLabel.toLocaleLowerCase(this.searchLocale).startsWith(this.searchValue.toLocaleLowerCase(this.searchLocale)));\n    },\n    isVisibleItem: function isVisibleItem(processedItem) {\n      return !!processedItem && (processedItem.level === 0 || this.isItemActive(processedItem)) && this.isItemVisible(processedItem);\n    },\n    isValidItem: function isValidItem(processedItem) {\n      return !!processedItem && !this.isItemDisabled(processedItem) && !this.getItemProp(processedItem, 'separator');\n    },\n    findFirstItem: function findFirstItem() {\n      var _this3 = this;\n      return this.visibleItems.find(function (processedItem) {\n        return _this3.isValidItem(processedItem);\n      });\n    },\n    findLastItem: function findLastItem() {\n      var _this4 = this;\n      return findLast(this.visibleItems, function (processedItem) {\n        return _this4.isValidItem(processedItem);\n      });\n    },\n    findNextItem: function findNextItem(processedItem) {\n      var _this5 = this;\n      var index = this.visibleItems.findIndex(function (item) {\n        return item.key === processedItem.key;\n      });\n      var matchedItem = index < this.visibleItems.length - 1 ? this.visibleItems.slice(index + 1).find(function (pItem) {\n        return _this5.isValidItem(pItem);\n      }) : undefined;\n      return matchedItem || processedItem;\n    },\n    findPrevItem: function findPrevItem(processedItem) {\n      var _this6 = this;\n      var index = this.visibleItems.findIndex(function (item) {\n        return item.key === processedItem.key;\n      });\n      var matchedItem = index > 0 ? findLast(this.visibleItems.slice(0, index), function (pItem) {\n        return _this6.isValidItem(pItem);\n      }) : undefined;\n      return matchedItem || processedItem;\n    },\n    searchItems: function searchItems(event, _char) {\n      var _this7 = this;\n      this.searchValue = (this.searchValue || '') + _char;\n      var matchedItem = null;\n      var matched = false;\n      if (isNotEmpty(this.focusedItem)) {\n        var focusedItemIndex = this.visibleItems.findIndex(function (processedItem) {\n          return processedItem.key === _this7.focusedItem.key;\n        });\n        matchedItem = this.visibleItems.slice(focusedItemIndex).find(function (processedItem) {\n          return _this7.isItemMatched(processedItem);\n        });\n        matchedItem = isEmpty(matchedItem) ? this.visibleItems.slice(0, focusedItemIndex).find(function (processedItem) {\n          return _this7.isItemMatched(processedItem);\n        }) : matchedItem;\n      } else {\n        matchedItem = this.visibleItems.find(function (processedItem) {\n          return _this7.isItemMatched(processedItem);\n        });\n      }\n      if (isNotEmpty(matchedItem)) {\n        matched = true;\n      }\n      if (isEmpty(matchedItem) && isEmpty(this.focusedItem)) {\n        matchedItem = this.findFirstItem();\n      }\n      if (isNotEmpty(matchedItem)) {\n        this.changeFocusedItem({\n          originalEvent: event,\n          processedItem: matchedItem,\n          allowHeaderFocus: false\n        });\n      }\n      if (this.searchTimeout) {\n        clearTimeout(this.searchTimeout);\n      }\n      this.searchTimeout = setTimeout(function () {\n        _this7.searchValue = '';\n        _this7.searchTimeout = null;\n      }, 500);\n      return matched;\n    },\n    changeFocusedItem: function changeFocusedItem(event) {\n      var originalEvent = event.originalEvent,\n        processedItem = event.processedItem,\n        focusOnNext = event.focusOnNext,\n        selfCheck = event.selfCheck,\n        _event$allowHeaderFoc = event.allowHeaderFocus,\n        allowHeaderFocus = _event$allowHeaderFoc === void 0 ? true : _event$allowHeaderFoc;\n      if (isNotEmpty(this.focusedItem) && this.focusedItem.key !== processedItem.key) {\n        this.focusedItem = processedItem;\n        this.scrollInView();\n      } else if (allowHeaderFocus) {\n        this.$emit('header-focus', {\n          originalEvent: originalEvent,\n          focusOnNext: focusOnNext,\n          selfCheck: selfCheck\n        });\n      }\n    },\n    scrollInView: function scrollInView() {\n      var element = findSingle(this.$el, \"li[id=\\\"\".concat(\"\".concat(this.focusedItemId), \"\\\"]\"));\n      if (element) {\n        element.scrollIntoView && element.scrollIntoView({\n          block: 'nearest',\n          inline: 'start'\n        });\n      }\n    },\n    autoUpdateActiveItemPath: function autoUpdateActiveItemPath(expandedKeys) {\n      var _this8 = this;\n      this.activeItemPath = Object.entries(expandedKeys || {}).reduce(function (acc, _ref) {\n        var _ref2 = _slicedToArray(_ref, 2),\n          key = _ref2[0],\n          val = _ref2[1];\n        if (val) {\n          var processedItem = _this8.findProcessedItemByItemKey(key);\n          processedItem && acc.push(processedItem);\n        }\n        return acc;\n      }, []);\n    },\n    findProcessedItemByItemKey: function findProcessedItemByItemKey(key, processedItems) {\n      var level = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n      processedItems = processedItems || level === 0 && this.processedItems;\n      if (!processedItems) return null;\n      for (var i = 0; i < processedItems.length; i++) {\n        var processedItem = processedItems[i];\n        if (this.getItemProp(processedItem, 'key') === key) return processedItem;\n        var matchedItem = this.findProcessedItemByItemKey(key, processedItem.items, level + 1);\n        if (matchedItem) return matchedItem;\n      }\n    },\n    createProcessedItems: function createProcessedItems(items) {\n      var _this9 = this;\n      var level = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      var parent = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      var parentKey = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '';\n      var processedItems = [];\n      items && items.forEach(function (item, index) {\n        var key = (parentKey !== '' ? parentKey + '_' : '') + index;\n        var newItem = {\n          item: item,\n          index: index,\n          level: level,\n          key: key,\n          parent: parent,\n          parentKey: parentKey\n        };\n        newItem['items'] = _this9.createProcessedItems(item.items, level + 1, newItem, key);\n        processedItems.push(newItem);\n      });\n      return processedItems;\n    },\n    flatItems: function flatItems(processedItems) {\n      var _this10 = this;\n      var processedFlattenItems = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n      processedItems && processedItems.forEach(function (processedItem) {\n        if (_this10.isVisibleItem(processedItem)) {\n          processedFlattenItems.push(processedItem);\n          _this10.flatItems(processedItem.items, processedFlattenItems);\n        }\n      });\n      return processedFlattenItems;\n    }\n  },\n  computed: {\n    processedItems: function processedItems() {\n      return this.createProcessedItems(this.items || []);\n    },\n    visibleItems: function visibleItems() {\n      return this.flatItems(this.processedItems);\n    },\n    focusedItemId: function focusedItemId() {\n      return isNotEmpty(this.focusedItem) ? \"\".concat(this.panelId, \"_\").concat(this.focusedItem.key) : null;\n    }\n  },\n  components: {\n    PanelMenuSub: script$2\n  }\n};\nfunction render$1(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_PanelMenuSub = resolveComponent(\"PanelMenuSub\");\n  return openBlock(), createBlock(_component_PanelMenuSub, mergeProps({\n    id: $props.panelId + '_list',\n    \"class\": _ctx.cx('rootList'),\n    role: \"tree\",\n    tabindex: -1,\n    \"aria-activedescendant\": $data.focused ? $options.focusedItemId : undefined,\n    panelId: $props.panelId,\n    focusedItemId: $data.focused ? $options.focusedItemId : undefined,\n    items: $options.processedItems,\n    templates: $props.templates,\n    activeItemPath: $data.activeItemPath,\n    onFocus: $options.onFocus,\n    onBlur: $options.onBlur,\n    onKeydown: $options.onKeyDown,\n    onItemToggle: $options.onItemToggle,\n    onItemMousemove: $options.onItemMouseMove,\n    pt: _ctx.pt,\n    unstyled: _ctx.unstyled\n  }, _ctx.ptm('rootList')), null, 16, [\"id\", \"class\", \"aria-activedescendant\", \"panelId\", \"focusedItemId\", \"items\", \"templates\", \"activeItemPath\", \"onFocus\", \"onBlur\", \"onKeydown\", \"onItemToggle\", \"onItemMousemove\", \"pt\", \"unstyled\"]);\n}\nscript$1.render = render$1;\nfunction _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nfunction _objectSpread(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      _defineProperty(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}\nfunction _defineProperty(e, r, t) {\n  return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nvar script = {\n  name: 'PanelMenu',\n  \"extends\": script$3,\n  inheritAttrs: false,\n  emits: ['update:expandedKeys', 'panel-open', 'panel-close'],\n  data: function data() {\n    return {\n      id: this.$attrs.id,\n      activeItem: null,\n      activeItems: []\n    };\n  },\n  watch: {\n    '$attrs.id': function $attrsId(newValue) {\n      this.id = newValue || UniqueComponentId();\n    }\n  },\n  mounted: function mounted() {\n    this.id = this.id || UniqueComponentId();\n  },\n  methods: {\n    getItemProp: function getItemProp(item, name) {\n      return item ? resolve(item[name]) : undefined;\n    },\n    getItemLabel: function getItemLabel(item) {\n      return this.getItemProp(item, 'label');\n    },\n    getPTOptions: function getPTOptions(key, item, index) {\n      return this.ptm(key, {\n        context: {\n          index: index,\n          active: this.isItemActive(item),\n          focused: this.isItemFocused(item),\n          disabled: this.isItemDisabled(item)\n        }\n      });\n    },\n    isItemActive: function isItemActive(item) {\n      return this.expandedKeys ? this.expandedKeys[this.getItemProp(item, 'key')] : this.multiple ? this.activeItems.some(function (subItem) {\n        return equals(item, subItem);\n      }) : equals(item, this.activeItem);\n    },\n    isItemVisible: function isItemVisible(item) {\n      return this.getItemProp(item, 'visible') !== false;\n    },\n    isItemDisabled: function isItemDisabled(item) {\n      return this.getItemProp(item, 'disabled');\n    },\n    isItemFocused: function isItemFocused(item) {\n      return equals(item, this.activeItem);\n    },\n    isItemGroup: function isItemGroup(item) {\n      return isNotEmpty(item.items);\n    },\n    getPanelId: function getPanelId(index) {\n      return \"\".concat(this.id, \"_\").concat(index);\n    },\n    getPanelKey: function getPanelKey(index) {\n      return this.getPanelId(index);\n    },\n    getHeaderId: function getHeaderId(index) {\n      return \"\".concat(this.getPanelId(index), \"_header\");\n    },\n    getContentId: function getContentId(index) {\n      return \"\".concat(this.getPanelId(index), \"_content\");\n    },\n    onHeaderClick: function onHeaderClick(event, item) {\n      if (this.isItemDisabled(item)) {\n        event.preventDefault();\n        return;\n      }\n      if (item.command) {\n        item.command({\n          originalEvent: event,\n          item: item\n        });\n      }\n      this.changeActiveItem(event, item);\n      focus(event.currentTarget);\n    },\n    onHeaderKeyDown: function onHeaderKeyDown(event, item) {\n      switch (event.code) {\n        case 'ArrowDown':\n          this.onHeaderArrowDownKey(event);\n          break;\n        case 'ArrowUp':\n          this.onHeaderArrowUpKey(event);\n          break;\n        case 'Home':\n          this.onHeaderHomeKey(event);\n          break;\n        case 'End':\n          this.onHeaderEndKey(event);\n          break;\n        case 'Enter':\n        case 'NumpadEnter':\n        case 'Space':\n          this.onHeaderEnterKey(event, item);\n          break;\n      }\n    },\n    onHeaderArrowDownKey: function onHeaderArrowDownKey(event) {\n      var rootList = getAttribute(event.currentTarget, 'data-p-active') === true ? findSingle(event.currentTarget.nextElementSibling, '[data-pc-section=\"rootlist\"]') : null;\n      rootList ? focus(rootList) : this.updateFocusedHeader({\n        originalEvent: event,\n        focusOnNext: true\n      });\n      event.preventDefault();\n    },\n    onHeaderArrowUpKey: function onHeaderArrowUpKey(event) {\n      var prevHeader = this.findPrevHeader(event.currentTarget.parentElement) || this.findLastHeader();\n      var rootList = getAttribute(prevHeader, 'data-p-active') === true ? findSingle(prevHeader.nextElementSibling, '[data-pc-section=\"rootlist\"]') : null;\n      rootList ? focus(rootList) : this.updateFocusedHeader({\n        originalEvent: event,\n        focusOnNext: false\n      });\n      event.preventDefault();\n    },\n    onHeaderHomeKey: function onHeaderHomeKey(event) {\n      this.changeFocusedHeader(event, this.findFirstHeader());\n      event.preventDefault();\n    },\n    onHeaderEndKey: function onHeaderEndKey(event) {\n      this.changeFocusedHeader(event, this.findLastHeader());\n      event.preventDefault();\n    },\n    onHeaderEnterKey: function onHeaderEnterKey(event, item) {\n      var headerAction = findSingle(event.currentTarget, '[data-pc-section=\"headerlink\"]');\n      headerAction ? headerAction.click() : this.onHeaderClick(event, item);\n      event.preventDefault();\n    },\n    findNextHeader: function findNextHeader(panelElement) {\n      var selfCheck = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var nextPanelElement = selfCheck ? panelElement : panelElement.nextElementSibling;\n      var headerElement = findSingle(nextPanelElement, '[data-pc-section=\"header\"]');\n      return headerElement ? getAttribute(headerElement, 'data-p-disabled') ? this.findNextHeader(headerElement.parentElement) : headerElement : null;\n    },\n    findPrevHeader: function findPrevHeader(panelElement) {\n      var selfCheck = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var prevPanelElement = selfCheck ? panelElement : panelElement.previousElementSibling;\n      var headerElement = findSingle(prevPanelElement, '[data-pc-section=\"header\"]');\n      return headerElement ? getAttribute(headerElement, 'data-p-disabled') ? this.findPrevHeader(headerElement.parentElement) : headerElement : null;\n    },\n    findFirstHeader: function findFirstHeader() {\n      return this.findNextHeader(this.$el.firstElementChild, true);\n    },\n    findLastHeader: function findLastHeader() {\n      return this.findPrevHeader(this.$el.lastElementChild, true);\n    },\n    updateFocusedHeader: function updateFocusedHeader(event) {\n      var originalEvent = event.originalEvent,\n        focusOnNext = event.focusOnNext,\n        selfCheck = event.selfCheck;\n      var panelElement = originalEvent.currentTarget.closest('[data-pc-section=\"panel\"]');\n      var header = selfCheck ? findSingle(panelElement, '[data-pc-section=\"header\"]') : focusOnNext ? this.findNextHeader(panelElement) : this.findPrevHeader(panelElement);\n      header ? this.changeFocusedHeader(originalEvent, header) : focusOnNext ? this.onHeaderHomeKey(originalEvent) : this.onHeaderEndKey(originalEvent);\n    },\n    changeActiveItem: function changeActiveItem(event, item) {\n      var selfActive = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      if (!this.isItemDisabled(item)) {\n        var active = this.isItemActive(item);\n        var eventName = !active ? 'panel-open' : 'panel-close';\n        this.activeItem = selfActive ? item : this.activeItem && equals(item, this.activeItem) ? null : item;\n        if (this.multiple) {\n          // activeItem and activeItems should be separated because it should be only one focused root item\n          if (this.activeItems.some(function (subItem) {\n            return equals(item, subItem);\n          })) {\n            this.activeItems = this.activeItems.filter(function (subItem) {\n              return !equals(item, subItem);\n            });\n          } else {\n            this.activeItems.push(item);\n          }\n        }\n        this.changeExpandedKeys({\n          item: item,\n          expanded: !active\n        });\n        this.$emit(eventName, {\n          originalEvent: event,\n          item: item\n        });\n      }\n    },\n    changeExpandedKeys: function changeExpandedKeys(_ref) {\n      var item = _ref.item,\n        _ref$expanded = _ref.expanded,\n        expanded = _ref$expanded === void 0 ? false : _ref$expanded;\n      if (this.expandedKeys) {\n        var _keys = _objectSpread({}, this.expandedKeys);\n        if (expanded) _keys[item.key] = true;else delete _keys[item.key];\n        this.$emit('update:expandedKeys', _keys);\n      }\n    },\n    changeFocusedHeader: function changeFocusedHeader(event, element) {\n      element && focus(element);\n    },\n    getMenuItemProps: function getMenuItemProps(item, index) {\n      return {\n        icon: mergeProps({\n          \"class\": [this.cx('headerIcon'), this.getItemProp(item, 'icon')]\n        }, this.getPTOptions('headerIcon', item, index)),\n        label: mergeProps({\n          \"class\": this.cx('headerLabel')\n        }, this.getPTOptions('headerLabel', item, index))\n      };\n    }\n  },\n  components: {\n    PanelMenuList: script$1,\n    ChevronRightIcon: ChevronRightIcon,\n    ChevronDownIcon: ChevronDownIcon\n  }\n};\nvar _hoisted_1 = [\"id\"];\nvar _hoisted_2 = [\"id\", \"tabindex\", \"aria-label\", \"aria-expanded\", \"aria-controls\", \"aria-disabled\", \"onClick\", \"onKeydown\", \"data-p-active\", \"data-p-disabled\"];\nvar _hoisted_3 = [\"href\"];\nvar _hoisted_4 = [\"id\", \"aria-labelledby\"];\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_PanelMenuList = resolveComponent(\"PanelMenuList\");\n  return openBlock(), createElementBlock(\"div\", mergeProps({\n    id: $data.id,\n    \"class\": _ctx.cx('root')\n  }, _ctx.ptmi('root')), [(openBlock(true), createElementBlock(Fragment, null, renderList(_ctx.model, function (item, index) {\n    return openBlock(), createElementBlock(Fragment, {\n      key: $options.getPanelKey(index)\n    }, [$options.isItemVisible(item) ? (openBlock(), createElementBlock(\"div\", mergeProps({\n      key: 0,\n      style: $options.getItemProp(item, 'style'),\n      \"class\": [_ctx.cx('panel'), $options.getItemProp(item, 'class')],\n      ref_for: true\n    }, _ctx.ptm('panel')), [createElementVNode(\"div\", mergeProps({\n      id: $options.getHeaderId(index),\n      \"class\": [_ctx.cx('header', {\n        item: item\n      }), $options.getItemProp(item, 'headerClass')],\n      tabindex: $options.isItemDisabled(item) ? -1 : _ctx.tabindex,\n      role: \"button\",\n      \"aria-label\": $options.getItemLabel(item),\n      \"aria-expanded\": $options.isItemActive(item),\n      \"aria-controls\": $options.getContentId(index),\n      \"aria-disabled\": $options.isItemDisabled(item),\n      onClick: function onClick($event) {\n        return $options.onHeaderClick($event, item);\n      },\n      onKeydown: function onKeydown($event) {\n        return $options.onHeaderKeyDown($event, item);\n      },\n      ref_for: true\n    }, $options.getPTOptions('header', item, index), {\n      \"data-p-active\": $options.isItemActive(item),\n      \"data-p-disabled\": $options.isItemDisabled(item)\n    }), [createElementVNode(\"div\", mergeProps({\n      \"class\": _ctx.cx('headerContent'),\n      ref_for: true\n    }, $options.getPTOptions('headerContent', item, index)), [!_ctx.$slots.item ? (openBlock(), createElementBlock(\"a\", mergeProps({\n      key: 0,\n      href: $options.getItemProp(item, 'url'),\n      \"class\": _ctx.cx('headerLink'),\n      tabindex: -1,\n      ref_for: true\n    }, $options.getPTOptions('headerLink', item, index)), [$options.getItemProp(item, 'items') ? renderSlot(_ctx.$slots, \"submenuicon\", {\n      key: 0,\n      active: $options.isItemActive(item)\n    }, function () {\n      return [(openBlock(), createBlock(resolveDynamicComponent($options.isItemActive(item) ? 'ChevronDownIcon' : 'ChevronRightIcon'), mergeProps({\n        \"class\": _ctx.cx('submenuIcon'),\n        ref_for: true\n      }, $options.getPTOptions('submenuIcon', item, index)), null, 16, [\"class\"]))];\n    }) : createCommentVNode(\"\", true), _ctx.$slots.headericon ? (openBlock(), createBlock(resolveDynamicComponent(_ctx.$slots.headericon), {\n      key: 1,\n      item: item,\n      \"class\": normalizeClass([_ctx.cx('headerIcon'), $options.getItemProp(item, 'icon')])\n    }, null, 8, [\"item\", \"class\"])) : $options.getItemProp(item, 'icon') ? (openBlock(), createElementBlock(\"span\", mergeProps({\n      key: 2,\n      \"class\": [_ctx.cx('headerIcon'), $options.getItemProp(item, 'icon')],\n      ref_for: true\n    }, $options.getPTOptions('headerIcon', item, index)), null, 16)) : createCommentVNode(\"\", true), createElementVNode(\"span\", mergeProps({\n      \"class\": _ctx.cx('headerLabel'),\n      ref_for: true\n    }, $options.getPTOptions('headerLabel', item, index)), toDisplayString($options.getItemLabel(item)), 17)], 16, _hoisted_3)) : (openBlock(), createBlock(resolveDynamicComponent(_ctx.$slots.item), {\n      key: 1,\n      item: item,\n      root: true,\n      active: $options.isItemActive(item),\n      hasSubmenu: $options.isItemGroup(item),\n      label: $options.getItemLabel(item),\n      props: $options.getMenuItemProps(item, index)\n    }, null, 8, [\"item\", \"active\", \"hasSubmenu\", \"label\", \"props\"]))], 16)], 16, _hoisted_2), createVNode(Transition, mergeProps({\n      name: \"p-toggleable-content\",\n      ref_for: true\n    }, _ctx.ptm('transition')), {\n      \"default\": withCtx(function () {\n        return [withDirectives(createElementVNode(\"div\", mergeProps({\n          id: $options.getContentId(index),\n          \"class\": _ctx.cx('contentContainer'),\n          role: \"region\",\n          \"aria-labelledby\": $options.getHeaderId(index),\n          ref_for: true\n        }, _ctx.ptm('contentContainer')), [$options.getItemProp(item, 'items') ? (openBlock(), createElementBlock(\"div\", mergeProps({\n          key: 0,\n          \"class\": _ctx.cx('content'),\n          ref_for: true\n        }, _ctx.ptm('content')), [createVNode(_component_PanelMenuList, {\n          panelId: $options.getPanelId(index),\n          items: $options.getItemProp(item, 'items'),\n          templates: _ctx.$slots,\n          expandedKeys: _ctx.expandedKeys,\n          onItemToggle: $options.changeExpandedKeys,\n          onHeaderFocus: $options.updateFocusedHeader,\n          pt: _ctx.pt,\n          unstyled: _ctx.unstyled\n        }, null, 8, [\"panelId\", \"items\", \"templates\", \"expandedKeys\", \"onItemToggle\", \"onHeaderFocus\", \"pt\", \"unstyled\"])], 16)) : createCommentVNode(\"\", true)], 16, _hoisted_4), [[vShow, $options.isItemActive(item)]])];\n      }),\n      _: 2\n    }, 1040)], 16)) : createCommentVNode(\"\", true)], 64);\n  }), 128))], 16, _hoisted_1);\n}\nscript.render = render;\nexport { script as default };","map":{"version":3,"names":["script$3","name","BaseComponent","props","model","type","Array","expandedKeys","Object","multiple","Boolean","tabindex","Number","style","PanelMenuStyle","provide","$pcPanelMenu","$parentInstance","script$2","hostName","emits","panelId","String","focusedItemId","items","level","templates","activeItemPath","methods","getItemId","processedItem","concat","key","getItemKey","getItemProp","params","item","resolve","undefined","getItemLabel","getPTOptions","index","ptm","context","active","isItemActive","focused","isItemFocused","disabled","isItemDisabled","some","path","isItemVisible","isItemGroup","isNotEmpty","onItemClick","event","originalEvent","$emit","expanded","onItemToggle","onItemMouseMove","getAriaSetSize","_this","filter","length","getAriaPosInset","_this2","slice","getMenuItemProps","action","mergeProps","cx","icon","label","submenuicon","components","ChevronRightIcon","ChevronDownIcon","directives","ripple","Ripple","createElementBlock","normalizeClass","_ctx","$props","openBlock","Fragment","renderList","$options","id","role","createElementVNode","onClick","$event","onMousemove","withDirectives","href","target","createBlock","resolveDynamicComponent","createCommentVNode","itemicon","toDisplayString","_hoisted_4$1","_directive_ripple","root","hasSubmenu","createVNode","Transition","_component_PanelMenuSub","onItemMousemove","_cache","pt","unstyled","vShow","script$1","searchTimeout","searchValue","data","focusedItem","watch","newValue","autoUpdateActiveItemPath","mounted","parentKey","onFocus","isElementInPanel","relatedTarget","findFirstItem","findLastItem","onBlur","onKeyDown","metaKey","ctrlKey","code","onArrowDownKey","onArrowUpKey","onArrowLeftKey","onArrowRightKey","onHomeKey","onEndKey","onSpaceKey","onEnterKey","isPrintableCharacter","searchItems","findNextItem","changeFocusedItem","focusOnNext","preventDefault","findPrevItem","selfCheck","matched","p","parent","grouped","push","allowHeaderFocus","element","findSingle","$el","anchorElement","click","focus","panel","currentTarget","closest","contains","isItemMatched","_this$getItemLabel","isValidItem","toLocaleLowerCase","searchLocale","startsWith","isVisibleItem","_this3","visibleItems","find","_this4","findLast","_this5","findIndex","matchedItem","pItem","_this6","_char","_this7","focusedItemIndex","isEmpty","clearTimeout","setTimeout","_event$allowHeaderFoc","scrollInView","scrollIntoView","block","inline","_this8","entries","reduce","acc","_ref","_ref2","_slicedToArray","val","findProcessedItemByItemKey","processedItems","arguments","i","createProcessedItems","_this9","forEach","newItem","flatItems","_this10","processedFlattenItems","computed","PanelMenuSub","$data","onKeydown","script","inheritAttrs","$attrs","activeItem","activeItems","$attrsId","UniqueComponentId","subItem","equals","getPanelId","getPanelKey","getHeaderId","getContentId","onHeaderClick","command","changeActiveItem","onHeaderKeyDown","onHeaderArrowDownKey","onHeaderArrowUpKey","onHeaderHomeKey","onHeaderEndKey","onHeaderEnterKey","rootList","getAttribute","nextElementSibling","updateFocusedHeader","prevHeader","findPrevHeader","parentElement","findLastHeader","changeFocusedHeader","findFirstHeader","headerAction","findNextHeader","panelElement","nextPanelElement","headerElement","prevPanelElement","previousElementSibling","firstElementChild","lastElementChild","header","selfActive","eventName","changeExpandedKeys","_ref$expanded","_keys","_objectSpread","PanelMenuList","ptmi","$slots","renderSlot","headericon","_hoisted_3","_component_PanelMenuList","onHeaderFocus"],"sources":["../../src/panelmenu/BasePanelMenu.vue","../../src/panelmenu/PanelMenuSub.vue","../../src/panelmenu/PanelMenuSub.vue?vue&type=template&id=6c9d8240&lang.js","../../src/panelmenu/PanelMenuList.vue","../../src/panelmenu/PanelMenuList.vue?vue&type=template&id=7637fcce&lang.js","../../src/panelmenu/PanelMenu.vue","../../src/panelmenu/PanelMenu.vue?vue&type=template&id=57581cb6&lang.js"],"sourcesContent":["<script>\nimport BaseComponent from '@primevue/core/basecomponent';\nimport PanelMenuStyle from 'primevue/panelmenu/style';\n\nexport default {\n    name: 'BasePanelMenu',\n    extends: BaseComponent,\n    props: {\n        model: {\n            type: Array,\n            default: null\n        },\n        expandedKeys: {\n            type: Object,\n            default: null\n        },\n        multiple: {\n            type: Boolean,\n            default: false\n        },\n        tabindex: {\n            type: Number,\n            default: 0\n        }\n    },\n    style: PanelMenuStyle,\n    provide() {\n        return {\n            $pcPanelMenu: this,\n            $parentInstance: this\n        };\n    }\n};\n</script>\n","<template>\n    <ul :class=\"cx('submenu')\" :tabindex=\"tabindex\">\n        <template v-for=\"(processedItem, index) of items\" :key=\"getItemKey(processedItem)\">\n            <li\n                v-if=\"isItemVisible(processedItem) && !getItemProp(processedItem, 'separator')\"\n                :id=\"getItemId(processedItem)\"\n                :class=\"[cx('item', { processedItem }), getItemProp(processedItem, 'class')]\"\n                :style=\"getItemProp(processedItem, 'style')\"\n                role=\"treeitem\"\n                :aria-label=\"getItemLabel(processedItem)\"\n                :aria-expanded=\"isItemGroup(processedItem) ? isItemActive(processedItem) : undefined\"\n                :aria-level=\"level + 1\"\n                :aria-setsize=\"getAriaSetSize()\"\n                :aria-posinset=\"getAriaPosInset(index)\"\n                v-bind=\"getPTOptions('item', processedItem, index)\"\n                :data-p-focused=\"isItemFocused(processedItem)\"\n                :data-p-disabled=\"isItemDisabled(processedItem)\"\n            >\n                <div :class=\"cx('itemContent')\" @click=\"onItemClick($event, processedItem)\" @mousemove=\"onItemMouseMove($event, processedItem)\" v-bind=\"getPTOptions('itemContent', processedItem, index)\">\n                    <template v-if=\"!templates.item\">\n                        <a v-ripple :href=\"getItemProp(processedItem, 'url')\" :class=\"cx('itemLink')\" :target=\"getItemProp(processedItem, 'target')\" tabindex=\"-1\" v-bind=\"getPTOptions('itemLink', processedItem, index)\">\n                            <template v-if=\"isItemGroup(processedItem)\">\n                                <component v-if=\"templates.submenuicon\" :is=\"templates.submenuicon\" :class=\"cx('submenuIcon')\" :active=\"isItemActive(processedItem)\" v-bind=\"getPTOptions('submenuIcon', processedItem, index)\" />\n                                <component v-else :is=\"isItemActive(processedItem) ? 'ChevronDownIcon' : 'ChevronRightIcon'\" :class=\"cx('submenuIcon')\" v-bind=\"getPTOptions('submenuIcon', processedItem, index)\" />\n                            </template>\n                            <component v-if=\"templates.itemicon\" :is=\"templates.itemicon\" :item=\"processedItem.item\" :class=\"cx('itemIcon')\" />\n                            <span v-else-if=\"getItemProp(processedItem, 'icon')\" :class=\"[cx('itemIcon'), getItemProp(processedItem, 'icon')]\" v-bind=\"getPTOptions('itemIcon', processedItem, index)\" />\n                            <span :class=\"cx('itemLabel')\" v-bind=\"getPTOptions('itemLabel', processedItem, index)\">{{ getItemLabel(processedItem) }}</span>\n                        </a>\n                    </template>\n                    <component\n                        v-else\n                        :is=\"templates.item\"\n                        :item=\"processedItem.item\"\n                        :root=\"false\"\n                        :active=\"isItemActive(processedItem)\"\n                        :hasSubmenu=\"isItemGroup(processedItem)\"\n                        :label=\"getItemLabel(processedItem)\"\n                        :props=\"getMenuItemProps(processedItem, index)\"\n                    ></component>\n                </div>\n                <transition name=\"p-toggleable-content\" v-bind=\"ptm('transition')\">\n                    <div v-show=\"isItemActive(processedItem)\" :class=\"cx('contentContainer')\" v-bind=\"ptm('contentContainer')\">\n                        <PanelMenuSub\n                            v-if=\"isItemVisible(processedItem) && isItemGroup(processedItem)\"\n                            :id=\"getItemId(processedItem) + '_list'\"\n                            role=\"group\"\n                            :panelId=\"panelId\"\n                            :focusedItemId=\"focusedItemId\"\n                            :items=\"processedItem.items\"\n                            :level=\"level + 1\"\n                            :templates=\"templates\"\n                            :activeItemPath=\"activeItemPath\"\n                            @item-toggle=\"onItemToggle\"\n                            @item-mousemove=\"$emit('item-mousemove', $event)\"\n                            :pt=\"pt\"\n                            :unstyled=\"unstyled\"\n                            v-bind=\"ptm('submenu')\"\n                        />\n                    </div>\n                </transition>\n            </li>\n            <li\n                v-if=\"isItemVisible(processedItem) && getItemProp(processedItem, 'separator')\"\n                :style=\"getItemProp(processedItem, 'style')\"\n                :class=\"[cx('separator'), getItemProp(processedItem, 'class')]\"\n                role=\"separator\"\n                v-bind=\"ptm('separator')\"\n            ></li>\n        </template>\n    </ul>\n</template>\n\n<script>\nimport { isNotEmpty, resolve } from '@primeuix/utils/object';\nimport BaseComponent from '@primevue/core/basecomponent';\nimport ChevronDownIcon from '@primevue/icons/chevrondown';\nimport ChevronRightIcon from '@primevue/icons/chevronright';\nimport Ripple from 'primevue/ripple';\nimport { mergeProps } from 'vue';\n\nexport default {\n    name: 'PanelMenuSub',\n    hostName: 'PanelMenu',\n    extends: BaseComponent,\n    emits: ['item-toggle', 'item-mousemove'],\n    props: {\n        panelId: {\n            type: String,\n            default: null\n        },\n        focusedItemId: {\n            type: String,\n            default: null\n        },\n        items: {\n            type: Array,\n            default: null\n        },\n        level: {\n            type: Number,\n            default: 0\n        },\n        templates: {\n            type: Object,\n            default: null\n        },\n        activeItemPath: {\n            type: Object,\n            default: null\n        },\n        tabindex: {\n            type: Number,\n            default: -1\n        }\n    },\n    methods: {\n        getItemId(processedItem) {\n            return `${this.panelId}_${processedItem.key}`;\n        },\n        getItemKey(processedItem) {\n            return this.getItemId(processedItem);\n        },\n        getItemProp(processedItem, name, params) {\n            return processedItem && processedItem.item ? resolve(processedItem.item[name], params) : undefined;\n        },\n        getItemLabel(processedItem) {\n            return this.getItemProp(processedItem, 'label');\n        },\n        getPTOptions(key, processedItem, index) {\n            return this.ptm(key, {\n                context: {\n                    item: processedItem.item,\n                    index,\n                    active: this.isItemActive(processedItem),\n                    focused: this.isItemFocused(processedItem),\n                    disabled: this.isItemDisabled(processedItem)\n                }\n            });\n        },\n        isItemActive(processedItem) {\n            return this.activeItemPath.some((path) => path.key === processedItem.key);\n        },\n        isItemVisible(processedItem) {\n            return this.getItemProp(processedItem, 'visible') !== false;\n        },\n        isItemDisabled(processedItem) {\n            return this.getItemProp(processedItem, 'disabled');\n        },\n        isItemFocused(processedItem) {\n            return this.focusedItemId === this.getItemId(processedItem);\n        },\n        isItemGroup(processedItem) {\n            return isNotEmpty(processedItem.items);\n        },\n        onItemClick(event, processedItem) {\n            this.getItemProp(processedItem, 'command', { originalEvent: event, item: processedItem.item });\n            this.$emit('item-toggle', { processedItem, expanded: !this.isItemActive(processedItem) });\n        },\n        onItemToggle(event) {\n            this.$emit('item-toggle', event);\n        },\n        onItemMouseMove(event, processedItem) {\n            this.$emit('item-mousemove', { originalEvent: event, processedItem });\n        },\n        getAriaSetSize() {\n            return this.items.filter((processedItem) => this.isItemVisible(processedItem) && !this.getItemProp(processedItem, 'separator')).length;\n        },\n        getAriaPosInset(index) {\n            return index - this.items.slice(0, index).filter((processedItem) => this.isItemVisible(processedItem) && this.getItemProp(processedItem, 'separator')).length + 1;\n        },\n        getMenuItemProps(processedItem, index) {\n            return {\n                action: mergeProps(\n                    {\n                        class: this.cx('itemLink'),\n                        tabindex: -1\n                    },\n                    this.getPTOptions('itemLink', processedItem, index)\n                ),\n                icon: mergeProps(\n                    {\n                        class: [this.cx('itemIcon'), this.getItemProp(processedItem, 'icon')]\n                    },\n                    this.getPTOptions('itemIcon', processedItem, index)\n                ),\n                label: mergeProps(\n                    {\n                        class: this.cx('itemLabel')\n                    },\n                    this.getPTOptions('itemLabel', processedItem, index)\n                ),\n                submenuicon: mergeProps(\n                    {\n                        class: this.cx('submenuIcon')\n                    },\n                    this.getPTOptions('submenuicon', processedItem, index)\n                )\n            };\n        }\n    },\n    components: {\n        ChevronRightIcon: ChevronRightIcon,\n        ChevronDownIcon: ChevronDownIcon\n    },\n    directives: {\n        ripple: Ripple\n    }\n};\n</script>\n","<template>\n    <ul :class=\"cx('submenu')\" :tabindex=\"tabindex\">\n        <template v-for=\"(processedItem, index) of items\" :key=\"getItemKey(processedItem)\">\n            <li\n                v-if=\"isItemVisible(processedItem) && !getItemProp(processedItem, 'separator')\"\n                :id=\"getItemId(processedItem)\"\n                :class=\"[cx('item', { processedItem }), getItemProp(processedItem, 'class')]\"\n                :style=\"getItemProp(processedItem, 'style')\"\n                role=\"treeitem\"\n                :aria-label=\"getItemLabel(processedItem)\"\n                :aria-expanded=\"isItemGroup(processedItem) ? isItemActive(processedItem) : undefined\"\n                :aria-level=\"level + 1\"\n                :aria-setsize=\"getAriaSetSize()\"\n                :aria-posinset=\"getAriaPosInset(index)\"\n                v-bind=\"getPTOptions('item', processedItem, index)\"\n                :data-p-focused=\"isItemFocused(processedItem)\"\n                :data-p-disabled=\"isItemDisabled(processedItem)\"\n            >\n                <div :class=\"cx('itemContent')\" @click=\"onItemClick($event, processedItem)\" @mousemove=\"onItemMouseMove($event, processedItem)\" v-bind=\"getPTOptions('itemContent', processedItem, index)\">\n                    <template v-if=\"!templates.item\">\n                        <a v-ripple :href=\"getItemProp(processedItem, 'url')\" :class=\"cx('itemLink')\" :target=\"getItemProp(processedItem, 'target')\" tabindex=\"-1\" v-bind=\"getPTOptions('itemLink', processedItem, index)\">\n                            <template v-if=\"isItemGroup(processedItem)\">\n                                <component v-if=\"templates.submenuicon\" :is=\"templates.submenuicon\" :class=\"cx('submenuIcon')\" :active=\"isItemActive(processedItem)\" v-bind=\"getPTOptions('submenuIcon', processedItem, index)\" />\n                                <component v-else :is=\"isItemActive(processedItem) ? 'ChevronDownIcon' : 'ChevronRightIcon'\" :class=\"cx('submenuIcon')\" v-bind=\"getPTOptions('submenuIcon', processedItem, index)\" />\n                            </template>\n                            <component v-if=\"templates.itemicon\" :is=\"templates.itemicon\" :item=\"processedItem.item\" :class=\"cx('itemIcon')\" />\n                            <span v-else-if=\"getItemProp(processedItem, 'icon')\" :class=\"[cx('itemIcon'), getItemProp(processedItem, 'icon')]\" v-bind=\"getPTOptions('itemIcon', processedItem, index)\" />\n                            <span :class=\"cx('itemLabel')\" v-bind=\"getPTOptions('itemLabel', processedItem, index)\">{{ getItemLabel(processedItem) }}</span>\n                        </a>\n                    </template>\n                    <component\n                        v-else\n                        :is=\"templates.item\"\n                        :item=\"processedItem.item\"\n                        :root=\"false\"\n                        :active=\"isItemActive(processedItem)\"\n                        :hasSubmenu=\"isItemGroup(processedItem)\"\n                        :label=\"getItemLabel(processedItem)\"\n                        :props=\"getMenuItemProps(processedItem, index)\"\n                    ></component>\n                </div>\n                <transition name=\"p-toggleable-content\" v-bind=\"ptm('transition')\">\n                    <div v-show=\"isItemActive(processedItem)\" :class=\"cx('contentContainer')\" v-bind=\"ptm('contentContainer')\">\n                        <PanelMenuSub\n                            v-if=\"isItemVisible(processedItem) && isItemGroup(processedItem)\"\n                            :id=\"getItemId(processedItem) + '_list'\"\n                            role=\"group\"\n                            :panelId=\"panelId\"\n                            :focusedItemId=\"focusedItemId\"\n                            :items=\"processedItem.items\"\n                            :level=\"level + 1\"\n                            :templates=\"templates\"\n                            :activeItemPath=\"activeItemPath\"\n                            @item-toggle=\"onItemToggle\"\n                            @item-mousemove=\"$emit('item-mousemove', $event)\"\n                            :pt=\"pt\"\n                            :unstyled=\"unstyled\"\n                            v-bind=\"ptm('submenu')\"\n                        />\n                    </div>\n                </transition>\n            </li>\n            <li\n                v-if=\"isItemVisible(processedItem) && getItemProp(processedItem, 'separator')\"\n                :style=\"getItemProp(processedItem, 'style')\"\n                :class=\"[cx('separator'), getItemProp(processedItem, 'class')]\"\n                role=\"separator\"\n                v-bind=\"ptm('separator')\"\n            ></li>\n        </template>\n    </ul>\n</template>\n\n<script>\nimport { isNotEmpty, resolve } from '@primeuix/utils/object';\nimport BaseComponent from '@primevue/core/basecomponent';\nimport ChevronDownIcon from '@primevue/icons/chevrondown';\nimport ChevronRightIcon from '@primevue/icons/chevronright';\nimport Ripple from 'primevue/ripple';\nimport { mergeProps } from 'vue';\n\nexport default {\n    name: 'PanelMenuSub',\n    hostName: 'PanelMenu',\n    extends: BaseComponent,\n    emits: ['item-toggle', 'item-mousemove'],\n    props: {\n        panelId: {\n            type: String,\n            default: null\n        },\n        focusedItemId: {\n            type: String,\n            default: null\n        },\n        items: {\n            type: Array,\n            default: null\n        },\n        level: {\n            type: Number,\n            default: 0\n        },\n        templates: {\n            type: Object,\n            default: null\n        },\n        activeItemPath: {\n            type: Object,\n            default: null\n        },\n        tabindex: {\n            type: Number,\n            default: -1\n        }\n    },\n    methods: {\n        getItemId(processedItem) {\n            return `${this.panelId}_${processedItem.key}`;\n        },\n        getItemKey(processedItem) {\n            return this.getItemId(processedItem);\n        },\n        getItemProp(processedItem, name, params) {\n            return processedItem && processedItem.item ? resolve(processedItem.item[name], params) : undefined;\n        },\n        getItemLabel(processedItem) {\n            return this.getItemProp(processedItem, 'label');\n        },\n        getPTOptions(key, processedItem, index) {\n            return this.ptm(key, {\n                context: {\n                    item: processedItem.item,\n                    index,\n                    active: this.isItemActive(processedItem),\n                    focused: this.isItemFocused(processedItem),\n                    disabled: this.isItemDisabled(processedItem)\n                }\n            });\n        },\n        isItemActive(processedItem) {\n            return this.activeItemPath.some((path) => path.key === processedItem.key);\n        },\n        isItemVisible(processedItem) {\n            return this.getItemProp(processedItem, 'visible') !== false;\n        },\n        isItemDisabled(processedItem) {\n            return this.getItemProp(processedItem, 'disabled');\n        },\n        isItemFocused(processedItem) {\n            return this.focusedItemId === this.getItemId(processedItem);\n        },\n        isItemGroup(processedItem) {\n            return isNotEmpty(processedItem.items);\n        },\n        onItemClick(event, processedItem) {\n            this.getItemProp(processedItem, 'command', { originalEvent: event, item: processedItem.item });\n            this.$emit('item-toggle', { processedItem, expanded: !this.isItemActive(processedItem) });\n        },\n        onItemToggle(event) {\n            this.$emit('item-toggle', event);\n        },\n        onItemMouseMove(event, processedItem) {\n            this.$emit('item-mousemove', { originalEvent: event, processedItem });\n        },\n        getAriaSetSize() {\n            return this.items.filter((processedItem) => this.isItemVisible(processedItem) && !this.getItemProp(processedItem, 'separator')).length;\n        },\n        getAriaPosInset(index) {\n            return index - this.items.slice(0, index).filter((processedItem) => this.isItemVisible(processedItem) && this.getItemProp(processedItem, 'separator')).length + 1;\n        },\n        getMenuItemProps(processedItem, index) {\n            return {\n                action: mergeProps(\n                    {\n                        class: this.cx('itemLink'),\n                        tabindex: -1\n                    },\n                    this.getPTOptions('itemLink', processedItem, index)\n                ),\n                icon: mergeProps(\n                    {\n                        class: [this.cx('itemIcon'), this.getItemProp(processedItem, 'icon')]\n                    },\n                    this.getPTOptions('itemIcon', processedItem, index)\n                ),\n                label: mergeProps(\n                    {\n                        class: this.cx('itemLabel')\n                    },\n                    this.getPTOptions('itemLabel', processedItem, index)\n                ),\n                submenuicon: mergeProps(\n                    {\n                        class: this.cx('submenuIcon')\n                    },\n                    this.getPTOptions('submenuicon', processedItem, index)\n                )\n            };\n        }\n    },\n    components: {\n        ChevronRightIcon: ChevronRightIcon,\n        ChevronDownIcon: ChevronDownIcon\n    },\n    directives: {\n        ripple: Ripple\n    }\n};\n</script>\n","<template>\n    <PanelMenuSub\n        :id=\"panelId + '_list'\"\n        :class=\"cx('rootList')\"\n        role=\"tree\"\n        :tabindex=\"-1\"\n        :aria-activedescendant=\"focused ? focusedItemId : undefined\"\n        :panelId=\"panelId\"\n        :focusedItemId=\"focused ? focusedItemId : undefined\"\n        :items=\"processedItems\"\n        :templates=\"templates\"\n        :activeItemPath=\"activeItemPath\"\n        @focus=\"onFocus\"\n        @blur=\"onBlur\"\n        @keydown=\"onKeyDown\"\n        @item-toggle=\"onItemToggle\"\n        @item-mousemove=\"onItemMouseMove\"\n        :pt=\"pt\"\n        :unstyled=\"unstyled\"\n        v-bind=\"ptm('rootList')\"\n    />\n</template>\n\n<script>\nimport BaseComponent from '@primevue/core/basecomponent';\nimport { findSingle, focus } from '@primeuix/utils/dom';\nimport { resolve, isNotEmpty, isPrintableCharacter, findLast, isEmpty } from '@primeuix/utils/object';\nimport PanelMenuSub from './PanelMenuSub.vue';\n\nexport default {\n    name: 'PanelMenuList',\n    hostName: 'PanelMenu',\n    extends: BaseComponent,\n    emits: ['item-toggle', 'header-focus'],\n    props: {\n        panelId: {\n            type: String,\n            default: null\n        },\n        items: {\n            type: Array,\n            default: null\n        },\n        templates: {\n            type: Object,\n            default: null\n        },\n        expandedKeys: {\n            type: Object,\n            default: null\n        }\n    },\n    searchTimeout: null,\n    searchValue: null,\n    data() {\n        return {\n            focused: false,\n            focusedItem: null,\n            activeItemPath: []\n        };\n    },\n    watch: {\n        expandedKeys(newValue) {\n            this.autoUpdateActiveItemPath(newValue);\n        }\n    },\n    mounted() {\n        this.autoUpdateActiveItemPath(this.expandedKeys);\n    },\n    methods: {\n        getItemProp(processedItem, name) {\n            return processedItem && processedItem.item ? resolve(processedItem.item[name]) : undefined;\n        },\n        getItemLabel(processedItem) {\n            return this.getItemProp(processedItem, 'label');\n        },\n        isItemVisible(processedItem) {\n            return this.getItemProp(processedItem, 'visible') !== false;\n        },\n        isItemDisabled(processedItem) {\n            return this.getItemProp(processedItem, 'disabled');\n        },\n        isItemActive(processedItem) {\n            return this.activeItemPath.some((path) => path.key === processedItem.parentKey);\n        },\n        isItemGroup(processedItem) {\n            return isNotEmpty(processedItem.items);\n        },\n        onFocus(event) {\n            this.focused = true;\n            this.focusedItem = this.focusedItem || (this.isElementInPanel(event, event.relatedTarget) ? this.findFirstItem() : this.findLastItem());\n        },\n        onBlur() {\n            this.focused = false;\n            this.focusedItem = null;\n            this.searchValue = '';\n        },\n        onKeyDown(event) {\n            const metaKey = event.metaKey || event.ctrlKey;\n\n            switch (event.code) {\n                case 'ArrowDown':\n                    this.onArrowDownKey(event);\n                    break;\n\n                case 'ArrowUp':\n                    this.onArrowUpKey(event);\n                    break;\n\n                case 'ArrowLeft':\n                    this.onArrowLeftKey(event);\n                    break;\n\n                case 'ArrowRight':\n                    this.onArrowRightKey(event);\n                    break;\n\n                case 'Home':\n                    this.onHomeKey(event);\n                    break;\n\n                case 'End':\n                    this.onEndKey(event);\n                    break;\n\n                case 'Space':\n                    this.onSpaceKey(event);\n                    break;\n\n                case 'Enter':\n                case 'NumpadEnter':\n                    this.onEnterKey(event);\n                    break;\n\n                case 'Escape':\n                case 'Tab':\n                case 'PageDown':\n                case 'PageUp':\n                case 'Backspace':\n                case 'ShiftLeft':\n                case 'ShiftRight':\n                    //NOOP\n                    break;\n\n                default:\n                    if (!metaKey && isPrintableCharacter(event.key)) {\n                        this.searchItems(event, event.key);\n                    }\n\n                    break;\n            }\n        },\n        onArrowDownKey(event) {\n            const processedItem = isNotEmpty(this.focusedItem) ? this.findNextItem(this.focusedItem) : this.findFirstItem();\n\n            this.changeFocusedItem({ originalEvent: event, processedItem, focusOnNext: true });\n            event.preventDefault();\n        },\n        onArrowUpKey(event) {\n            const processedItem = isNotEmpty(this.focusedItem) ? this.findPrevItem(this.focusedItem) : this.findLastItem();\n\n            this.changeFocusedItem({ originalEvent: event, processedItem, selfCheck: true });\n            event.preventDefault();\n        },\n        onArrowLeftKey(event) {\n            if (isNotEmpty(this.focusedItem)) {\n                const matched = this.activeItemPath.some((p) => p.key === this.focusedItem.key);\n\n                if (matched) {\n                    this.activeItemPath = this.activeItemPath.filter((p) => p.key !== this.focusedItem.key);\n                } else {\n                    this.focusedItem = isNotEmpty(this.focusedItem.parent) ? this.focusedItem.parent : this.focusedItem;\n                }\n\n                event.preventDefault();\n            }\n        },\n        onArrowRightKey(event) {\n            if (isNotEmpty(this.focusedItem)) {\n                const grouped = this.isItemGroup(this.focusedItem);\n\n                if (grouped) {\n                    const matched = this.activeItemPath.some((p) => p.key === this.focusedItem.key);\n\n                    if (matched) {\n                        this.onArrowDownKey(event);\n                    } else {\n                        this.activeItemPath = this.activeItemPath.filter((p) => p.parentKey !== this.focusedItem.parentKey);\n                        this.activeItemPath.push(this.focusedItem);\n                    }\n                }\n\n                event.preventDefault();\n            }\n        },\n        onHomeKey(event) {\n            this.changeFocusedItem({ originalEvent: event, processedItem: this.findFirstItem(), allowHeaderFocus: false });\n            event.preventDefault();\n        },\n        onEndKey(event) {\n            this.changeFocusedItem({ originalEvent: event, processedItem: this.findLastItem(), focusOnNext: true, allowHeaderFocus: false });\n            event.preventDefault();\n        },\n        onEnterKey(event) {\n            if (isNotEmpty(this.focusedItem)) {\n                const element = findSingle(this.$el, `li[id=\"${`${this.focusedItemId}`}\"]`);\n                const anchorElement = element && (findSingle(element, '[data-pc-section=\"itemlink\"]') || findSingle(element, 'a,button'));\n\n                anchorElement ? anchorElement.click() : element && element.click();\n            }\n\n            event.preventDefault();\n        },\n        onSpaceKey(event) {\n            this.onEnterKey(event);\n        },\n        onItemToggle(event) {\n            const { processedItem, expanded } = event;\n\n            if (this.expandedKeys) {\n                this.$emit('item-toggle', { item: processedItem.item, expanded });\n            } else {\n                this.activeItemPath = this.activeItemPath.filter((p) => p.parentKey !== processedItem.parentKey);\n                expanded && this.activeItemPath.push(processedItem);\n            }\n\n            this.focusedItem = processedItem;\n            focus(this.$el);\n        },\n        onItemMouseMove(event) {\n            if (this.focused) {\n                this.focusedItem = event.processedItem;\n            }\n        },\n        isElementInPanel(event, element) {\n            const panel = event.currentTarget.closest('[data-pc-section=\"panel\"]');\n\n            return panel && panel.contains(element);\n        },\n        isItemMatched(processedItem) {\n            return this.isValidItem(processedItem) && this.getItemLabel(processedItem)?.toLocaleLowerCase(this.searchLocale).startsWith(this.searchValue.toLocaleLowerCase(this.searchLocale));\n        },\n        isVisibleItem(processedItem) {\n            return !!processedItem && (processedItem.level === 0 || this.isItemActive(processedItem)) && this.isItemVisible(processedItem);\n        },\n        isValidItem(processedItem) {\n            return !!processedItem && !this.isItemDisabled(processedItem) && !this.getItemProp(processedItem, 'separator');\n        },\n        findFirstItem() {\n            return this.visibleItems.find((processedItem) => this.isValidItem(processedItem));\n        },\n        findLastItem() {\n            return findLast(this.visibleItems, (processedItem) => this.isValidItem(processedItem));\n        },\n        findNextItem(processedItem) {\n            const index = this.visibleItems.findIndex((item) => item.key === processedItem.key);\n            const matchedItem = index < this.visibleItems.length - 1 ? this.visibleItems.slice(index + 1).find((pItem) => this.isValidItem(pItem)) : undefined;\n\n            return matchedItem || processedItem;\n        },\n        findPrevItem(processedItem) {\n            const index = this.visibleItems.findIndex((item) => item.key === processedItem.key);\n            const matchedItem = index > 0 ? findLast(this.visibleItems.slice(0, index), (pItem) => this.isValidItem(pItem)) : undefined;\n\n            return matchedItem || processedItem;\n        },\n        searchItems(event, char) {\n            this.searchValue = (this.searchValue || '') + char;\n\n            let matchedItem = null;\n            let matched = false;\n\n            if (isNotEmpty(this.focusedItem)) {\n                const focusedItemIndex = this.visibleItems.findIndex((processedItem) => processedItem.key === this.focusedItem.key);\n\n                matchedItem = this.visibleItems.slice(focusedItemIndex).find((processedItem) => this.isItemMatched(processedItem));\n                matchedItem = isEmpty(matchedItem) ? this.visibleItems.slice(0, focusedItemIndex).find((processedItem) => this.isItemMatched(processedItem)) : matchedItem;\n            } else {\n                matchedItem = this.visibleItems.find((processedItem) => this.isItemMatched(processedItem));\n            }\n\n            if (isNotEmpty(matchedItem)) {\n                matched = true;\n            }\n\n            if (isEmpty(matchedItem) && isEmpty(this.focusedItem)) {\n                matchedItem = this.findFirstItem();\n            }\n\n            if (isNotEmpty(matchedItem)) {\n                this.changeFocusedItem({\n                    originalEvent: event,\n                    processedItem: matchedItem,\n                    allowHeaderFocus: false\n                });\n            }\n\n            if (this.searchTimeout) {\n                clearTimeout(this.searchTimeout);\n            }\n\n            this.searchTimeout = setTimeout(() => {\n                this.searchValue = '';\n                this.searchTimeout = null;\n            }, 500);\n\n            return matched;\n        },\n        changeFocusedItem(event) {\n            const { originalEvent, processedItem, focusOnNext, selfCheck, allowHeaderFocus = true } = event;\n\n            if (isNotEmpty(this.focusedItem) && this.focusedItem.key !== processedItem.key) {\n                this.focusedItem = processedItem;\n                this.scrollInView();\n            } else if (allowHeaderFocus) {\n                this.$emit('header-focus', { originalEvent, focusOnNext, selfCheck });\n            }\n        },\n        scrollInView() {\n            const element = findSingle(this.$el, `li[id=\"${`${this.focusedItemId}`}\"]`);\n\n            if (element) {\n                element.scrollIntoView && element.scrollIntoView({ block: 'nearest', inline: 'start' });\n            }\n        },\n        autoUpdateActiveItemPath(expandedKeys) {\n            this.activeItemPath = Object.entries(expandedKeys || {}).reduce((acc, [key, val]) => {\n                if (val) {\n                    const processedItem = this.findProcessedItemByItemKey(key);\n\n                    processedItem && acc.push(processedItem);\n                }\n\n                return acc;\n            }, []);\n        },\n        findProcessedItemByItemKey(key, processedItems, level = 0) {\n            processedItems = processedItems || (level === 0 && this.processedItems);\n\n            if (!processedItems) return null;\n\n            for (let i = 0; i < processedItems.length; i++) {\n                const processedItem = processedItems[i];\n\n                if (this.getItemProp(processedItem, 'key') === key) return processedItem;\n\n                const matchedItem = this.findProcessedItemByItemKey(key, processedItem.items, level + 1);\n\n                if (matchedItem) return matchedItem;\n            }\n        },\n        createProcessedItems(items, level = 0, parent = {}, parentKey = '') {\n            const processedItems = [];\n\n            items &&\n                items.forEach((item, index) => {\n                    const key = (parentKey !== '' ? parentKey + '_' : '') + index;\n                    const newItem = {\n                        item,\n                        index,\n                        level,\n                        key,\n                        parent,\n                        parentKey\n                    };\n\n                    newItem['items'] = this.createProcessedItems(item.items, level + 1, newItem, key);\n                    processedItems.push(newItem);\n                });\n\n            return processedItems;\n        },\n        flatItems(processedItems, processedFlattenItems = []) {\n            processedItems &&\n                processedItems.forEach((processedItem) => {\n                    if (this.isVisibleItem(processedItem)) {\n                        processedFlattenItems.push(processedItem);\n                        this.flatItems(processedItem.items, processedFlattenItems);\n                    }\n                });\n\n            return processedFlattenItems;\n        }\n    },\n    computed: {\n        processedItems() {\n            return this.createProcessedItems(this.items || []);\n        },\n        visibleItems() {\n            return this.flatItems(this.processedItems);\n        },\n        focusedItemId() {\n            return isNotEmpty(this.focusedItem) ? `${this.panelId}_${this.focusedItem.key}` : null;\n        }\n    },\n    components: {\n        PanelMenuSub: PanelMenuSub\n    }\n};\n</script>\n","<template>\n    <PanelMenuSub\n        :id=\"panelId + '_list'\"\n        :class=\"cx('rootList')\"\n        role=\"tree\"\n        :tabindex=\"-1\"\n        :aria-activedescendant=\"focused ? focusedItemId : undefined\"\n        :panelId=\"panelId\"\n        :focusedItemId=\"focused ? focusedItemId : undefined\"\n        :items=\"processedItems\"\n        :templates=\"templates\"\n        :activeItemPath=\"activeItemPath\"\n        @focus=\"onFocus\"\n        @blur=\"onBlur\"\n        @keydown=\"onKeyDown\"\n        @item-toggle=\"onItemToggle\"\n        @item-mousemove=\"onItemMouseMove\"\n        :pt=\"pt\"\n        :unstyled=\"unstyled\"\n        v-bind=\"ptm('rootList')\"\n    />\n</template>\n\n<script>\nimport BaseComponent from '@primevue/core/basecomponent';\nimport { findSingle, focus } from '@primeuix/utils/dom';\nimport { resolve, isNotEmpty, isPrintableCharacter, findLast, isEmpty } from '@primeuix/utils/object';\nimport PanelMenuSub from './PanelMenuSub.vue';\n\nexport default {\n    name: 'PanelMenuList',\n    hostName: 'PanelMenu',\n    extends: BaseComponent,\n    emits: ['item-toggle', 'header-focus'],\n    props: {\n        panelId: {\n            type: String,\n            default: null\n        },\n        items: {\n            type: Array,\n            default: null\n        },\n        templates: {\n            type: Object,\n            default: null\n        },\n        expandedKeys: {\n            type: Object,\n            default: null\n        }\n    },\n    searchTimeout: null,\n    searchValue: null,\n    data() {\n        return {\n            focused: false,\n            focusedItem: null,\n            activeItemPath: []\n        };\n    },\n    watch: {\n        expandedKeys(newValue) {\n            this.autoUpdateActiveItemPath(newValue);\n        }\n    },\n    mounted() {\n        this.autoUpdateActiveItemPath(this.expandedKeys);\n    },\n    methods: {\n        getItemProp(processedItem, name) {\n            return processedItem && processedItem.item ? resolve(processedItem.item[name]) : undefined;\n        },\n        getItemLabel(processedItem) {\n            return this.getItemProp(processedItem, 'label');\n        },\n        isItemVisible(processedItem) {\n            return this.getItemProp(processedItem, 'visible') !== false;\n        },\n        isItemDisabled(processedItem) {\n            return this.getItemProp(processedItem, 'disabled');\n        },\n        isItemActive(processedItem) {\n            return this.activeItemPath.some((path) => path.key === processedItem.parentKey);\n        },\n        isItemGroup(processedItem) {\n            return isNotEmpty(processedItem.items);\n        },\n        onFocus(event) {\n            this.focused = true;\n            this.focusedItem = this.focusedItem || (this.isElementInPanel(event, event.relatedTarget) ? this.findFirstItem() : this.findLastItem());\n        },\n        onBlur() {\n            this.focused = false;\n            this.focusedItem = null;\n            this.searchValue = '';\n        },\n        onKeyDown(event) {\n            const metaKey = event.metaKey || event.ctrlKey;\n\n            switch (event.code) {\n                case 'ArrowDown':\n                    this.onArrowDownKey(event);\n                    break;\n\n                case 'ArrowUp':\n                    this.onArrowUpKey(event);\n                    break;\n\n                case 'ArrowLeft':\n                    this.onArrowLeftKey(event);\n                    break;\n\n                case 'ArrowRight':\n                    this.onArrowRightKey(event);\n                    break;\n\n                case 'Home':\n                    this.onHomeKey(event);\n                    break;\n\n                case 'End':\n                    this.onEndKey(event);\n                    break;\n\n                case 'Space':\n                    this.onSpaceKey(event);\n                    break;\n\n                case 'Enter':\n                case 'NumpadEnter':\n                    this.onEnterKey(event);\n                    break;\n\n                case 'Escape':\n                case 'Tab':\n                case 'PageDown':\n                case 'PageUp':\n                case 'Backspace':\n                case 'ShiftLeft':\n                case 'ShiftRight':\n                    //NOOP\n                    break;\n\n                default:\n                    if (!metaKey && isPrintableCharacter(event.key)) {\n                        this.searchItems(event, event.key);\n                    }\n\n                    break;\n            }\n        },\n        onArrowDownKey(event) {\n            const processedItem = isNotEmpty(this.focusedItem) ? this.findNextItem(this.focusedItem) : this.findFirstItem();\n\n            this.changeFocusedItem({ originalEvent: event, processedItem, focusOnNext: true });\n            event.preventDefault();\n        },\n        onArrowUpKey(event) {\n            const processedItem = isNotEmpty(this.focusedItem) ? this.findPrevItem(this.focusedItem) : this.findLastItem();\n\n            this.changeFocusedItem({ originalEvent: event, processedItem, selfCheck: true });\n            event.preventDefault();\n        },\n        onArrowLeftKey(event) {\n            if (isNotEmpty(this.focusedItem)) {\n                const matched = this.activeItemPath.some((p) => p.key === this.focusedItem.key);\n\n                if (matched) {\n                    this.activeItemPath = this.activeItemPath.filter((p) => p.key !== this.focusedItem.key);\n                } else {\n                    this.focusedItem = isNotEmpty(this.focusedItem.parent) ? this.focusedItem.parent : this.focusedItem;\n                }\n\n                event.preventDefault();\n            }\n        },\n        onArrowRightKey(event) {\n            if (isNotEmpty(this.focusedItem)) {\n                const grouped = this.isItemGroup(this.focusedItem);\n\n                if (grouped) {\n                    const matched = this.activeItemPath.some((p) => p.key === this.focusedItem.key);\n\n                    if (matched) {\n                        this.onArrowDownKey(event);\n                    } else {\n                        this.activeItemPath = this.activeItemPath.filter((p) => p.parentKey !== this.focusedItem.parentKey);\n                        this.activeItemPath.push(this.focusedItem);\n                    }\n                }\n\n                event.preventDefault();\n            }\n        },\n        onHomeKey(event) {\n            this.changeFocusedItem({ originalEvent: event, processedItem: this.findFirstItem(), allowHeaderFocus: false });\n            event.preventDefault();\n        },\n        onEndKey(event) {\n            this.changeFocusedItem({ originalEvent: event, processedItem: this.findLastItem(), focusOnNext: true, allowHeaderFocus: false });\n            event.preventDefault();\n        },\n        onEnterKey(event) {\n            if (isNotEmpty(this.focusedItem)) {\n                const element = findSingle(this.$el, `li[id=\"${`${this.focusedItemId}`}\"]`);\n                const anchorElement = element && (findSingle(element, '[data-pc-section=\"itemlink\"]') || findSingle(element, 'a,button'));\n\n                anchorElement ? anchorElement.click() : element && element.click();\n            }\n\n            event.preventDefault();\n        },\n        onSpaceKey(event) {\n            this.onEnterKey(event);\n        },\n        onItemToggle(event) {\n            const { processedItem, expanded } = event;\n\n            if (this.expandedKeys) {\n                this.$emit('item-toggle', { item: processedItem.item, expanded });\n            } else {\n                this.activeItemPath = this.activeItemPath.filter((p) => p.parentKey !== processedItem.parentKey);\n                expanded && this.activeItemPath.push(processedItem);\n            }\n\n            this.focusedItem = processedItem;\n            focus(this.$el);\n        },\n        onItemMouseMove(event) {\n            if (this.focused) {\n                this.focusedItem = event.processedItem;\n            }\n        },\n        isElementInPanel(event, element) {\n            const panel = event.currentTarget.closest('[data-pc-section=\"panel\"]');\n\n            return panel && panel.contains(element);\n        },\n        isItemMatched(processedItem) {\n            return this.isValidItem(processedItem) && this.getItemLabel(processedItem)?.toLocaleLowerCase(this.searchLocale).startsWith(this.searchValue.toLocaleLowerCase(this.searchLocale));\n        },\n        isVisibleItem(processedItem) {\n            return !!processedItem && (processedItem.level === 0 || this.isItemActive(processedItem)) && this.isItemVisible(processedItem);\n        },\n        isValidItem(processedItem) {\n            return !!processedItem && !this.isItemDisabled(processedItem) && !this.getItemProp(processedItem, 'separator');\n        },\n        findFirstItem() {\n            return this.visibleItems.find((processedItem) => this.isValidItem(processedItem));\n        },\n        findLastItem() {\n            return findLast(this.visibleItems, (processedItem) => this.isValidItem(processedItem));\n        },\n        findNextItem(processedItem) {\n            const index = this.visibleItems.findIndex((item) => item.key === processedItem.key);\n            const matchedItem = index < this.visibleItems.length - 1 ? this.visibleItems.slice(index + 1).find((pItem) => this.isValidItem(pItem)) : undefined;\n\n            return matchedItem || processedItem;\n        },\n        findPrevItem(processedItem) {\n            const index = this.visibleItems.findIndex((item) => item.key === processedItem.key);\n            const matchedItem = index > 0 ? findLast(this.visibleItems.slice(0, index), (pItem) => this.isValidItem(pItem)) : undefined;\n\n            return matchedItem || processedItem;\n        },\n        searchItems(event, char) {\n            this.searchValue = (this.searchValue || '') + char;\n\n            let matchedItem = null;\n            let matched = false;\n\n            if (isNotEmpty(this.focusedItem)) {\n                const focusedItemIndex = this.visibleItems.findIndex((processedItem) => processedItem.key === this.focusedItem.key);\n\n                matchedItem = this.visibleItems.slice(focusedItemIndex).find((processedItem) => this.isItemMatched(processedItem));\n                matchedItem = isEmpty(matchedItem) ? this.visibleItems.slice(0, focusedItemIndex).find((processedItem) => this.isItemMatched(processedItem)) : matchedItem;\n            } else {\n                matchedItem = this.visibleItems.find((processedItem) => this.isItemMatched(processedItem));\n            }\n\n            if (isNotEmpty(matchedItem)) {\n                matched = true;\n            }\n\n            if (isEmpty(matchedItem) && isEmpty(this.focusedItem)) {\n                matchedItem = this.findFirstItem();\n            }\n\n            if (isNotEmpty(matchedItem)) {\n                this.changeFocusedItem({\n                    originalEvent: event,\n                    processedItem: matchedItem,\n                    allowHeaderFocus: false\n                });\n            }\n\n            if (this.searchTimeout) {\n                clearTimeout(this.searchTimeout);\n            }\n\n            this.searchTimeout = setTimeout(() => {\n                this.searchValue = '';\n                this.searchTimeout = null;\n            }, 500);\n\n            return matched;\n        },\n        changeFocusedItem(event) {\n            const { originalEvent, processedItem, focusOnNext, selfCheck, allowHeaderFocus = true } = event;\n\n            if (isNotEmpty(this.focusedItem) && this.focusedItem.key !== processedItem.key) {\n                this.focusedItem = processedItem;\n                this.scrollInView();\n            } else if (allowHeaderFocus) {\n                this.$emit('header-focus', { originalEvent, focusOnNext, selfCheck });\n            }\n        },\n        scrollInView() {\n            const element = findSingle(this.$el, `li[id=\"${`${this.focusedItemId}`}\"]`);\n\n            if (element) {\n                element.scrollIntoView && element.scrollIntoView({ block: 'nearest', inline: 'start' });\n            }\n        },\n        autoUpdateActiveItemPath(expandedKeys) {\n            this.activeItemPath = Object.entries(expandedKeys || {}).reduce((acc, [key, val]) => {\n                if (val) {\n                    const processedItem = this.findProcessedItemByItemKey(key);\n\n                    processedItem && acc.push(processedItem);\n                }\n\n                return acc;\n            }, []);\n        },\n        findProcessedItemByItemKey(key, processedItems, level = 0) {\n            processedItems = processedItems || (level === 0 && this.processedItems);\n\n            if (!processedItems) return null;\n\n            for (let i = 0; i < processedItems.length; i++) {\n                const processedItem = processedItems[i];\n\n                if (this.getItemProp(processedItem, 'key') === key) return processedItem;\n\n                const matchedItem = this.findProcessedItemByItemKey(key, processedItem.items, level + 1);\n\n                if (matchedItem) return matchedItem;\n            }\n        },\n        createProcessedItems(items, level = 0, parent = {}, parentKey = '') {\n            const processedItems = [];\n\n            items &&\n                items.forEach((item, index) => {\n                    const key = (parentKey !== '' ? parentKey + '_' : '') + index;\n                    const newItem = {\n                        item,\n                        index,\n                        level,\n                        key,\n                        parent,\n                        parentKey\n                    };\n\n                    newItem['items'] = this.createProcessedItems(item.items, level + 1, newItem, key);\n                    processedItems.push(newItem);\n                });\n\n            return processedItems;\n        },\n        flatItems(processedItems, processedFlattenItems = []) {\n            processedItems &&\n                processedItems.forEach((processedItem) => {\n                    if (this.isVisibleItem(processedItem)) {\n                        processedFlattenItems.push(processedItem);\n                        this.flatItems(processedItem.items, processedFlattenItems);\n                    }\n                });\n\n            return processedFlattenItems;\n        }\n    },\n    computed: {\n        processedItems() {\n            return this.createProcessedItems(this.items || []);\n        },\n        visibleItems() {\n            return this.flatItems(this.processedItems);\n        },\n        focusedItemId() {\n            return isNotEmpty(this.focusedItem) ? `${this.panelId}_${this.focusedItem.key}` : null;\n        }\n    },\n    components: {\n        PanelMenuSub: PanelMenuSub\n    }\n};\n</script>\n","<template>\n    <div :id=\"id\" :class=\"cx('root')\" v-bind=\"ptmi('root')\">\n        <template v-for=\"(item, index) of model\" :key=\"getPanelKey(index)\">\n            <div v-if=\"isItemVisible(item)\" :style=\"getItemProp(item, 'style')\" :class=\"[cx('panel'), getItemProp(item, 'class')]\" v-bind=\"ptm('panel')\">\n                <div\n                    :id=\"getHeaderId(index)\"\n                    :class=\"[cx('header', { item }), getItemProp(item, 'headerClass')]\"\n                    :tabindex=\"isItemDisabled(item) ? -1 : tabindex\"\n                    role=\"button\"\n                    :aria-label=\"getItemLabel(item)\"\n                    :aria-expanded=\"isItemActive(item)\"\n                    :aria-controls=\"getContentId(index)\"\n                    :aria-disabled=\"isItemDisabled(item)\"\n                    @click=\"onHeaderClick($event, item)\"\n                    @keydown=\"onHeaderKeyDown($event, item)\"\n                    v-bind=\"getPTOptions('header', item, index)\"\n                    :data-p-active=\"isItemActive(item)\"\n                    :data-p-disabled=\"isItemDisabled(item)\"\n                >\n                    <div :class=\"cx('headerContent')\" v-bind=\"getPTOptions('headerContent', item, index)\">\n                        <template v-if=\"!$slots.item\">\n                            <a :href=\"getItemProp(item, 'url')\" :class=\"cx('headerLink')\" :tabindex=\"-1\" v-bind=\"getPTOptions('headerLink', item, index)\">\n                                <slot v-if=\"getItemProp(item, 'items')\" name=\"submenuicon\" :active=\"isItemActive(item)\">\n                                    <component :is=\"isItemActive(item) ? 'ChevronDownIcon' : 'ChevronRightIcon'\" :class=\"cx('submenuIcon')\" v-bind=\"getPTOptions('submenuIcon', item, index)\" />\n                                </slot>\n                                <component v-if=\"$slots.headericon\" :is=\"$slots.headericon\" :item=\"item\" :class=\"[cx('headerIcon'), getItemProp(item, 'icon')]\" />\n                                <span v-else-if=\"getItemProp(item, 'icon')\" :class=\"[cx('headerIcon'), getItemProp(item, 'icon')]\" v-bind=\"getPTOptions('headerIcon', item, index)\" />\n                                <span :class=\"cx('headerLabel')\" v-bind=\"getPTOptions('headerLabel', item, index)\">{{ getItemLabel(item) }}</span>\n                            </a>\n                        </template>\n                        <component v-else :is=\"$slots.item\" :item=\"item\" :root=\"true\" :active=\"isItemActive(item)\" :hasSubmenu=\"isItemGroup(item)\" :label=\"getItemLabel(item)\" :props=\"getMenuItemProps(item, index)\"></component>\n                    </div>\n                </div>\n                <transition name=\"p-toggleable-content\" v-bind=\"ptm('transition')\">\n                    <div v-show=\"isItemActive(item)\" :id=\"getContentId(index)\" :class=\"cx('contentContainer')\" role=\"region\" :aria-labelledby=\"getHeaderId(index)\" v-bind=\"ptm('contentContainer')\">\n                        <div v-if=\"getItemProp(item, 'items')\" :class=\"cx('content')\" v-bind=\"ptm('content')\">\n                            <PanelMenuList\n                                :panelId=\"getPanelId(index)\"\n                                :items=\"getItemProp(item, 'items')\"\n                                :templates=\"$slots\"\n                                :expandedKeys=\"expandedKeys\"\n                                @item-toggle=\"changeExpandedKeys\"\n                                @header-focus=\"updateFocusedHeader\"\n                                :pt=\"pt\"\n                                :unstyled=\"unstyled\"\n                            />\n                        </div>\n                    </div>\n                </transition>\n            </div>\n        </template>\n    </div>\n</template>\n\n<script>\nimport { findSingle, focus, getAttribute } from '@primeuix/utils/dom';\nimport { equals, isNotEmpty, resolve } from '@primeuix/utils/object';\nimport { UniqueComponentId } from '@primevue/core/utils';\nimport ChevronDownIcon from '@primevue/icons/chevrondown';\nimport ChevronRightIcon from '@primevue/icons/chevronright';\nimport { mergeProps } from 'vue';\nimport BasePanelMenu from './BasePanelMenu.vue';\nimport PanelMenuList from './PanelMenuList.vue';\n\nexport default {\n    name: 'PanelMenu',\n    extends: BasePanelMenu,\n    inheritAttrs: false,\n    emits: ['update:expandedKeys', 'panel-open', 'panel-close'],\n    data() {\n        return {\n            id: this.$attrs.id,\n            activeItem: null,\n            activeItems: []\n        };\n    },\n    watch: {\n        '$attrs.id': function (newValue) {\n            this.id = newValue || UniqueComponentId();\n        }\n    },\n    mounted() {\n        this.id = this.id || UniqueComponentId();\n    },\n    methods: {\n        getItemProp(item, name) {\n            return item ? resolve(item[name]) : undefined;\n        },\n        getItemLabel(item) {\n            return this.getItemProp(item, 'label');\n        },\n        getPTOptions(key, item, index) {\n            return this.ptm(key, {\n                context: {\n                    index,\n                    active: this.isItemActive(item),\n                    focused: this.isItemFocused(item),\n                    disabled: this.isItemDisabled(item)\n                }\n            });\n        },\n        isItemActive(item) {\n            return this.expandedKeys ? this.expandedKeys[this.getItemProp(item, 'key')] : this.multiple ? this.activeItems.some((subItem) => equals(item, subItem)) : equals(item, this.activeItem);\n        },\n        isItemVisible(item) {\n            return this.getItemProp(item, 'visible') !== false;\n        },\n        isItemDisabled(item) {\n            return this.getItemProp(item, 'disabled');\n        },\n        isItemFocused(item) {\n            return equals(item, this.activeItem);\n        },\n        isItemGroup(item) {\n            return isNotEmpty(item.items);\n        },\n        getPanelId(index) {\n            return `${this.id}_${index}`;\n        },\n        getPanelKey(index) {\n            return this.getPanelId(index);\n        },\n        getHeaderId(index) {\n            return `${this.getPanelId(index)}_header`;\n        },\n        getContentId(index) {\n            return `${this.getPanelId(index)}_content`;\n        },\n        onHeaderClick(event, item) {\n            if (this.isItemDisabled(item)) {\n                event.preventDefault();\n\n                return;\n            }\n\n            if (item.command) {\n                item.command({ originalEvent: event, item });\n            }\n\n            this.changeActiveItem(event, item);\n            focus(event.currentTarget);\n        },\n        onHeaderKeyDown(event, item) {\n            switch (event.code) {\n                case 'ArrowDown':\n                    this.onHeaderArrowDownKey(event);\n                    break;\n\n                case 'ArrowUp':\n                    this.onHeaderArrowUpKey(event);\n                    break;\n\n                case 'Home':\n                    this.onHeaderHomeKey(event);\n                    break;\n\n                case 'End':\n                    this.onHeaderEndKey(event);\n                    break;\n\n                case 'Enter':\n                case 'NumpadEnter':\n                case 'Space':\n                    this.onHeaderEnterKey(event, item);\n                    break;\n\n                default:\n                    break;\n            }\n        },\n        onHeaderArrowDownKey(event) {\n            const rootList = getAttribute(event.currentTarget, 'data-p-active') === true ? findSingle(event.currentTarget.nextElementSibling, '[data-pc-section=\"rootlist\"]') : null;\n\n            rootList ? focus(rootList) : this.updateFocusedHeader({ originalEvent: event, focusOnNext: true });\n            event.preventDefault();\n        },\n        onHeaderArrowUpKey(event) {\n            const prevHeader = this.findPrevHeader(event.currentTarget.parentElement) || this.findLastHeader();\n            const rootList = getAttribute(prevHeader, 'data-p-active') === true ? findSingle(prevHeader.nextElementSibling, '[data-pc-section=\"rootlist\"]') : null;\n\n            rootList ? focus(rootList) : this.updateFocusedHeader({ originalEvent: event, focusOnNext: false });\n            event.preventDefault();\n        },\n        onHeaderHomeKey(event) {\n            this.changeFocusedHeader(event, this.findFirstHeader());\n            event.preventDefault();\n        },\n        onHeaderEndKey(event) {\n            this.changeFocusedHeader(event, this.findLastHeader());\n            event.preventDefault();\n        },\n        onHeaderEnterKey(event, item) {\n            const headerAction = findSingle(event.currentTarget, '[data-pc-section=\"headerlink\"]');\n\n            headerAction ? headerAction.click() : this.onHeaderClick(event, item);\n            event.preventDefault();\n        },\n        findNextHeader(panelElement, selfCheck = false) {\n            const nextPanelElement = selfCheck ? panelElement : panelElement.nextElementSibling;\n            const headerElement = findSingle(nextPanelElement, '[data-pc-section=\"header\"]');\n\n            return headerElement ? (getAttribute(headerElement, 'data-p-disabled') ? this.findNextHeader(headerElement.parentElement) : headerElement) : null;\n        },\n        findPrevHeader(panelElement, selfCheck = false) {\n            const prevPanelElement = selfCheck ? panelElement : panelElement.previousElementSibling;\n            const headerElement = findSingle(prevPanelElement, '[data-pc-section=\"header\"]');\n\n            return headerElement ? (getAttribute(headerElement, 'data-p-disabled') ? this.findPrevHeader(headerElement.parentElement) : headerElement) : null;\n        },\n        findFirstHeader() {\n            return this.findNextHeader(this.$el.firstElementChild, true);\n        },\n        findLastHeader() {\n            return this.findPrevHeader(this.$el.lastElementChild, true);\n        },\n        updateFocusedHeader(event) {\n            const { originalEvent, focusOnNext, selfCheck } = event;\n            const panelElement = originalEvent.currentTarget.closest('[data-pc-section=\"panel\"]');\n            const header = selfCheck ? findSingle(panelElement, '[data-pc-section=\"header\"]') : focusOnNext ? this.findNextHeader(panelElement) : this.findPrevHeader(panelElement);\n\n            header ? this.changeFocusedHeader(originalEvent, header) : focusOnNext ? this.onHeaderHomeKey(originalEvent) : this.onHeaderEndKey(originalEvent);\n        },\n        changeActiveItem(event, item, selfActive = false) {\n            if (!this.isItemDisabled(item)) {\n                const active = this.isItemActive(item);\n                const eventName = !active ? 'panel-open' : 'panel-close';\n\n                this.activeItem = selfActive ? item : this.activeItem && equals(item, this.activeItem) ? null : item;\n\n                if (this.multiple) {\n                    // activeItem and activeItems should be separated because it should be only one focused root item\n                    if (this.activeItems.some((subItem) => equals(item, subItem))) {\n                        this.activeItems = this.activeItems.filter((subItem) => !equals(item, subItem));\n                    } else {\n                        this.activeItems.push(item);\n                    }\n                }\n\n                this.changeExpandedKeys({ item, expanded: !active });\n                this.$emit(eventName, { originalEvent: event, item });\n            }\n        },\n        changeExpandedKeys({ item, expanded = false }) {\n            if (this.expandedKeys) {\n                let _keys = { ...this.expandedKeys };\n\n                if (expanded) _keys[item.key] = true;\n                else delete _keys[item.key];\n\n                this.$emit('update:expandedKeys', _keys);\n            }\n        },\n        changeFocusedHeader(event, element) {\n            element && focus(element);\n        },\n        getMenuItemProps(item, index) {\n            return {\n                icon: mergeProps(\n                    {\n                        class: [this.cx('headerIcon'), this.getItemProp(item, 'icon')]\n                    },\n                    this.getPTOptions('headerIcon', item, index)\n                ),\n                label: mergeProps(\n                    {\n                        class: this.cx('headerLabel')\n                    },\n                    this.getPTOptions('headerLabel', item, index)\n                )\n            };\n        }\n    },\n    components: {\n        PanelMenuList: PanelMenuList,\n        ChevronRightIcon: ChevronRightIcon,\n        ChevronDownIcon: ChevronDownIcon\n    }\n};\n</script>\n","<template>\n    <div :id=\"id\" :class=\"cx('root')\" v-bind=\"ptmi('root')\">\n        <template v-for=\"(item, index) of model\" :key=\"getPanelKey(index)\">\n            <div v-if=\"isItemVisible(item)\" :style=\"getItemProp(item, 'style')\" :class=\"[cx('panel'), getItemProp(item, 'class')]\" v-bind=\"ptm('panel')\">\n                <div\n                    :id=\"getHeaderId(index)\"\n                    :class=\"[cx('header', { item }), getItemProp(item, 'headerClass')]\"\n                    :tabindex=\"isItemDisabled(item) ? -1 : tabindex\"\n                    role=\"button\"\n                    :aria-label=\"getItemLabel(item)\"\n                    :aria-expanded=\"isItemActive(item)\"\n                    :aria-controls=\"getContentId(index)\"\n                    :aria-disabled=\"isItemDisabled(item)\"\n                    @click=\"onHeaderClick($event, item)\"\n                    @keydown=\"onHeaderKeyDown($event, item)\"\n                    v-bind=\"getPTOptions('header', item, index)\"\n                    :data-p-active=\"isItemActive(item)\"\n                    :data-p-disabled=\"isItemDisabled(item)\"\n                >\n                    <div :class=\"cx('headerContent')\" v-bind=\"getPTOptions('headerContent', item, index)\">\n                        <template v-if=\"!$slots.item\">\n                            <a :href=\"getItemProp(item, 'url')\" :class=\"cx('headerLink')\" :tabindex=\"-1\" v-bind=\"getPTOptions('headerLink', item, index)\">\n                                <slot v-if=\"getItemProp(item, 'items')\" name=\"submenuicon\" :active=\"isItemActive(item)\">\n                                    <component :is=\"isItemActive(item) ? 'ChevronDownIcon' : 'ChevronRightIcon'\" :class=\"cx('submenuIcon')\" v-bind=\"getPTOptions('submenuIcon', item, index)\" />\n                                </slot>\n                                <component v-if=\"$slots.headericon\" :is=\"$slots.headericon\" :item=\"item\" :class=\"[cx('headerIcon'), getItemProp(item, 'icon')]\" />\n                                <span v-else-if=\"getItemProp(item, 'icon')\" :class=\"[cx('headerIcon'), getItemProp(item, 'icon')]\" v-bind=\"getPTOptions('headerIcon', item, index)\" />\n                                <span :class=\"cx('headerLabel')\" v-bind=\"getPTOptions('headerLabel', item, index)\">{{ getItemLabel(item) }}</span>\n                            </a>\n                        </template>\n                        <component v-else :is=\"$slots.item\" :item=\"item\" :root=\"true\" :active=\"isItemActive(item)\" :hasSubmenu=\"isItemGroup(item)\" :label=\"getItemLabel(item)\" :props=\"getMenuItemProps(item, index)\"></component>\n                    </div>\n                </div>\n                <transition name=\"p-toggleable-content\" v-bind=\"ptm('transition')\">\n                    <div v-show=\"isItemActive(item)\" :id=\"getContentId(index)\" :class=\"cx('contentContainer')\" role=\"region\" :aria-labelledby=\"getHeaderId(index)\" v-bind=\"ptm('contentContainer')\">\n                        <div v-if=\"getItemProp(item, 'items')\" :class=\"cx('content')\" v-bind=\"ptm('content')\">\n                            <PanelMenuList\n                                :panelId=\"getPanelId(index)\"\n                                :items=\"getItemProp(item, 'items')\"\n                                :templates=\"$slots\"\n                                :expandedKeys=\"expandedKeys\"\n                                @item-toggle=\"changeExpandedKeys\"\n                                @header-focus=\"updateFocusedHeader\"\n                                :pt=\"pt\"\n                                :unstyled=\"unstyled\"\n                            />\n                        </div>\n                    </div>\n                </transition>\n            </div>\n        </template>\n    </div>\n</template>\n\n<script>\nimport { findSingle, focus, getAttribute } from '@primeuix/utils/dom';\nimport { equals, isNotEmpty, resolve } from '@primeuix/utils/object';\nimport { UniqueComponentId } from '@primevue/core/utils';\nimport ChevronDownIcon from '@primevue/icons/chevrondown';\nimport ChevronRightIcon from '@primevue/icons/chevronright';\nimport { mergeProps } from 'vue';\nimport BasePanelMenu from './BasePanelMenu.vue';\nimport PanelMenuList from './PanelMenuList.vue';\n\nexport default {\n    name: 'PanelMenu',\n    extends: BasePanelMenu,\n    inheritAttrs: false,\n    emits: ['update:expandedKeys', 'panel-open', 'panel-close'],\n    data() {\n        return {\n            id: this.$attrs.id,\n            activeItem: null,\n            activeItems: []\n        };\n    },\n    watch: {\n        '$attrs.id': function (newValue) {\n            this.id = newValue || UniqueComponentId();\n        }\n    },\n    mounted() {\n        this.id = this.id || UniqueComponentId();\n    },\n    methods: {\n        getItemProp(item, name) {\n            return item ? resolve(item[name]) : undefined;\n        },\n        getItemLabel(item) {\n            return this.getItemProp(item, 'label');\n        },\n        getPTOptions(key, item, index) {\n            return this.ptm(key, {\n                context: {\n                    index,\n                    active: this.isItemActive(item),\n                    focused: this.isItemFocused(item),\n                    disabled: this.isItemDisabled(item)\n                }\n            });\n        },\n        isItemActive(item) {\n            return this.expandedKeys ? this.expandedKeys[this.getItemProp(item, 'key')] : this.multiple ? this.activeItems.some((subItem) => equals(item, subItem)) : equals(item, this.activeItem);\n        },\n        isItemVisible(item) {\n            return this.getItemProp(item, 'visible') !== false;\n        },\n        isItemDisabled(item) {\n            return this.getItemProp(item, 'disabled');\n        },\n        isItemFocused(item) {\n            return equals(item, this.activeItem);\n        },\n        isItemGroup(item) {\n            return isNotEmpty(item.items);\n        },\n        getPanelId(index) {\n            return `${this.id}_${index}`;\n        },\n        getPanelKey(index) {\n            return this.getPanelId(index);\n        },\n        getHeaderId(index) {\n            return `${this.getPanelId(index)}_header`;\n        },\n        getContentId(index) {\n            return `${this.getPanelId(index)}_content`;\n        },\n        onHeaderClick(event, item) {\n            if (this.isItemDisabled(item)) {\n                event.preventDefault();\n\n                return;\n            }\n\n            if (item.command) {\n                item.command({ originalEvent: event, item });\n            }\n\n            this.changeActiveItem(event, item);\n            focus(event.currentTarget);\n        },\n        onHeaderKeyDown(event, item) {\n            switch (event.code) {\n                case 'ArrowDown':\n                    this.onHeaderArrowDownKey(event);\n                    break;\n\n                case 'ArrowUp':\n                    this.onHeaderArrowUpKey(event);\n                    break;\n\n                case 'Home':\n                    this.onHeaderHomeKey(event);\n                    break;\n\n                case 'End':\n                    this.onHeaderEndKey(event);\n                    break;\n\n                case 'Enter':\n                case 'NumpadEnter':\n                case 'Space':\n                    this.onHeaderEnterKey(event, item);\n                    break;\n\n                default:\n                    break;\n            }\n        },\n        onHeaderArrowDownKey(event) {\n            const rootList = getAttribute(event.currentTarget, 'data-p-active') === true ? findSingle(event.currentTarget.nextElementSibling, '[data-pc-section=\"rootlist\"]') : null;\n\n            rootList ? focus(rootList) : this.updateFocusedHeader({ originalEvent: event, focusOnNext: true });\n            event.preventDefault();\n        },\n        onHeaderArrowUpKey(event) {\n            const prevHeader = this.findPrevHeader(event.currentTarget.parentElement) || this.findLastHeader();\n            const rootList = getAttribute(prevHeader, 'data-p-active') === true ? findSingle(prevHeader.nextElementSibling, '[data-pc-section=\"rootlist\"]') : null;\n\n            rootList ? focus(rootList) : this.updateFocusedHeader({ originalEvent: event, focusOnNext: false });\n            event.preventDefault();\n        },\n        onHeaderHomeKey(event) {\n            this.changeFocusedHeader(event, this.findFirstHeader());\n            event.preventDefault();\n        },\n        onHeaderEndKey(event) {\n            this.changeFocusedHeader(event, this.findLastHeader());\n            event.preventDefault();\n        },\n        onHeaderEnterKey(event, item) {\n            const headerAction = findSingle(event.currentTarget, '[data-pc-section=\"headerlink\"]');\n\n            headerAction ? headerAction.click() : this.onHeaderClick(event, item);\n            event.preventDefault();\n        },\n        findNextHeader(panelElement, selfCheck = false) {\n            const nextPanelElement = selfCheck ? panelElement : panelElement.nextElementSibling;\n            const headerElement = findSingle(nextPanelElement, '[data-pc-section=\"header\"]');\n\n            return headerElement ? (getAttribute(headerElement, 'data-p-disabled') ? this.findNextHeader(headerElement.parentElement) : headerElement) : null;\n        },\n        findPrevHeader(panelElement, selfCheck = false) {\n            const prevPanelElement = selfCheck ? panelElement : panelElement.previousElementSibling;\n            const headerElement = findSingle(prevPanelElement, '[data-pc-section=\"header\"]');\n\n            return headerElement ? (getAttribute(headerElement, 'data-p-disabled') ? this.findPrevHeader(headerElement.parentElement) : headerElement) : null;\n        },\n        findFirstHeader() {\n            return this.findNextHeader(this.$el.firstElementChild, true);\n        },\n        findLastHeader() {\n            return this.findPrevHeader(this.$el.lastElementChild, true);\n        },\n        updateFocusedHeader(event) {\n            const { originalEvent, focusOnNext, selfCheck } = event;\n            const panelElement = originalEvent.currentTarget.closest('[data-pc-section=\"panel\"]');\n            const header = selfCheck ? findSingle(panelElement, '[data-pc-section=\"header\"]') : focusOnNext ? this.findNextHeader(panelElement) : this.findPrevHeader(panelElement);\n\n            header ? this.changeFocusedHeader(originalEvent, header) : focusOnNext ? this.onHeaderHomeKey(originalEvent) : this.onHeaderEndKey(originalEvent);\n        },\n        changeActiveItem(event, item, selfActive = false) {\n            if (!this.isItemDisabled(item)) {\n                const active = this.isItemActive(item);\n                const eventName = !active ? 'panel-open' : 'panel-close';\n\n                this.activeItem = selfActive ? item : this.activeItem && equals(item, this.activeItem) ? null : item;\n\n                if (this.multiple) {\n                    // activeItem and activeItems should be separated because it should be only one focused root item\n                    if (this.activeItems.some((subItem) => equals(item, subItem))) {\n                        this.activeItems = this.activeItems.filter((subItem) => !equals(item, subItem));\n                    } else {\n                        this.activeItems.push(item);\n                    }\n                }\n\n                this.changeExpandedKeys({ item, expanded: !active });\n                this.$emit(eventName, { originalEvent: event, item });\n            }\n        },\n        changeExpandedKeys({ item, expanded = false }) {\n            if (this.expandedKeys) {\n                let _keys = { ...this.expandedKeys };\n\n                if (expanded) _keys[item.key] = true;\n                else delete _keys[item.key];\n\n                this.$emit('update:expandedKeys', _keys);\n            }\n        },\n        changeFocusedHeader(event, element) {\n            element && focus(element);\n        },\n        getMenuItemProps(item, index) {\n            return {\n                icon: mergeProps(\n                    {\n                        class: [this.cx('headerIcon'), this.getItemProp(item, 'icon')]\n                    },\n                    this.getPTOptions('headerIcon', item, index)\n                ),\n                label: mergeProps(\n                    {\n                        class: this.cx('headerLabel')\n                    },\n                    this.getPTOptions('headerLabel', item, index)\n                )\n            };\n        }\n    },\n    components: {\n        PanelMenuList: PanelMenuList,\n        ChevronRightIcon: ChevronRightIcon,\n        ChevronDownIcon: ChevronDownIcon\n    }\n};\n</script>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}