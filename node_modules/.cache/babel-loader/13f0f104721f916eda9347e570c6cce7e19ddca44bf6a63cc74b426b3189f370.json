{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, withCtx as _withCtx, createVNode as _createVNode, Fragment as _Fragment, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"p-fluid\"\n};\nconst _hoisted_2 = {\n  class: \"p-field mb-4\"\n};\nconst _hoisted_3 = {\n  class: \"p-field mb-6\"\n};\nconst _hoisted_4 = {\n  class: \"p-field button-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Button = _resolveComponent(\"Button\");\n  const _component_Menubar = _resolveComponent(\"Menubar\");\n  const _component_InputText = _resolveComponent(\"InputText\");\n  const _component_Dialog = _resolveComponent(\"Dialog\");\n  const _component_Toast = _resolveComponent(\"Toast\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_Menubar, {\n    model: $options.filteredMenuItems\n  }, {\n    start: _withCtx(() => _cache[4] || (_cache[4] = [_createElementVNode(\"span\", {\n      class: \"text-xl font-bold text-gray-800\"\n    }, \"Solid Waste Management System\", -1)])),\n    end: _withCtx(() => [!$data.isLoggedIn ? (_openBlock(), _createBlock(_component_Button, {\n      key: 0,\n      label: \"Login\",\n      icon: \"pi pi-user\",\n      class: \"p-button-outlined p-button-lg\",\n      onClick: _cache[0] || (_cache[0] = $event => $data.showLoginModal = true)\n    })) : _createCommentVNode(\"\", true), $data.isLoggedIn ? (_openBlock(), _createBlock(_component_Button, {\n      key: 1,\n      label: \"Logout\",\n      icon: \"pi pi-sign-out\",\n      class: \"p-button-outlined p-button-lg\",\n      onClick: $options.logout\n    }, null, 8, [\"onClick\"])) : _createCommentVNode(\"\", true)]),\n    _: 1\n  }, 8, [\"model\"]), _createVNode(_component_Dialog, {\n    header: \"Login\",\n    visible: $data.showLoginModal,\n    \"onUpdate:visible\": _cache[3] || (_cache[3] = $event => $data.showLoginModal = $event),\n    modal: \"\",\n    class: \"login-modal p-dialog-lg\",\n    style: {\n      \"width\": \"40vw\",\n      \"max-width\": \"500px\"\n    }\n  }, {\n    default: _withCtx(() => [_cache[7] || (_cache[7] = _createElementVNode(\"div\", {\n      class: \"flex justify-center mb-6\"\n    }, [_createElementVNode(\"img\", {\n      src: \"assets/logo.png\",\n      alt: \"Logo\",\n      class: \"h-25 w-auto\"\n    })], -1)), _createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_cache[5] || (_cache[5] = _createElementVNode(\"label\", {\n      for: \"email\",\n      class: \"block text-lg font-medium text-gray-700 mb-2\"\n    }, \"Email\", -1)), _createVNode(_component_InputText, {\n      id: \"email\",\n      modelValue: $data.email,\n      \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.email = $event),\n      placeholder: \"Enter your email\",\n      class: \"p-inputtext-lg w-full\"\n    }, null, 8, [\"modelValue\"])]), _createElementVNode(\"div\", _hoisted_3, [_cache[6] || (_cache[6] = _createElementVNode(\"label\", {\n      for: \"password\",\n      class: \"block text-lg font-medium text-gray-700 mb-2\"\n    }, \"Password\", -1)), _createVNode(_component_InputText, {\n      type: \"password\",\n      id: \"password\",\n      modelValue: $data.password,\n      \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.password = $event),\n      placeholder: \"Enter your password\",\n      class: \"p-inputtext-lg w-full\"\n    }, null, 8, [\"modelValue\"])]), _createElementVNode(\"div\", _hoisted_4, [_createVNode(_component_Button, {\n      label: \"Login\",\n      icon: \"pi pi-sign-in\",\n      class: \"p-button-lg p-button-success w-full login-btn\",\n      onClick: $options.login\n    }, null, 8, [\"onClick\"])])])]),\n    _: 1\n  }, 8, [\"visible\"]), _createVNode(_component_Toast, {\n    ref: \"toast\"\n  }, null, 512)], 64);\n}","map":{"version":3,"names":["class","_createElementBlock","_Fragment","_createVNode","_component_Menubar","model","$options","filteredMenuItems","start","_withCtx","_cache","_createElementVNode","end","$data","isLoggedIn","_createBlock","_component_Button","key","label","icon","onClick","$event","showLoginModal","_createCommentVNode","logout","_","_component_Dialog","header","visible","modal","style","default","src","alt","_hoisted_1","_hoisted_2","for","_component_InputText","id","modelValue","email","placeholder","_hoisted_3","type","password","_hoisted_4","login","_component_Toast","ref"],"sources":["C:\\Users\\darle\\solid-waste-management-system\\src\\components\\Header.vue"],"sourcesContent":["<template>\r\n    <!-- Menu Bar -->\r\n    <Menubar :model=\"filteredMenuItems\">\r\n      <template #start>\r\n        <span class=\"text-xl font-bold text-gray-800\">Solid Waste Management System</span>\r\n      </template>\r\n      <template #end>\r\n        <!-- Login or Logout Button -->\r\n        <Button \r\n          v-if=\"!isLoggedIn\" \r\n          label=\"Login\" \r\n          icon=\"pi pi-user\" \r\n          class=\"p-button-outlined p-button-lg\" \r\n          @click=\"showLoginModal = true\" \r\n        />\r\n        <Button \r\n          v-if=\"isLoggedIn\" \r\n          label=\"Logout\" \r\n          icon=\"pi pi-sign-out\" \r\n          class=\"p-button-outlined p-button-lg\" \r\n          @click=\"logout\" \r\n        />\r\n      </template>\r\n    </Menubar>\r\n\r\n    <!-- Login Modal -->\r\n    <Dialog \r\n      header=\"Login\" \r\n      v-model:visible=\"showLoginModal\" \r\n      modal \r\n      class=\"login-modal p-dialog-lg\" \r\n      style=\"width: 40vw; max-width: 500px;\"\r\n    >\r\n      <!-- Logo -->\r\n      <div class=\"flex justify-center mb-6\">\r\n        <img src=\"assets/logo.png\" alt=\"Logo\" class=\"h-25 w-auto\" />\r\n      </div>\r\n\r\n      <div class=\"p-fluid\">\r\n        <!-- Email Field -->\r\n        <div class=\"p-field mb-4\">\r\n          <label for=\"email\" class=\"block text-lg font-medium text-gray-700 mb-2\">Email</label>\r\n          <InputText \r\n            id=\"email\" \r\n            v-model=\"email\" \r\n            placeholder=\"Enter your email\" \r\n            class=\"p-inputtext-lg w-full\" \r\n          />\r\n        </div>\r\n\r\n        <!-- Password Field -->\r\n        <div class=\"p-field mb-6\">\r\n          <label for=\"password\" class=\"block text-lg font-medium text-gray-700 mb-2\">Password</label>\r\n          <InputText \r\n            type=\"password\" \r\n            id=\"password\" \r\n            v-model=\"password\" \r\n            placeholder=\"Enter your password\" \r\n            class=\"p-inputtext-lg w-full\" \r\n          />\r\n        </div>\r\n\r\n        <!-- Login Button -->\r\n        <div class=\"p-field button-container\">\r\n          <Button \r\n            label=\"Login\" \r\n            icon=\"pi pi-sign-in\" \r\n            class=\"p-button-lg p-button-success w-full login-btn\" \r\n            @click=\"login\" \r\n          />\r\n        </div>\r\n      </div>\r\n    </Dialog>\r\n     <!-- Toast Notification -->\r\n    <Toast ref=\"toast\"></Toast>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  name: \"HeaderVue\",\r\n  data() {\r\n    return {\r\n      showLoginModal: false, // Controls modal visibility\r\n      isLoggedIn: false, // Indicates if the user is logged in\r\n      email: \"\", // Email input\r\n      password: \"\", // Password input\r\n      abilities: [], // User's access levels\r\n    };\r\n  },\r\n  computed: {\r\n    filteredMenuItems() {\r\n      // Generate menu items dynamically based on abilities\r\n      return this.abilities.map((ability) => {\r\n        const routes = {\r\n          announcement: { label: \"Announcement\", icon: \"pi pi-megaphone\", page: \"AnnouncementPage\" },\r\n          messages: { label: \"Messages\", icon: \"pi pi-comments\", page: \"MessagePage\" },\r\n          account_management: { label: \"Account Management\", icon: \"pi pi-users\", page: \"AccountManagementPage\" },\r\n          concern: { label: \"Concerns\", icon: \"pi pi-comments\", page: \"ConcernPage\" },\r\n          reports_and_analytics: { label: \"Reports and Analytics\", icon: \"pi pi-file\", page: \"ReportPage\" },\r\n          complain:{ label: \"Complain\", icon: \"pi pi-folder-open\", page: \"ComplainPage\"},\r\n          routes:{ label: \"Routes\", icon: \"pi pi-folder-open\", page: \"RoutesPage\"},\r\n        };\r\n\r\n        const route = routes[ability];\r\n        return route\r\n          ? {\r\n              label: route.label,\r\n              icon: route.icon,\r\n              command: () => this.navigateTo(route.page),\r\n            }\r\n          : null;\r\n      }).filter((item) => item !== null); // Filter out null entries\r\n    },\r\n  },\r\n  methods: {\r\n    async login() {\r\n      try {\r\n        const response = await axios.post(\"http://127.0.0.1:8000/api/login\", {\r\n          email: this.email,\r\n          password: this.password,\r\n        });\r\n\r\n        // Save token to localStorage\r\n        localStorage.setItem(\"auth_token\", response.data.access_token);\r\n\r\n        // Set token in axios headers\r\n        axios.defaults.headers.common[\"Authorization\"] = `Bearer ${localStorage.getItem(\"auth_token\")}`;\r\n\r\n        // Set login state\r\n        this.isLoggedIn = true;\r\n        this.showLoginModal = false;\r\n\r\n        this.$refs.toast.add({ severity: 'success', summary: 'Login successfully', detail: \"Login successfully\", life: 3000 });\r\n\r\n        // Fetch user abilities\r\n        await this.fetchAbilities();\r\n\r\n        // Redirect to dashboard\r\n        this.$router.push(\"/DashboardPage\");\r\n      } catch (error) {\r\n         this.$refs.toast.add({ severity: 'error', summary: 'Login failed', detail: error.response.data.message, life: 3000 });\r\n      }\r\n    },\r\n    logout() {\r\n      localStorage.removeItem(\"auth_token\");\r\n      this.isLoggedIn = false;\r\n      this.abilities = [];\r\n      this.$router.push(\"/\");\r\n    },\r\n    async fetchAbilities() {\r\n      try {\r\n        const response = await axios.get(\"http://127.0.0.1:8000/api/user/access-levels\");\r\n        this.abilities = response.data.access_levels || [];\r\n      } catch (error) {\r\n        console.error(\"Error fetching abilities:\", error);\r\n        this.abilities = [];\r\n      }\r\n    },\r\n    navigateTo(page) {\r\n      this.$router.push({ name: page });\r\n    },\r\n  },\r\n  async mounted() {\r\n    const token = localStorage.getItem(\"auth_token\");\r\n    if (token) {\r\n      axios.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\r\n      this.isLoggedIn = true;\r\n      await this.fetchAbilities();\r\n    }\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.header-container {\r\n  padding: 0 20px;\r\n  background: #f8f9fa;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}