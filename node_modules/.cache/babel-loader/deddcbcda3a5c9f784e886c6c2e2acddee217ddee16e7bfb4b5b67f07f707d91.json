{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, createTextVNode as _createTextVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"dashboard\"\n};\nconst _hoisted_2 = {\n  class: \"dashboard-actions\"\n};\nconst _hoisted_3 = {\n  key: 0,\n  class: \"loading\"\n};\nconst _hoisted_4 = {\n  key: 1,\n  class: \"no-announcements\"\n};\nconst _hoisted_5 = {\n  key: 2,\n  class: \"announcement-feed\"\n};\nconst _hoisted_6 = {\n  key: 0,\n  class: \"announcement-image\"\n};\nconst _hoisted_7 = [\"src\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Button = _resolveComponent(\"Button\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"h1\", null, \"Welcome, \" + _toDisplayString($data.username) + \"!\", 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_Button, {\n    label: \"Create Announcement\",\n    icon: \"pi pi-plus\",\n    class: \"p-button-success\",\n    onClick: _ctx.AnnouncementPage\n  }, null, 8 /* PROPS */, [\"onClick\"])]), $data.loading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, \"Loading announcements...\")) : $data.announcements.length === 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, _cache[0] || (_cache[0] = [_createElementVNode(\"p\", null, \"No announcements available. Be the first to create one!\", -1 /* HOISTED */)]))) : (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [_cache[2] || (_cache[2] = _createElementVNode(\"h2\", null, \"Recent Announcements\", -1 /* HOISTED */)), _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.announcements, announcement => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: announcement.id,\n      class: \"announcement-item\"\n    }, [_createElementVNode(\"h3\", null, _toDisplayString(announcement.subject), 1 /* TEXT */), _createElementVNode(\"p\", null, _toDisplayString(announcement.body), 1 /* TEXT */), _createElementVNode(\"small\", null, [_createTextVNode(\" Effective Date: \" + _toDisplayString($options.formatDate(announcement.effective_date)) + \" \", 1 /* TEXT */), _cache[1] || (_cache[1] = _createElementVNode(\"br\", null, null, -1 /* HOISTED */)), _createTextVNode(\" Posted by: \" + _toDisplayString(announcement.author || \"Unknown\") + \" on \" + _toDisplayString($options.formatDate(announcement.created_at)), 1 /* TEXT */)]), announcement.image_path ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [_createElementVNode(\"img\", {\n      src: `http://127.0.0.1:8000/storage/${announcement.image_path}`,\n      alt: \"Announcement Image\"\n    }, null, 8 /* PROPS */, _hoisted_7)])) : _createCommentVNode(\"v-if\", true)]);\n  }), 128 /* KEYED_FRAGMENT */))])]))]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","_toDisplayString","$data","username","_hoisted_2","_createVNode","_component_Button","label","icon","onClick","_ctx","AnnouncementPage","loading","_hoisted_3","announcements","length","_hoisted_4","_cache","_hoisted_5","_Fragment","_renderList","announcement","id","subject","body","_createTextVNode","$options","formatDate","effective_date","author","created_at","image_path","_hoisted_6","src","alt","_hoisted_7","_createCommentVNode"],"sources":["C:\\Users\\darle\\solid-waste-management-system\\src\\components\\DashboardPage.vue"],"sourcesContent":["<template>\r\n  <div class=\"dashboard\">\r\n    <h1>Welcome, {{ username }}!</h1>\r\n\r\n    <div class=\"dashboard-actions\">\r\n      <Button \r\n        label=\"Create Announcement\" \r\n        icon=\"pi pi-plus\" \r\n        class=\"p-button-success\" \r\n        @click=\"AnnouncementPage\" \r\n      />\r\n    </div>\r\n\r\n    <div v-if=\"loading\" class=\"loading\">Loading announcements...</div>\r\n\r\n    <div v-else-if=\"announcements.length === 0\" class=\"no-announcements\">\r\n      <p>No announcements available. Be the first to create one!</p>\r\n    </div>\r\n\r\n    <div v-else class=\"announcement-feed\">\r\n      <h2>Recent Announcements</h2>\r\n      <ul>\r\n        <li v-for=\"announcement in announcements\" :key=\"announcement.id\" class=\"announcement-item\">\r\n          <h3>{{ announcement.subject }}</h3>\r\n          <p>{{ announcement.body }}</p>\r\n          <small>\r\n            Effective Date: {{ formatDate(announcement.effective_date) }} <br />\r\n            Posted by: {{ announcement.author || \"Unknown\" }} on {{ formatDate(announcement.created_at) }}\r\n          </small>\r\n          <div v-if=\"announcement.image_path\" class=\"announcement-image\">\r\n            <img :src=\"`http://127.0.0.1:8000/storage/${announcement.image_path}`\" alt=\"Announcement Image\" />\r\n          </div>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nimport { format } from \"date-fns\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      username: \"\", // Logged-in user's username\r\n      announcements: [], // List of announcements\r\n      loading: true, // Loading state\r\n    };\r\n  },\r\n  created() {\r\n    this.fetchUserData(); // Fetch logged-in user information\r\n    this.fetchAnnouncements(); // Fetch announcements\r\n  },\r\n  methods: {\r\n   async fetchUserData() {\r\n      try {\r\n        const response = await axios.get(\"http://127.0.0.1:8000/api/user/profile\", {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem(\"auth_token\")}`,\r\n          },\r\n        });\r\n        this.username = response.data.username || \"User\"; // Fallback if no username is provided\r\n      } catch (error) {\r\n        console.error(\"Error fetching user data:\", error);\r\n      }\r\n    },\r\n    async fetchAnnouncements() {\r\n      try {\r\n        const response = await axios.get(\"http://127.0.0.1:8000/api/announcements\", {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem(\"auth_token\")}`,\r\n          },\r\n        });\r\n        this.announcements = response.data.data || []; // Handle API response\r\n      } catch (error) {\r\n        console.error(\"Error fetching announcements:\", error);\r\n      } finally {\r\n        this.loading = false; // End loading state\r\n      }\r\n    },\r\n    formatDate(date) {\r\n      return format(new Date(date), \"MMMM d, yyyy h:mm a\"); // Format the date\r\n    },\r\n    navigateToCreateAnnouncement() {\r\n      this.$router.push({ name: \"CreateAnnouncementPage\" }); // Navigate to the create announcement page\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.dashboard {\r\n  padding: 20px;\r\n}\r\n\r\nh1 {\r\n  font-size: 2rem;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.dashboard-actions {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.loading,\r\n.no-announcements {\r\n  text-align: center;\r\n  font-size: 1.2rem;\r\n  color: #777;\r\n}\r\n\r\n.announcement-feed {\r\n  margin-top: 20px;\r\n}\r\n\r\n.announcement-item {\r\n  padding: 15px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 8px;\r\n  margin-bottom: 15px;\r\n  background: #f9f9f9;\r\n}\r\n\r\n.announcement-item h3 {\r\n  font-size: 1.5rem;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.announcement-item p {\r\n  font-size: 1.2rem;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.announcement-item small {\r\n  color: #555;\r\n  font-size: 0.9rem;\r\n}\r\n\r\n.announcement-image img {\r\n  max-width: 100%;\r\n  height: auto;\r\n  border-radius: 8px;\r\n  margin-top: 10px;\r\n}\r\n</style>\r\n"],"mappings":";;EACOA,KAAK,EAAC;AAAW;;EAGfA,KAAK,EAAC;AAAmB;;EAJlCC,GAAA;EAawBD,KAAK,EAAC;;;EAb9BC,GAAA;EAegDD,KAAK,EAAC;;;EAftDC,GAAA;EAmBgBD,KAAK,EAAC;;;EAnBtBC,GAAA;EA6B8CD,KAAK,EAAC;;mBA7BpD;;;uBACEE,mBAAA,CAkCM,OAlCNC,UAkCM,GAjCJC,mBAAA,CAAiC,YAA7B,WAAS,GAAAC,gBAAA,CAAGC,KAAA,CAAAC,QAAQ,IAAG,GAAC,iBAE5BH,mBAAA,CAOM,OAPNI,UAOM,GANJC,YAAA,CAKEC,iBAAA;IAJAC,KAAK,EAAC,qBAAqB;IAC3BC,IAAI,EAAC,YAAY;IACjBZ,KAAK,EAAC,kBAAkB;IACvBa,OAAK,EAAEC,IAAA,CAAAC;0CAIDT,KAAA,CAAAU,OAAO,I,cAAlBd,mBAAA,CAAkE,OAAlEe,UAAkE,EAA9B,0BAAwB,KAE5CX,KAAA,CAAAY,aAAa,CAACC,MAAM,U,cAApCjB,mBAAA,CAEM,OAFNkB,UAEM,EAAAC,MAAA,QAAAA,MAAA,OADJjB,mBAAA,CAA8D,WAA3D,yDAAuD,oB,qBAG5DF,mBAAA,CAeM,OAfNoB,UAeM,G,0BAdJlB,mBAAA,CAA6B,YAAzB,sBAAoB,sBACxBA,mBAAA,CAYK,c,kBAXHF,mBAAA,CAUKqB,SAAA,QAhCbC,WAAA,CAsBmClB,KAAA,CAAAY,aAAa,EAA7BO,YAAY;yBAAvBvB,mBAAA,CAUK;MAVsCD,GAAG,EAAEwB,YAAY,CAACC,EAAE;MAAE1B,KAAK,EAAC;QACrEI,mBAAA,CAAmC,YAAAC,gBAAA,CAA5BoB,YAAY,CAACE,OAAO,kBAC3BvB,mBAAA,CAA8B,WAAAC,gBAAA,CAAxBoB,YAAY,CAACG,IAAI,kBACvBxB,mBAAA,CAGQ,gBA5BlByB,gBAAA,CAyBiB,mBACW,GAAAxB,gBAAA,CAAGyB,QAAA,CAAAC,UAAU,CAACN,YAAY,CAACO,cAAc,KAAI,GAAC,iB,0BAAA5B,mBAAA,CAAM,sCA1BhFyB,gBAAA,CA0BgF,cACzD,GAAAxB,gBAAA,CAAGoB,YAAY,CAACQ,MAAM,iBAAgB,MAAI,GAAA5B,gBAAA,CAAGyB,QAAA,CAAAC,UAAU,CAACN,YAAY,CAACS,UAAU,kB,GAEjFT,YAAY,CAACU,UAAU,I,cAAlCjC,mBAAA,CAEM,OAFNkC,UAEM,GADJhC,mBAAA,CAAkG;MAA5FiC,GAAG,mCAAmCZ,YAAY,CAACU,UAAU;MAAIG,GAAG,EAAC;4BA9BvFC,UAAA,E,KAAAC,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}