{"ast":null,"code":"import { getWindowScrollTop } from '@primeuix/utils/dom';\nimport { ZIndex } from '@primeuix/utils/zindex';\nimport ChevronUpIcon from '@primevue/icons/chevronup';\nimport Button from 'primevue/button';\nimport BaseComponent from '@primevue/core/basecomponent';\nimport ScrollTopStyle from 'primevue/scrolltop/style';\nimport { resolveComponent, openBlock, createBlock, Transition, mergeProps, withCtx, renderSlot, normalizeClass, resolveDynamicComponent, createCommentVNode } from 'vue';\nvar script$1 = {\n  name: 'BaseScrollTop',\n  \"extends\": BaseComponent,\n  props: {\n    target: {\n      type: String,\n      \"default\": 'window'\n    },\n    threshold: {\n      type: Number,\n      \"default\": 400\n    },\n    icon: {\n      type: String,\n      \"default\": undefined\n    },\n    behavior: {\n      type: String,\n      \"default\": 'smooth'\n    },\n    buttonProps: {\n      type: Object,\n      \"default\": function _default() {\n        return {\n          rounded: true\n        };\n      }\n    }\n  },\n  style: ScrollTopStyle,\n  provide: function provide() {\n    return {\n      $pcScrollTop: this,\n      $parentInstance: this\n    };\n  }\n};\nvar script = {\n  name: 'ScrollTop',\n  \"extends\": script$1,\n  inheritAttrs: false,\n  scrollListener: null,\n  container: null,\n  data: function data() {\n    return {\n      visible: false\n    };\n  },\n  mounted: function mounted() {\n    if (this.target === 'window') this.bindDocumentScrollListener();else if (this.target === 'parent') this.bindParentScrollListener();\n  },\n  beforeUnmount: function beforeUnmount() {\n    if (this.target === 'window') this.unbindDocumentScrollListener();else if (this.target === 'parent') this.unbindParentScrollListener();\n    if (this.container) {\n      ZIndex.clear(this.container);\n      this.overlay = null;\n    }\n  },\n  methods: {\n    onClick: function onClick() {\n      var scrollElement = this.target === 'window' ? window : this.$el.parentElement;\n      scrollElement.scroll({\n        top: 0,\n        behavior: this.behavior\n      });\n    },\n    checkVisibility: function checkVisibility(scrollY) {\n      if (scrollY > this.threshold) this.visible = true;else this.visible = false;\n    },\n    bindParentScrollListener: function bindParentScrollListener() {\n      var _this = this;\n      this.scrollListener = function () {\n        _this.checkVisibility(_this.$el.parentElement.scrollTop);\n      };\n      this.$el.parentElement.addEventListener('scroll', this.scrollListener);\n    },\n    bindDocumentScrollListener: function bindDocumentScrollListener() {\n      var _this2 = this;\n      this.scrollListener = function () {\n        _this2.checkVisibility(getWindowScrollTop());\n      };\n      window.addEventListener('scroll', this.scrollListener);\n    },\n    unbindParentScrollListener: function unbindParentScrollListener() {\n      if (this.scrollListener) {\n        this.$el.parentElement.removeEventListener('scroll', this.scrollListener);\n        this.scrollListener = null;\n      }\n    },\n    unbindDocumentScrollListener: function unbindDocumentScrollListener() {\n      if (this.scrollListener) {\n        window.removeEventListener('scroll', this.scrollListener);\n        this.scrollListener = null;\n      }\n    },\n    onEnter: function onEnter(el) {\n      ZIndex.set('overlay', el, this.$primevue.config.zIndex.overlay);\n    },\n    onAfterLeave: function onAfterLeave(el) {\n      ZIndex.clear(el);\n    },\n    containerRef: function containerRef(el) {\n      this.container = el ? el.$el : undefined;\n    }\n  },\n  computed: {\n    scrollTopAriaLabel: function scrollTopAriaLabel() {\n      return this.$primevue.config.locale.aria ? this.$primevue.config.locale.aria.scrollTop : undefined;\n    }\n  },\n  components: {\n    ChevronUpIcon: ChevronUpIcon,\n    Button: Button\n  }\n};\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_Button = resolveComponent(\"Button\");\n  return openBlock(), createBlock(Transition, mergeProps({\n    name: \"p-scrolltop\",\n    appear: \"\",\n    onEnter: $options.onEnter,\n    onAfterLeave: $options.onAfterLeave\n  }, _ctx.ptm('transition')), {\n    \"default\": withCtx(function () {\n      return [$data.visible ? (openBlock(), createBlock(_component_Button, mergeProps({\n        key: 0,\n        ref: $options.containerRef,\n        \"class\": _ctx.cx('root'),\n        onClick: $options.onClick,\n        \"aria-label\": $options.scrollTopAriaLabel,\n        unstyled: _ctx.unstyled\n      }, _ctx.buttonProps, {\n        pt: _ctx.pt\n      }), {\n        icon: withCtx(function (slotProps) {\n          return [renderSlot(_ctx.$slots, \"icon\", {\n            \"class\": normalizeClass(_ctx.cx('icon'))\n          }, function () {\n            return [(openBlock(), createBlock(resolveDynamicComponent(_ctx.icon ? 'span' : 'ChevronUpIcon'), mergeProps({\n              \"class\": [_ctx.cx('icon'), _ctx.icon, slotProps[\"class\"]]\n            }, _ctx.ptm('icon')), null, 16, [\"class\"]))];\n          })];\n        }),\n        _: 3\n      }, 16, [\"class\", \"onClick\", \"aria-label\", \"unstyled\", \"pt\"])) : createCommentVNode(\"\", true)];\n    }),\n    _: 3\n  }, 16, [\"onEnter\", \"onAfterLeave\"]);\n}\nscript.render = render;\nexport { script as default };","map":{"version":3,"names":["script$1","name","BaseComponent","props","target","type","String","threshold","Number","icon","undefined","behavior","buttonProps","Object","_default","rounded","style","ScrollTopStyle","provide","$pcScrollTop","$parentInstance","script","inheritAttrs","scrollListener","container","data","visible","mounted","bindDocumentScrollListener","bindParentScrollListener","beforeUnmount","unbindDocumentScrollListener","unbindParentScrollListener","ZIndex","clear","overlay","methods","onClick","scrollElement","window","$el","parentElement","scroll","top","checkVisibility","scrollY","_this","scrollTop","addEventListener","_this2","getWindowScrollTop","removeEventListener","onEnter","el","set","$primevue","config","zIndex","onAfterLeave","containerRef","computed","scrollTopAriaLabel","locale","aria","components","ChevronUpIcon","Button","openBlock","createBlock","Transition","mergeProps","appear","$options","_ctx","ptm","$data","_component_Button","ref","cx","unstyled","pt","withCtx","slotProps","renderSlot","$slots","normalizeClass","resolveDynamicComponent"],"sources":["../../src/scrolltop/BaseScrollTop.vue","../../src/scrolltop/ScrollTop.vue","../../src/scrolltop/ScrollTop.vue?vue&type=template&id=2776720c&lang.js"],"sourcesContent":["<script>\nimport BaseComponent from '@primevue/core/basecomponent';\nimport ScrollTopStyle from 'primevue/scrolltop/style';\n\nexport default {\n    name: 'BaseScrollTop',\n    extends: BaseComponent,\n    props: {\n        target: {\n            type: String,\n            default: 'window'\n        },\n        threshold: {\n            type: Number,\n            default: 400\n        },\n        icon: {\n            type: String,\n            default: undefined\n        },\n        behavior: {\n            type: String,\n            default: 'smooth'\n        },\n        buttonProps: {\n            type: Object,\n            default: () => {\n                return { rounded: true };\n            }\n        }\n    },\n    style: ScrollTopStyle,\n    provide() {\n        return {\n            $pcScrollTop: this,\n            $parentInstance: this\n        };\n    }\n};\n</script>\n","<template>\n    <transition name=\"p-scrolltop\" appear @enter=\"onEnter\" @after-leave=\"onAfterLeave\" v-bind=\"ptm('transition')\">\n        <Button v-if=\"visible\" :ref=\"containerRef\" :class=\"cx('root')\" @click=\"onClick\" :aria-label=\"scrollTopAriaLabel\" :unstyled=\"unstyled\" v-bind=\"buttonProps\" :pt=\"pt\">\n            <template #icon=\"slotProps\">\n                <slot name=\"icon\" :class=\"cx('icon')\">\n                    <component :is=\"icon ? 'span' : 'ChevronUpIcon'\" :class=\"[cx('icon'), icon, slotProps.class]\" v-bind=\"ptm('icon')\" />\n                </slot>\n            </template>\n        </Button>\n    </transition>\n</template>\n\n<script>\nimport { getWindowScrollTop } from '@primeuix/utils/dom';\nimport { ZIndex } from '@primeuix/utils/zindex';\nimport ChevronUpIcon from '@primevue/icons/chevronup';\nimport Button from 'primevue/button';\nimport BaseScrollTop from './BaseScrollTop.vue';\n\nexport default {\n    name: 'ScrollTop',\n    extends: BaseScrollTop,\n    inheritAttrs: false,\n    scrollListener: null,\n    container: null,\n    data() {\n        return {\n            visible: false\n        };\n    },\n    mounted() {\n        if (this.target === 'window') this.bindDocumentScrollListener();\n        else if (this.target === 'parent') this.bindParentScrollListener();\n    },\n    beforeUnmount() {\n        if (this.target === 'window') this.unbindDocumentScrollListener();\n        else if (this.target === 'parent') this.unbindParentScrollListener();\n\n        if (this.container) {\n            ZIndex.clear(this.container);\n            this.overlay = null;\n        }\n    },\n    methods: {\n        onClick() {\n            let scrollElement = this.target === 'window' ? window : this.$el.parentElement;\n\n            scrollElement.scroll({\n                top: 0,\n                behavior: this.behavior\n            });\n        },\n        checkVisibility(scrollY) {\n            if (scrollY > this.threshold) this.visible = true;\n            else this.visible = false;\n        },\n        bindParentScrollListener() {\n            this.scrollListener = () => {\n                this.checkVisibility(this.$el.parentElement.scrollTop);\n            };\n\n            this.$el.parentElement.addEventListener('scroll', this.scrollListener);\n        },\n        bindDocumentScrollListener() {\n            this.scrollListener = () => {\n                this.checkVisibility(getWindowScrollTop());\n            };\n\n            window.addEventListener('scroll', this.scrollListener);\n        },\n        unbindParentScrollListener() {\n            if (this.scrollListener) {\n                this.$el.parentElement.removeEventListener('scroll', this.scrollListener);\n                this.scrollListener = null;\n            }\n        },\n        unbindDocumentScrollListener() {\n            if (this.scrollListener) {\n                window.removeEventListener('scroll', this.scrollListener);\n                this.scrollListener = null;\n            }\n        },\n        onEnter(el) {\n            ZIndex.set('overlay', el, this.$primevue.config.zIndex.overlay);\n        },\n        onAfterLeave(el) {\n            ZIndex.clear(el);\n        },\n        containerRef(el) {\n            this.container = el ? el.$el : undefined;\n        }\n    },\n    computed: {\n        scrollTopAriaLabel() {\n            return this.$primevue.config.locale.aria ? this.$primevue.config.locale.aria.scrollTop : undefined;\n        }\n    },\n    components: {\n        ChevronUpIcon,\n        Button\n    }\n};\n</script>\n","<template>\n    <transition name=\"p-scrolltop\" appear @enter=\"onEnter\" @after-leave=\"onAfterLeave\" v-bind=\"ptm('transition')\">\n        <Button v-if=\"visible\" :ref=\"containerRef\" :class=\"cx('root')\" @click=\"onClick\" :aria-label=\"scrollTopAriaLabel\" :unstyled=\"unstyled\" v-bind=\"buttonProps\" :pt=\"pt\">\n            <template #icon=\"slotProps\">\n                <slot name=\"icon\" :class=\"cx('icon')\">\n                    <component :is=\"icon ? 'span' : 'ChevronUpIcon'\" :class=\"[cx('icon'), icon, slotProps.class]\" v-bind=\"ptm('icon')\" />\n                </slot>\n            </template>\n        </Button>\n    </transition>\n</template>\n\n<script>\nimport { getWindowScrollTop } from '@primeuix/utils/dom';\nimport { ZIndex } from '@primeuix/utils/zindex';\nimport ChevronUpIcon from '@primevue/icons/chevronup';\nimport Button from 'primevue/button';\nimport BaseScrollTop from './BaseScrollTop.vue';\n\nexport default {\n    name: 'ScrollTop',\n    extends: BaseScrollTop,\n    inheritAttrs: false,\n    scrollListener: null,\n    container: null,\n    data() {\n        return {\n            visible: false\n        };\n    },\n    mounted() {\n        if (this.target === 'window') this.bindDocumentScrollListener();\n        else if (this.target === 'parent') this.bindParentScrollListener();\n    },\n    beforeUnmount() {\n        if (this.target === 'window') this.unbindDocumentScrollListener();\n        else if (this.target === 'parent') this.unbindParentScrollListener();\n\n        if (this.container) {\n            ZIndex.clear(this.container);\n            this.overlay = null;\n        }\n    },\n    methods: {\n        onClick() {\n            let scrollElement = this.target === 'window' ? window : this.$el.parentElement;\n\n            scrollElement.scroll({\n                top: 0,\n                behavior: this.behavior\n            });\n        },\n        checkVisibility(scrollY) {\n            if (scrollY > this.threshold) this.visible = true;\n            else this.visible = false;\n        },\n        bindParentScrollListener() {\n            this.scrollListener = () => {\n                this.checkVisibility(this.$el.parentElement.scrollTop);\n            };\n\n            this.$el.parentElement.addEventListener('scroll', this.scrollListener);\n        },\n        bindDocumentScrollListener() {\n            this.scrollListener = () => {\n                this.checkVisibility(getWindowScrollTop());\n            };\n\n            window.addEventListener('scroll', this.scrollListener);\n        },\n        unbindParentScrollListener() {\n            if (this.scrollListener) {\n                this.$el.parentElement.removeEventListener('scroll', this.scrollListener);\n                this.scrollListener = null;\n            }\n        },\n        unbindDocumentScrollListener() {\n            if (this.scrollListener) {\n                window.removeEventListener('scroll', this.scrollListener);\n                this.scrollListener = null;\n            }\n        },\n        onEnter(el) {\n            ZIndex.set('overlay', el, this.$primevue.config.zIndex.overlay);\n        },\n        onAfterLeave(el) {\n            ZIndex.clear(el);\n        },\n        containerRef(el) {\n            this.container = el ? el.$el : undefined;\n        }\n    },\n    computed: {\n        scrollTopAriaLabel() {\n            return this.$primevue.config.locale.aria ? this.$primevue.config.locale.aria.scrollTop : undefined;\n        }\n    },\n    components: {\n        ChevronUpIcon,\n        Button\n    }\n};\n</script>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}