{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"header-container shadow-md\"\n};\nconst _hoisted_2 = {\n  class: \"p-fluid\"\n};\nconst _hoisted_3 = {\n  class: \"p-field mb-4\"\n};\nconst _hoisted_4 = {\n  class: \"p-field mb-6\"\n};\nconst _hoisted_5 = {\n  class: \"p-field button-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Button = _resolveComponent(\"Button\");\n  const _component_Menubar = _resolveComponent(\"Menubar\");\n  const _component_InputText = _resolveComponent(\"InputText\");\n  const _component_Dialog = _resolveComponent(\"Dialog\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", _hoisted_1, [_createCommentVNode(\" Menu Bar \"), _createVNode(_component_Menubar, {\n    model: $data.menuItems\n  }, {\n    start: _withCtx(() => _cache[4] || (_cache[4] = [_createElementVNode(\"span\", {\n      class: \"text-xl font-bold text-white\"\n    }, \"Solid Waste Management System\", -1 /* HOISTED */)])),\n    end: _withCtx(() => [_createCommentVNode(\" Button to trigger the login modal \"), _createVNode(_component_Button, {\n      label: \"Login\",\n      icon: \"pi pi-user\",\n      class: \"p-button-outlined p-button-lg\",\n      onClick: _cache[0] || (_cache[0] = $event => $data.showLoginModal = true)\n    })]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"model\"])]), _createCommentVNode(\" Login Modal \"), _createVNode(_component_Dialog, {\n    header: \"Login\",\n    visible: $data.showLoginModal,\n    \"onUpdate:visible\": _cache[3] || (_cache[3] = $event => $data.showLoginModal = $event),\n    modal: \"\",\n    class: \"login-modal p-dialog-lg\",\n    style: {\n      \"width\": \"40vw\",\n      \"max-width\": \"500px\"\n    }\n  }, {\n    default: _withCtx(() => [_createCommentVNode(\" Logo \"), _cache[7] || (_cache[7] = _createElementVNode(\"div\", {\n      class: \"flex justify-center mb-6\"\n    }, [_createElementVNode(\"img\", {\n      src: \"assets/logo.png\",\n      alt: \"Logo\",\n      class: \"h-25 w-auto\"\n    })], -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_2, [_createCommentVNode(\" Username Field \"), _createElementVNode(\"div\", _hoisted_3, [_cache[5] || (_cache[5] = _createElementVNode(\"label\", {\n      for: \"username\",\n      class: \"block text-lg font-medium text-gray-700 mb-2\"\n    }, \"Username\", -1 /* HOISTED */)), _createVNode(_component_InputText, {\n      id: \"username\",\n      modelValue: $data.username,\n      \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.username = $event),\n      placeholder: \"Enter your username\",\n      class: \"p-inputtext-lg w-full\"\n    }, null, 8 /* PROPS */, [\"modelValue\"])]), _createCommentVNode(\" Password Field \"), _createElementVNode(\"div\", _hoisted_4, [_cache[6] || (_cache[6] = _createElementVNode(\"label\", {\n      for: \"password\",\n      class: \"block text-lg font-medium text-gray-700 mb-2\"\n    }, \"Password\", -1 /* HOISTED */)), _createVNode(_component_InputText, {\n      type: \"password\",\n      id: \"password\",\n      modelValue: $data.password,\n      \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.password = $event),\n      placeholder: \"Enter your password\",\n      class: \"p-inputtext-lg w-full\",\n      feedback: \"\"\n    }, null, 8 /* PROPS */, [\"modelValue\"])]), _createCommentVNode(\" Button Container \"), _createElementVNode(\"div\", _hoisted_5, [_createVNode(_component_Button, {\n      label: \"Login\",\n      icon: \"pi pi-sign-in\",\n      class: \"p-button-lg p-button-success w-full login-btn\",\n      onClick: $options.login\n    }, null, 8 /* PROPS */, [\"onClick\"])])])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"visible\"])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["class","_createElementBlock","_Fragment","_createElementVNode","_hoisted_1","_createCommentVNode","_createVNode","_component_Menubar","model","$data","menuItems","start","_withCtx","_cache","end","_component_Button","label","icon","onClick","$event","showLoginModal","_","_component_Dialog","header","visible","modal","style","default","src","alt","_hoisted_2","_hoisted_3","for","_component_InputText","id","modelValue","username","placeholder","_hoisted_4","type","password","feedback","_hoisted_5","$options","login"],"sources":["C:\\Users\\darle\\solid-waste-management-system\\src\\components\\Header.vue"],"sourcesContent":["<template>\r\n  <div class=\"header-container shadow-md\">\r\n    <!-- Menu Bar -->\r\n    <Menubar :model=\"menuItems\">\r\n      <template #start>\r\n        <span class=\"text-xl font-bold text-white\">Solid Waste Management System</span>\r\n      </template>\r\n      <template #end>\r\n        <!-- Button to trigger the login modal -->\r\n        <Button label=\"Login\" icon=\"pi pi-user\" class=\"p-button-outlined p-button-lg\" @click=\"showLoginModal = true\" />\r\n      </template>\r\n    </Menubar>\r\n  </div>\r\n\r\n <!-- Login Modal -->\r\n<Dialog \r\n  header=\"Login\" \r\n  v-model:visible=\"showLoginModal\" \r\n  modal \r\n  class=\"login-modal p-dialog-lg\" \r\n  style=\"width: 40vw; max-width: 500px;\">\r\n  \r\n  <!-- Logo -->\r\n  <div class=\"flex justify-center mb-6\">\r\n    <img src=\"assets/logo.png\" alt=\"Logo\" class=\"h-25 w-auto\" />\r\n  </div>\r\n  \r\n  <div class=\"p-fluid\">\r\n    <!-- Username Field -->\r\n    <div class=\"p-field mb-4\">\r\n      <label for=\"username\" class=\"block text-lg font-medium text-gray-700 mb-2\">Username</label>\r\n        <InputText \r\n          id=\"username\" \r\n          v-model=\"username\" \r\n          placeholder=\"Enter your username\" \r\n          class=\"p-inputtext-lg w-full\" />\r\n    </div>\r\n\r\n    <!-- Password Field -->\r\n    <div class=\"p-field mb-6\">\r\n      <label for=\"password\" class=\"block text-lg font-medium text-gray-700 mb-2\">Password</label>\r\n        <InputText \r\n          type=\"password\" \r\n          id=\"password\" \r\n          v-model=\"password\" \r\n          placeholder=\"Enter your password\" \r\n          class=\"p-inputtext-lg w-full\" \r\n          feedback />\r\n    </div>\r\n\r\n    <!-- Button Container -->\r\n    <div class=\"p-field button-container\">\r\n      <Button \r\n        label=\"Login\" \r\n        icon=\"pi pi-sign-in\" \r\n        class=\"p-button-lg p-button-success w-full login-btn\" \r\n        @click=\"login\" />\r\n    </div>\r\n  </div>\r\n</Dialog>\r\n\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"HeaderVue\",\r\n  data() {\r\n    return {\r\n      showLoginModal: false, // Controls modal visibility\r\n      username: '', // Username input field\r\n      password: '', // Password input field\r\n      menuItems: [\r\n        // Your menu items here (optional for now)\r\n      ]\r\n    };\r\n  },\r\n  methods: {\r\n    login() {\r\n      // Handle login logic here\r\n      console.log('Logging in with:', this.username, this.password);\r\n      this.showLoginModal = false; // Close the modal after login\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* Header styling */\r\n.header-container {\r\n  background-color: #2C3E50; /* Dark header background */\r\n}\r\n\r\n/* Menu Bar Text */\r\n.menubar .p-menubar-start {\r\n  color: white;\r\n}\r\n\r\n/* Modal Styling */\r\n.login-modal .p-dialog {\r\n  width: 400px;\r\n  border-radius: 8px;\r\n  padding: 30px;\r\n  background-color: #f9f9f9;\r\n  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n/* Label Styling */\r\n.label {\r\n  font-size: 14px;\r\n  font-weight: 600;\r\n  color: #333;\r\n  margin-bottom: 8px;\r\n  display: block;\r\n}\r\n\r\n/* Input Field Styling */\r\n.input-field {\r\n  border-radius: 6px;\r\n  background-color: #fafafa;\r\n  padding: 12px;\r\n  border: 1px solid #ccc;\r\n  width: 100%;\r\n  font-size: 16px;\r\n}\r\n\r\n.input-field:focus {\r\n  border-color: #4CAF50; /* Green focus color */\r\n  outline: none;\r\n  box-shadow: 0 0 5px rgba(76, 175, 80, 0.5); /* Green focus shadow */\r\n}\r\n\r\n/* Button Styling */\r\n.login-btn {\r\n  border-radius: 6px;\r\n  font-size: 16px;\r\n  padding: 12px;\r\n  font-weight: bold;\r\n  background-color: #4CAF50; /* Green color */\r\n  border: none;\r\n  transition: background-color 0.3s ease, transform 0.2s ease;\r\n  width: auto;\r\n  margin: 0 auto; /* Centering button */\r\n}\r\n\r\n.login-btn:hover {\r\n  background-color: #45a049; /* Darker green on hover */\r\n  transform: translateY(-3px);\r\n}\r\n\r\n.login-btn:focus {\r\n  outline: none;\r\n}\r\n\r\n/* Button Container */\r\n.button-container {\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-top: 20px;\r\n}\r\n\r\n/* Responsive Styling */\r\n@media (max-width: 600px) {\r\n  .login-modal .p-dialog {\r\n    width: 90%;\r\n    padding: 20px 10px;\r\n  }\r\n\r\n  .login-btn {\r\n    font-size: 14px;\r\n    padding: 10px;\r\n  }\r\n}\r\n\r\n/* Menubar Styling */\r\n.p-menubar {\r\n  background-color: #2C3E50; /* Dark header background */\r\n  border: none;\r\n}\r\n\r\n.p-menubar .p-menuitem-link {\r\n  color: #ecf0f1;\r\n  font-size: 16px;\r\n}\r\n\r\n.p-menubar .p-menuitem-link:hover {\r\n  background-color: #34495E; /* Darker background on hover */\r\n  color: #ffffff;\r\n}\r\n\r\n/* Button Styles for Menubar */\r\n.p-button-outlined {\r\n  color: #ecf0f1; /* White color for text */\r\n  border-color: #ecf0f1;\r\n}\r\n\r\n.p-button-outlined:hover {\r\n  background-color: #34495E; /* Darker color on hover */\r\n  border-color: #ecf0f1;\r\n}\r\n</style>\r\n"],"mappings":";;EACOA,KAAK,EAAC;AAA4B;;EA0BlCA,KAAK,EAAC;AAAS;;EAEbA,KAAK,EAAC;AAAc;;EAUpBA,KAAK,EAAC;AAAc;;EAYpBA,KAAK,EAAC;AAA0B;;;;;;uBAnDzCC,mBAAA,CAAAC,SAAA,SACEC,mBAAA,CAWM,OAXNC,UAWM,GAVJC,mBAAA,cAAiB,EACjBC,YAAA,CAQUC,kBAAA;IARAC,KAAK,EAAEC,KAAA,CAAAC;EAAS;IACbC,KAAK,EAAAC,QAAA,CACd,MAA+EC,MAAA,QAAAA,MAAA,OAA/EV,mBAAA,CAA+E;MAAzEH,KAAK,EAAC;IAA8B,GAAC,+BAA6B,oB;IAE/Dc,GAAG,EAAAF,QAAA,CACZ,MAA0C,CAA1CP,mBAAA,uCAA0C,EAC1CC,YAAA,CAA+GS,iBAAA;MAAvGC,KAAK,EAAC,OAAO;MAACC,IAAI,EAAC,YAAY;MAACjB,KAAK,EAAC,+BAA+B;MAAEkB,OAAK,EAAAL,MAAA,QAAAA,MAAA,MAAAM,MAAA,IAAEV,KAAA,CAAAW,cAAc;;IAT5GC,CAAA;kCAcChB,mBAAA,iBAAoB,EACrBC,YAAA,CA4CSgB,iBAAA;IA3CPC,MAAM,EAAC,OAAO;IACNC,OAAO,EAAEf,KAAA,CAAAW,cAAc;IAjBjC,oBAAAP,MAAA,QAAAA,MAAA,MAAAM,MAAA,IAiBmBV,KAAA,CAAAW,cAAc,GAAAD,MAAA;IAC/BM,KAAK,EAAL,EAAK;IACLzB,KAAK,EAAC,yBAAyB;IAC/B0B,KAAsC,EAAtC;MAAA;MAAA;IAAA;;IApBFC,OAAA,EAAAf,QAAA,CAsBE,MAAa,CAAbP,mBAAA,UAAa,E,0BACbF,mBAAA,CAEM;MAFDH,KAAK,EAAC;IAA0B,IACnCG,mBAAA,CAA4D;MAAvDyB,GAAG,EAAC,iBAAiB;MAACC,GAAG,EAAC,MAAM;MAAC7B,KAAK,EAAC;6BAG9CG,mBAAA,CA+BM,OA/BN2B,UA+BM,GA9BJzB,mBAAA,oBAAuB,EACvBF,mBAAA,CAOM,OAPN4B,UAOM,G,0BANJ5B,mBAAA,CAA2F;MAApF6B,GAAG,EAAC,UAAU;MAAChC,KAAK,EAAC;OAA+C,UAAQ,sBACjFM,YAAA,CAIkC2B,oBAAA;MAHhCC,EAAE,EAAC,UAAU;MAhCvBC,UAAA,EAiCmB1B,KAAA,CAAA2B,QAAQ;MAjC3B,uBAAAvB,MAAA,QAAAA,MAAA,MAAAM,MAAA,IAiCmBV,KAAA,CAAA2B,QAAQ,GAAAjB,MAAA;MACjBkB,WAAW,EAAC,qBAAqB;MACjCrC,KAAK,EAAC;+CAGZK,mBAAA,oBAAuB,EACvBF,mBAAA,CASM,OATNmC,UASM,G,0BARJnC,mBAAA,CAA2F;MAApF6B,GAAG,EAAC,UAAU;MAAChC,KAAK,EAAC;OAA+C,UAAQ,sBACjFM,YAAA,CAMa2B,oBAAA;MALXM,IAAI,EAAC,UAAU;MACfL,EAAE,EAAC,UAAU;MA3CvBC,UAAA,EA4CmB1B,KAAA,CAAA+B,QAAQ;MA5C3B,uBAAA3B,MAAA,QAAAA,MAAA,MAAAM,MAAA,IA4CmBV,KAAA,CAAA+B,QAAQ,GAAArB,MAAA;MACjBkB,WAAW,EAAC,qBAAqB;MACjCrC,KAAK,EAAC,uBAAuB;MAC7ByC,QAAQ,EAAR;+CAGNpC,mBAAA,sBAAyB,EACzBF,mBAAA,CAMM,OANNuC,UAMM,GALJpC,YAAA,CAImBS,iBAAA;MAHjBC,KAAK,EAAC,OAAO;MACbC,IAAI,EAAC,eAAe;MACpBjB,KAAK,EAAC,+CAA+C;MACpDkB,OAAK,EAAEyB,QAAA,CAAAC;;IAxDhBvB,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}