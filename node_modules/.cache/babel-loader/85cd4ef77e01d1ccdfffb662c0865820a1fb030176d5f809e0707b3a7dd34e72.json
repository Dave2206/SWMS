{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.for-each.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport \"core-js/modules/esnext.iterator.reduce.js\";\nimport { UniqueComponentId } from '@primevue/core/utils';\nimport ChevronRightIcon from '@primevue/icons/chevronright';\nimport ChevronUpIcon from '@primevue/icons/chevronup';\nimport AccordionContent from 'primevue/accordioncontent';\nimport AccordionHeader from 'primevue/accordionheader';\nimport AccordionPanel from 'primevue/accordionpanel';\nimport { mergeProps, resolveComponent, openBlock, createElementBlock, Fragment, renderList, createBlock, withCtx, createVNode, normalizeClass, resolveDynamicComponent, createCommentVNode, toDisplayString, renderSlot } from 'vue';\nimport BaseComponent from '@primevue/core/basecomponent';\nimport AccordionStyle from 'primevue/accordion/style';\nvar script$1 = {\n  name: 'BaseAccordion',\n  \"extends\": BaseComponent,\n  props: {\n    value: {\n      type: [String, Number, Array],\n      \"default\": undefined\n    },\n    multiple: {\n      type: Boolean,\n      \"default\": false\n    },\n    lazy: {\n      type: Boolean,\n      \"default\": false\n    },\n    tabindex: {\n      type: Number,\n      \"default\": 0\n    },\n    selectOnFocus: {\n      type: Boolean,\n      \"default\": false\n    },\n    expandIcon: {\n      type: String,\n      \"default\": undefined\n    },\n    collapseIcon: {\n      type: String,\n      \"default\": undefined\n    },\n    // @deprecated since v4.\n    activeIndex: {\n      type: [Number, Array],\n      \"default\": null\n    }\n  },\n  style: AccordionStyle,\n  provide: function provide() {\n    return {\n      $pcAccordion: this,\n      $parentInstance: this\n    };\n  }\n};\nvar script = {\n  name: 'Accordion',\n  \"extends\": script$1,\n  inheritAttrs: false,\n  emits: ['update:value', 'update:activeIndex', 'tab-open', 'tab-close', 'tab-click'],\n  data: function data() {\n    return {\n      id: this.$attrs.id,\n      d_value: this.value\n    };\n  },\n  watch: {\n    '$attrs.id': function $attrsId(newValue) {\n      this.id = newValue || UniqueComponentId();\n    },\n    value: function value(newValue) {\n      this.d_value = newValue;\n    },\n    activeIndex: {\n      immediate: true,\n      handler: function handler(newValue) {\n        if (this.hasAccordionTab) {\n          this.d_value = this.multiple ? newValue === null || newValue === void 0 ? void 0 : newValue.map(String) : newValue === null || newValue === void 0 ? void 0 : newValue.toString();\n        }\n      }\n    }\n  },\n  mounted: function mounted() {\n    this.id = this.id || UniqueComponentId();\n  },\n  methods: {\n    isItemActive: function isItemActive(value) {\n      var _this$d_value;\n      return this.multiple ? (_this$d_value = this.d_value) === null || _this$d_value === void 0 ? void 0 : _this$d_value.includes(value) : this.d_value === value;\n    },\n    updateValue: function updateValue(newValue) {\n      var _this$d_value2;\n      var active = this.isItemActive(newValue);\n      if (this.multiple) {\n        if (active) {\n          this.d_value = this.d_value.filter(function (v) {\n            return v !== newValue;\n          });\n        } else {\n          if (this.d_value) this.d_value.push(newValue);else this.d_value = [newValue];\n        }\n      } else {\n        this.d_value = active ? null : newValue;\n      }\n      this.$emit('update:value', this.d_value);\n\n      // @deprecated since v4.\n      this.$emit('update:activeIndex', this.multiple ? (_this$d_value2 = this.d_value) === null || _this$d_value2 === void 0 ? void 0 : _this$d_value2.map(Number) : Number(this.d_value));\n      this.$emit(active ? 'tab-close' : 'tab-open', {\n        originalEvent: undefined,\n        index: Number(newValue)\n      });\n    },\n    // @deprecated since v4. Use new structure instead.\n    isAccordionTab: function isAccordionTab(child) {\n      return child.type.name === 'AccordionTab';\n    },\n    getTabProp: function getTabProp(tab, name) {\n      return tab.props ? tab.props[name] : undefined;\n    },\n    getKey: function getKey(tab, index) {\n      return this.getTabProp(tab, 'header') || index;\n    },\n    getHeaderPT: function getHeaderPT(tab, index) {\n      var _this = this;\n      return {\n        root: mergeProps({\n          onClick: function onClick(event) {\n            return _this.onTabClick(event, index);\n          }\n        }, this.getTabProp(tab, 'headerProps'), this.getTabPT(tab, 'header', index)),\n        toggleicon: mergeProps(this.getTabProp(tab, 'headeractionprops'), this.getTabPT(tab, 'headeraction', index))\n      };\n    },\n    getContentPT: function getContentPT(tab, index) {\n      return {\n        root: mergeProps(this.getTabProp(tab, 'contentProps'), this.getTabPT(tab, 'toggleablecontent', index)),\n        transition: this.getTabPT(tab, 'transition', index),\n        content: this.getTabPT(tab, 'content', index)\n      };\n    },\n    getTabPT: function getTabPT(tab, key, index) {\n      var count = this.tabs.length;\n      var tabMetaData = {\n        props: tab.props || {},\n        parent: {\n          instance: this,\n          props: this.$props,\n          state: this.$data\n        },\n        context: {\n          index: index,\n          count: count,\n          first: index === 0,\n          last: index === count - 1,\n          active: this.isItemActive(\"\".concat(index))\n        }\n      };\n      return mergeProps(this.ptm(\"accordiontab.\".concat(key), tabMetaData), this.ptmo(this.getTabProp(tab, 'pt'), key, tabMetaData));\n    },\n    onTabClick: function onTabClick(event, index) {\n      this.$emit('tab-click', {\n        originalEvent: event,\n        index: index\n      });\n    }\n  },\n  computed: {\n    // @deprecated since v4.\n    tabs: function tabs() {\n      var _this2 = this;\n      return this.$slots[\"default\"]().reduce(function (tabs, child) {\n        if (_this2.isAccordionTab(child)) {\n          tabs.push(child);\n        } else if (child.children && child.children instanceof Array) {\n          child.children.forEach(function (nestedChild) {\n            if (_this2.isAccordionTab(nestedChild)) {\n              tabs.push(nestedChild);\n            }\n          });\n        }\n        return tabs;\n      }, []);\n    },\n    hasAccordionTab: function hasAccordionTab() {\n      return this.tabs.length;\n    }\n  },\n  components: {\n    AccordionPanel: AccordionPanel,\n    AccordionHeader: AccordionHeader,\n    AccordionContent: AccordionContent,\n    ChevronUpIcon: ChevronUpIcon,\n    ChevronRightIcon: ChevronRightIcon\n  }\n};\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_AccordionHeader = resolveComponent(\"AccordionHeader\");\n  var _component_AccordionContent = resolveComponent(\"AccordionContent\");\n  var _component_AccordionPanel = resolveComponent(\"AccordionPanel\");\n  return openBlock(), createElementBlock(\"div\", mergeProps({\n    \"class\": _ctx.cx('root')\n  }, _ctx.ptmi('root')), [$options.hasAccordionTab ? (openBlock(true), createElementBlock(Fragment, {\n    key: 0\n  }, renderList($options.tabs, function (tab, i) {\n    return openBlock(), createBlock(_component_AccordionPanel, {\n      key: $options.getKey(tab, i),\n      value: \"\".concat(i),\n      pt: {\n        root: $options.getTabPT(tab, 'root', i)\n      },\n      disabled: $options.getTabProp(tab, 'disabled')\n    }, {\n      \"default\": withCtx(function () {\n        return [createVNode(_component_AccordionHeader, {\n          \"class\": normalizeClass($options.getTabProp(tab, 'headerClass')),\n          pt: $options.getHeaderPT(tab, i)\n        }, {\n          toggleicon: withCtx(function (slotProps) {\n            return [slotProps.active ? (openBlock(), createBlock(resolveDynamicComponent(_ctx.$slots.collapseicon ? _ctx.$slots.collapseicon : _ctx.collapseIcon ? 'span' : 'ChevronDownIcon'), mergeProps({\n              key: 0,\n              \"class\": [_ctx.collapseIcon, slotProps[\"class\"]],\n              \"aria-hidden\": \"true\",\n              ref_for: true\n            }, $options.getTabPT(tab, 'headericon', i)), null, 16, [\"class\"])) : (openBlock(), createBlock(resolveDynamicComponent(_ctx.$slots.expandicon ? _ctx.$slots.expandicon : _ctx.expandIcon ? 'span' : 'ChevronUpIcon'), mergeProps({\n              key: 1,\n              \"class\": [_ctx.expandIcon, slotProps[\"class\"]],\n              \"aria-hidden\": \"true\",\n              ref_for: true\n            }, $options.getTabPT(tab, 'headericon', i)), null, 16, [\"class\"]))];\n          }),\n          \"default\": withCtx(function () {\n            return [tab.children && tab.children.headericon ? (openBlock(), createBlock(resolveDynamicComponent(tab.children.headericon), {\n              key: 0,\n              isTabActive: $options.isItemActive(\"\".concat(i)),\n              active: $options.isItemActive(\"\".concat(i)),\n              index: i\n            }, null, 8, [\"isTabActive\", \"active\", \"index\"])) : createCommentVNode(\"\", true), tab.props && tab.props.header ? (openBlock(), createElementBlock(\"span\", mergeProps({\n              key: 1,\n              ref_for: true\n            }, $options.getTabPT(tab, 'headertitle', i)), toDisplayString(tab.props.header), 17)) : createCommentVNode(\"\", true), tab.children && tab.children.header ? (openBlock(), createBlock(resolveDynamicComponent(tab.children.header), {\n              key: 2\n            })) : createCommentVNode(\"\", true)];\n          }),\n          _: 2\n        }, 1032, [\"class\", \"pt\"]), createVNode(_component_AccordionContent, {\n          pt: $options.getContentPT(tab, i)\n        }, {\n          \"default\": withCtx(function () {\n            return [(openBlock(), createBlock(resolveDynamicComponent(tab)))];\n          }),\n          _: 2\n        }, 1032, [\"pt\"])];\n      }),\n      _: 2\n    }, 1032, [\"value\", \"pt\", \"disabled\"]);\n  }), 128)) : renderSlot(_ctx.$slots, \"default\", {\n    key: 1\n  })], 16);\n}\nscript.render = render;\nexport { script as default };","map":{"version":3,"names":["script$1","name","BaseComponent","props","value","type","String","Number","Array","undefined","multiple","Boolean","lazy","tabindex","selectOnFocus","expandIcon","collapseIcon","activeIndex","style","AccordionStyle","provide","$pcAccordion","$parentInstance","script","inheritAttrs","emits","data","id","$attrs","d_value","watch","$attrsId","newValue","UniqueComponentId","immediate","handler","hasAccordionTab","map","toString","mounted","methods","isItemActive","_this$d_value","includes","updateValue","_this$d_value2","active","filter","v","push","$emit","originalEvent","index","isAccordionTab","child","getTabProp","tab","getKey","getHeaderPT","_this","root","mergeProps","onClick","event","onTabClick","getTabPT","toggleicon","getContentPT","transition","content","key","count","tabs","length","tabMetaData","parent","instance","$props","state","$data","context","first","last","concat","ptm","ptmo","computed","_this2","$slots","reduce","children","forEach","nestedChild","components","AccordionPanel","AccordionHeader","AccordionContent","ChevronUpIcon","ChevronRightIcon","openBlock","createElementBlock","_ctx","cx","ptmi","$options","Fragment","renderList","i","createBlock","_component_AccordionPanel","pt","disabled","createVNode","_component_AccordionHeader","normalizeClass","withCtx","slotProps","resolveDynamicComponent","collapseicon","expandicon","headericon","isTabActive","header","toDisplayString","createCommentVNode","_component_AccordionContent","renderSlot"],"sources":["../../src/accordion/BaseAccordion.vue","../../src/accordion/Accordion.vue","../../src/accordion/Accordion.vue?vue&type=template&id=63600a5e&lang.js"],"sourcesContent":["<script>\nimport BaseComponent from '@primevue/core/basecomponent';\nimport AccordionStyle from 'primevue/accordion/style';\n\nexport default {\n    name: 'BaseAccordion',\n    extends: BaseComponent,\n    props: {\n        value: {\n            type: [String, Number, Array],\n            default: undefined\n        },\n        multiple: {\n            type: Boolean,\n            default: false\n        },\n        lazy: {\n            type: Boolean,\n            default: false\n        },\n        tabindex: {\n            type: Number,\n            default: 0\n        },\n        selectOnFocus: {\n            type: Boolean,\n            default: false\n        },\n        expandIcon: {\n            type: String,\n            default: undefined\n        },\n        collapseIcon: {\n            type: String,\n            default: undefined\n        },\n        // @deprecated since v4.\n        activeIndex: {\n            type: [Number, Array],\n            default: null\n        }\n    },\n    style: AccordionStyle,\n    provide() {\n        return {\n            $pcAccordion: this,\n            $parentInstance: this\n        };\n    }\n};\n</script>\n","<template>\n    <div :class=\"cx('root')\" v-bind=\"ptmi('root')\">\n        <template v-if=\"hasAccordionTab\">\n            <AccordionPanel v-for=\"(tab, i) of tabs\" :key=\"getKey(tab, i)\" :value=\"`${i}`\" :pt=\"{ root: getTabPT(tab, 'root', i) }\" :disabled=\"getTabProp(tab, 'disabled')\">\n                <AccordionHeader :class=\"getTabProp(tab, 'headerClass')\" :pt=\"getHeaderPT(tab, i)\">\n                    <component v-if=\"tab.children && tab.children.headericon\" :is=\"tab.children.headericon\" :isTabActive=\"isItemActive(`${i}`)\" :active=\"isItemActive(`${i}`)\" :index=\"i\"></component>\n                    <span v-if=\"tab.props && tab.props.header\" v-bind=\"getTabPT(tab, 'headertitle', i)\">{{ tab.props.header }}</span>\n                    <template #toggleicon=\"slotProps\">\n                        <component\n                            v-if=\"slotProps.active\"\n                            :is=\"$slots.collapseicon ? $slots.collapseicon : collapseIcon ? 'span' : 'ChevronDownIcon'\"\n                            :class=\"[collapseIcon, slotProps.class]\"\n                            aria-hidden=\"true\"\n                            v-bind=\"getTabPT(tab, 'headericon', i)\"\n                        />\n                        <component v-else :is=\"$slots.expandicon ? $slots.expandicon : expandIcon ? 'span' : 'ChevronUpIcon'\" :class=\"[expandIcon, slotProps.class]\" aria-hidden=\"true\" v-bind=\"getTabPT(tab, 'headericon', i)\" />\n                    </template>\n                    <component v-if=\"tab.children && tab.children.header\" :is=\"tab.children.header\"></component>\n                </AccordionHeader>\n                <AccordionContent :pt=\"getContentPT(tab, i)\">\n                    <component :is=\"tab\"></component>\n                </AccordionContent>\n            </AccordionPanel>\n        </template>\n\n        <slot v-else></slot>\n    </div>\n</template>\n\n<script>\nimport { UniqueComponentId } from '@primevue/core/utils';\nimport ChevronRightIcon from '@primevue/icons/chevronright';\nimport ChevronUpIcon from '@primevue/icons/chevronup';\nimport AccordionContent from 'primevue/accordioncontent';\nimport AccordionHeader from 'primevue/accordionheader';\nimport AccordionPanel from 'primevue/accordionpanel';\nimport { mergeProps } from 'vue';\nimport BaseAccordion from './BaseAccordion.vue';\n\nexport default {\n    name: 'Accordion',\n    extends: BaseAccordion,\n    inheritAttrs: false,\n    emits: ['update:value', 'update:activeIndex', 'tab-open', 'tab-close', 'tab-click'],\n    data() {\n        return {\n            id: this.$attrs.id,\n            d_value: this.value\n        };\n    },\n    watch: {\n        '$attrs.id': function (newValue) {\n            this.id = newValue || UniqueComponentId();\n        },\n        value(newValue) {\n            this.d_value = newValue;\n        },\n        activeIndex: {\n            immediate: true,\n            handler(newValue) {\n                if (this.hasAccordionTab) {\n                    this.d_value = this.multiple ? newValue?.map(String) : newValue?.toString();\n                }\n            }\n        }\n    },\n    mounted() {\n        this.id = this.id || UniqueComponentId();\n    },\n    methods: {\n        isItemActive(value) {\n            return this.multiple ? this.d_value?.includes(value) : this.d_value === value;\n        },\n        updateValue(newValue) {\n            const active = this.isItemActive(newValue);\n\n            if (this.multiple) {\n                if (active) {\n                    this.d_value = this.d_value.filter((v) => v !== newValue);\n                } else {\n                    if (this.d_value) this.d_value.push(newValue);\n                    else this.d_value = [newValue];\n                }\n            } else {\n                this.d_value = active ? null : newValue;\n            }\n\n            this.$emit('update:value', this.d_value);\n\n            // @deprecated since v4.\n            this.$emit('update:activeIndex', this.multiple ? this.d_value?.map(Number) : Number(this.d_value));\n            this.$emit(active ? 'tab-close' : 'tab-open', { originalEvent: undefined, index: Number(newValue) });\n        },\n        // @deprecated since v4. Use new structure instead.\n        isAccordionTab(child) {\n            return child.type.name === 'AccordionTab';\n        },\n        getTabProp(tab, name) {\n            return tab.props ? tab.props[name] : undefined;\n        },\n        getKey(tab, index) {\n            return this.getTabProp(tab, 'header') || index;\n        },\n        getHeaderPT(tab, index) {\n            return {\n                root: mergeProps({ onClick: (event) => this.onTabClick(event, index) }, this.getTabProp(tab, 'headerProps'), this.getTabPT(tab, 'header', index)),\n                toggleicon: mergeProps(this.getTabProp(tab, 'headeractionprops'), this.getTabPT(tab, 'headeraction', index))\n            };\n        },\n        getContentPT(tab, index) {\n            return {\n                root: mergeProps(this.getTabProp(tab, 'contentProps'), this.getTabPT(tab, 'toggleablecontent', index)),\n                transition: this.getTabPT(tab, 'transition', index),\n                content: this.getTabPT(tab, 'content', index)\n            };\n        },\n        getTabPT(tab, key, index) {\n            const count = this.tabs.length;\n            const tabMetaData = {\n                props: tab.props || {},\n                parent: {\n                    instance: this,\n                    props: this.$props,\n                    state: this.$data\n                },\n                context: {\n                    index,\n                    count,\n                    first: index === 0,\n                    last: index === count - 1,\n                    active: this.isItemActive(`${index}`)\n                }\n            };\n\n            return mergeProps(this.ptm(`accordiontab.${key}`, tabMetaData), this.ptmo(this.getTabProp(tab, 'pt'), key, tabMetaData));\n        },\n        onTabClick(event, index) {\n            this.$emit('tab-click', { originalEvent: event, index });\n        }\n    },\n    computed: {\n        // @deprecated since v4.\n        tabs() {\n            return this.$slots.default().reduce((tabs, child) => {\n                if (this.isAccordionTab(child)) {\n                    tabs.push(child);\n                } else if (child.children && child.children instanceof Array) {\n                    child.children.forEach((nestedChild) => {\n                        if (this.isAccordionTab(nestedChild)) {\n                            tabs.push(nestedChild);\n                        }\n                    });\n                }\n\n                return tabs;\n            }, []);\n        },\n        hasAccordionTab() {\n            return this.tabs.length;\n        }\n    },\n    components: {\n        AccordionPanel,\n        AccordionHeader,\n        AccordionContent,\n        ChevronUpIcon,\n        ChevronRightIcon\n    }\n};\n</script>\n","<template>\n    <div :class=\"cx('root')\" v-bind=\"ptmi('root')\">\n        <template v-if=\"hasAccordionTab\">\n            <AccordionPanel v-for=\"(tab, i) of tabs\" :key=\"getKey(tab, i)\" :value=\"`${i}`\" :pt=\"{ root: getTabPT(tab, 'root', i) }\" :disabled=\"getTabProp(tab, 'disabled')\">\n                <AccordionHeader :class=\"getTabProp(tab, 'headerClass')\" :pt=\"getHeaderPT(tab, i)\">\n                    <component v-if=\"tab.children && tab.children.headericon\" :is=\"tab.children.headericon\" :isTabActive=\"isItemActive(`${i}`)\" :active=\"isItemActive(`${i}`)\" :index=\"i\"></component>\n                    <span v-if=\"tab.props && tab.props.header\" v-bind=\"getTabPT(tab, 'headertitle', i)\">{{ tab.props.header }}</span>\n                    <template #toggleicon=\"slotProps\">\n                        <component\n                            v-if=\"slotProps.active\"\n                            :is=\"$slots.collapseicon ? $slots.collapseicon : collapseIcon ? 'span' : 'ChevronDownIcon'\"\n                            :class=\"[collapseIcon, slotProps.class]\"\n                            aria-hidden=\"true\"\n                            v-bind=\"getTabPT(tab, 'headericon', i)\"\n                        />\n                        <component v-else :is=\"$slots.expandicon ? $slots.expandicon : expandIcon ? 'span' : 'ChevronUpIcon'\" :class=\"[expandIcon, slotProps.class]\" aria-hidden=\"true\" v-bind=\"getTabPT(tab, 'headericon', i)\" />\n                    </template>\n                    <component v-if=\"tab.children && tab.children.header\" :is=\"tab.children.header\"></component>\n                </AccordionHeader>\n                <AccordionContent :pt=\"getContentPT(tab, i)\">\n                    <component :is=\"tab\"></component>\n                </AccordionContent>\n            </AccordionPanel>\n        </template>\n\n        <slot v-else></slot>\n    </div>\n</template>\n\n<script>\nimport { UniqueComponentId } from '@primevue/core/utils';\nimport ChevronRightIcon from '@primevue/icons/chevronright';\nimport ChevronUpIcon from '@primevue/icons/chevronup';\nimport AccordionContent from 'primevue/accordioncontent';\nimport AccordionHeader from 'primevue/accordionheader';\nimport AccordionPanel from 'primevue/accordionpanel';\nimport { mergeProps } from 'vue';\nimport BaseAccordion from './BaseAccordion.vue';\n\nexport default {\n    name: 'Accordion',\n    extends: BaseAccordion,\n    inheritAttrs: false,\n    emits: ['update:value', 'update:activeIndex', 'tab-open', 'tab-close', 'tab-click'],\n    data() {\n        return {\n            id: this.$attrs.id,\n            d_value: this.value\n        };\n    },\n    watch: {\n        '$attrs.id': function (newValue) {\n            this.id = newValue || UniqueComponentId();\n        },\n        value(newValue) {\n            this.d_value = newValue;\n        },\n        activeIndex: {\n            immediate: true,\n            handler(newValue) {\n                if (this.hasAccordionTab) {\n                    this.d_value = this.multiple ? newValue?.map(String) : newValue?.toString();\n                }\n            }\n        }\n    },\n    mounted() {\n        this.id = this.id || UniqueComponentId();\n    },\n    methods: {\n        isItemActive(value) {\n            return this.multiple ? this.d_value?.includes(value) : this.d_value === value;\n        },\n        updateValue(newValue) {\n            const active = this.isItemActive(newValue);\n\n            if (this.multiple) {\n                if (active) {\n                    this.d_value = this.d_value.filter((v) => v !== newValue);\n                } else {\n                    if (this.d_value) this.d_value.push(newValue);\n                    else this.d_value = [newValue];\n                }\n            } else {\n                this.d_value = active ? null : newValue;\n            }\n\n            this.$emit('update:value', this.d_value);\n\n            // @deprecated since v4.\n            this.$emit('update:activeIndex', this.multiple ? this.d_value?.map(Number) : Number(this.d_value));\n            this.$emit(active ? 'tab-close' : 'tab-open', { originalEvent: undefined, index: Number(newValue) });\n        },\n        // @deprecated since v4. Use new structure instead.\n        isAccordionTab(child) {\n            return child.type.name === 'AccordionTab';\n        },\n        getTabProp(tab, name) {\n            return tab.props ? tab.props[name] : undefined;\n        },\n        getKey(tab, index) {\n            return this.getTabProp(tab, 'header') || index;\n        },\n        getHeaderPT(tab, index) {\n            return {\n                root: mergeProps({ onClick: (event) => this.onTabClick(event, index) }, this.getTabProp(tab, 'headerProps'), this.getTabPT(tab, 'header', index)),\n                toggleicon: mergeProps(this.getTabProp(tab, 'headeractionprops'), this.getTabPT(tab, 'headeraction', index))\n            };\n        },\n        getContentPT(tab, index) {\n            return {\n                root: mergeProps(this.getTabProp(tab, 'contentProps'), this.getTabPT(tab, 'toggleablecontent', index)),\n                transition: this.getTabPT(tab, 'transition', index),\n                content: this.getTabPT(tab, 'content', index)\n            };\n        },\n        getTabPT(tab, key, index) {\n            const count = this.tabs.length;\n            const tabMetaData = {\n                props: tab.props || {},\n                parent: {\n                    instance: this,\n                    props: this.$props,\n                    state: this.$data\n                },\n                context: {\n                    index,\n                    count,\n                    first: index === 0,\n                    last: index === count - 1,\n                    active: this.isItemActive(`${index}`)\n                }\n            };\n\n            return mergeProps(this.ptm(`accordiontab.${key}`, tabMetaData), this.ptmo(this.getTabProp(tab, 'pt'), key, tabMetaData));\n        },\n        onTabClick(event, index) {\n            this.$emit('tab-click', { originalEvent: event, index });\n        }\n    },\n    computed: {\n        // @deprecated since v4.\n        tabs() {\n            return this.$slots.default().reduce((tabs, child) => {\n                if (this.isAccordionTab(child)) {\n                    tabs.push(child);\n                } else if (child.children && child.children instanceof Array) {\n                    child.children.forEach((nestedChild) => {\n                        if (this.isAccordionTab(nestedChild)) {\n                            tabs.push(nestedChild);\n                        }\n                    });\n                }\n\n                return tabs;\n            }, []);\n        },\n        hasAccordionTab() {\n            return this.tabs.length;\n        }\n    },\n    components: {\n        AccordionPanel,\n        AccordionHeader,\n        AccordionContent,\n        ChevronUpIcon,\n        ChevronRightIcon\n    }\n};\n</script>\n"],"mappings":";;;;;;;;;;;;;;;AAIA,IAAAA,QAAA,GAAe;EACXC,IAAI,EAAE,eAAe;EACrB,WAASC,aAAa;EACtBC,KAAK,EAAE;IACHC,KAAK,EAAE;MACHC,IAAI,EAAE,CAACC,MAAM,EAAEC,MAAM,EAAEC,KAAK,CAAC;MAC7B,SAAS,EAAAC;KACZ;IACDC,QAAQ,EAAE;MACNL,IAAI,EAAEM,OAAO;MACb,SAAS;KACZ;IACDC,IAAI,EAAE;MACFP,IAAI,EAAEM,OAAO;MACb,SAAS;KACZ;IACDE,QAAQ,EAAE;MACNR,IAAI,EAAEE,MAAM;MACZ,SAAS;KACZ;IACDO,aAAa,EAAE;MACXT,IAAI,EAAEM,OAAO;MACb,SAAS;KACZ;IACDI,UAAU,EAAE;MACRV,IAAI,EAAEC,MAAM;MACZ,SAAS,EAAAG;KACZ;IACDO,YAAY,EAAE;MACVX,IAAI,EAAEC,MAAM;MACZ,SAAS,EAAAG;KACZ;IACD;IACAQ,WAAW,EAAE;MACTZ,IAAI,EAAE,CAACE,MAAM,EAAEC,KAAK,CAAC;MACrB,SAAS;IACb;GACH;EACDU,KAAK,EAAEC,cAAc;EACrBC,OAAO,WAAPA,OAAOA,CAAA,EAAG;IACN,OAAO;MACHC,YAAY,EAAE,IAAI;MAClBC,eAAe,EAAE;KACpB;EACL;AACJ,CAAC;ACVD,IAAAC,MAAA,GAAe;EACXtB,IAAI,EAAE,WAAW;EACjB,WAASD,QAAa;EACtBwB,YAAY,EAAE,KAAK;EACnBC,KAAK,EAAE,CAAC,cAAc,EAAE,oBAAoB,EAAE,UAAU,EAAE,WAAW,EAAE,WAAW,CAAC;EACnFC,IAAI,WAAJA,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,EAAE,EAAE,IAAI,CAACC,MAAM,CAACD,EAAE;MAClBE,OAAO,EAAE,IAAI,CAACzB;KACjB;GACJ;EACD0B,KAAK,EAAE;IACH,WAAW,EAAE,SAAbC,QAAWA,CAAYC,QAAQ,EAAE;MAC7B,IAAI,CAACL,EAAG,GAAEK,QAAA,IAAYC,iBAAiB,EAAE;KAC5C;IACD7B,KAAK,EAAL,SAAAA,KAAKA,CAAC4B,QAAQ,EAAE;MACZ,IAAI,CAACH,OAAQ,GAAEG,QAAQ;KAC1B;IACDf,WAAW,EAAE;MACTiB,SAAS,EAAE,IAAI;MACfC,OAAO,EAAP,SAAAA,OAAOA,CAACH,QAAQ,EAAE;QACd,IAAI,IAAI,CAACI,eAAe,EAAE;UACtB,IAAI,CAACP,OAAQ,GAAE,IAAI,CAACnB,QAAS,GAAEsB,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEK,GAAG,CAAC/B,MAAM,CAAE,GAAE0B,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEM,QAAQ,EAAE;QAC/E;MACJ;IACJ;GACH;EACDC,OAAO,WAAPA,OAAOA,CAAA,EAAG;IACN,IAAI,CAACZ,EAAG,GAAE,IAAI,CAACA,EAAC,IAAKM,iBAAiB,EAAE;GAC3C;EACDO,OAAO,EAAE;IACLC,YAAY,EAAZ,SAAAA,YAAYA,CAACrC,KAAK,EAAE;MAAA,IAAAsC,aAAA;MAChB,OAAO,IAAI,CAAChC,QAAO,IAAAgC,aAAA,GAAI,IAAI,CAACb,OAAO,cAAAa,aAAA,uBAAZA,aAAA,CAAcC,QAAQ,CAACvC,KAAK,CAAE,GAAE,IAAI,CAACyB,OAAM,KAAMzB,KAAK;KAChF;IACDwC,WAAW,EAAX,SAAAA,WAAWA,CAACZ,QAAQ,EAAE;MAAA,IAAAa,cAAA;MAClB,IAAMC,MAAK,GAAI,IAAI,CAACL,YAAY,CAACT,QAAQ,CAAC;MAE1C,IAAI,IAAI,CAACtB,QAAQ,EAAE;QACf,IAAIoC,MAAM,EAAE;UACR,IAAI,CAACjB,OAAM,GAAI,IAAI,CAACA,OAAO,CAACkB,MAAM,CAAC,UAACC,CAAC;YAAA,OAAKA,CAAA,KAAMhB,QAAQ;WAAC;QAC7D,CAAE,MAAK;UACH,IAAI,IAAI,CAACH,OAAO,EAAE,IAAI,CAACA,OAAO,CAACoB,IAAI,CAACjB,QAAQ,CAAC,MACxC,IAAI,CAACH,OAAM,GAAI,CAACG,QAAQ,CAAC;QAClC;MACJ,CAAE,MAAK;QACH,IAAI,CAACH,OAAQ,GAAEiB,MAAO,GAAE,IAAK,GAAEd,QAAQ;MAC3C;MAEA,IAAI,CAACkB,KAAK,CAAC,cAAc,EAAE,IAAI,CAACrB,OAAO,CAAC;;MAExC;MACA,IAAI,CAACqB,KAAK,CAAC,oBAAoB,EAAE,IAAI,CAACxC,QAAS,IAAAmC,cAAA,GAAE,IAAI,CAAChB,OAAO,cAAAgB,cAAA,uBAAZA,cAAA,CAAcR,GAAG,CAAC9B,MAAM,IAAIA,MAAM,CAAC,IAAI,CAACsB,OAAO,CAAC,CAAC;MAClG,IAAI,CAACqB,KAAK,CAACJ,MAAA,GAAS,WAAY,GAAE,UAAU,EAAE;QAAEK,aAAa,EAAE1C,SAAS;QAAE2C,KAAK,EAAE7C,MAAM,CAACyB,QAAQ;MAAE,CAAC,CAAC;KACvG;IACD;IACAqB,cAAc,EAAd,SAAAA,cAAcA,CAACC,KAAK,EAAE;MAClB,OAAOA,KAAK,CAACjD,IAAI,CAACJ,IAAG,KAAM,cAAc;KAC5C;IACDsD,UAAU,WAAVA,UAAUA,CAACC,GAAG,EAAEvD,IAAI,EAAE;MAClB,OAAOuD,GAAG,CAACrD,KAAA,GAAQqD,GAAG,CAACrD,KAAK,CAACF,IAAI,IAAIQ,SAAS;KACjD;IACDgD,MAAM,WAANA,MAAMA,CAACD,GAAG,EAAEJ,KAAK,EAAE;MACf,OAAO,IAAI,CAACG,UAAU,CAACC,GAAG,EAAE,QAAQ,KAAKJ,KAAK;KACjD;IACDM,WAAW,WAAXA,WAAWA,CAACF,GAAG,EAAEJ,KAAK,EAAE;MAAA,IAAAO,KAAA;MACpB,OAAO;QACHC,IAAI,EAAEC,UAAU,CAAC;UAAEC,OAAO,EAAE,SAATA,OAAOA,CAAGC,KAAK;YAAA,OAAKJ,KAAI,CAACK,UAAU,CAACD,KAAK,EAAEX,KAAK,CAAE;UAAA;SAAC,EAAE,IAAI,CAACG,UAAU,CAACC,GAAG,EAAE,aAAa,CAAC,EAAE,IAAI,CAACS,QAAQ,CAACT,GAAG,EAAE,QAAQ,EAAEJ,KAAK,CAAC,CAAC;QACjJc,UAAU,EAAEL,UAAU,CAAC,IAAI,CAACN,UAAU,CAACC,GAAG,EAAE,mBAAmB,CAAC,EAAE,IAAI,CAACS,QAAQ,CAACT,GAAG,EAAE,cAAc,EAAEJ,KAAK,CAAC;OAC9G;KACJ;IACDe,YAAY,WAAZA,YAAYA,CAACX,GAAG,EAAEJ,KAAK,EAAE;MACrB,OAAO;QACHQ,IAAI,EAAEC,UAAU,CAAC,IAAI,CAACN,UAAU,CAACC,GAAG,EAAE,cAAc,CAAC,EAAE,IAAI,CAACS,QAAQ,CAACT,GAAG,EAAE,mBAAmB,EAAEJ,KAAK,CAAC,CAAC;QACtGgB,UAAU,EAAE,IAAI,CAACH,QAAQ,CAACT,GAAG,EAAE,YAAY,EAAEJ,KAAK,CAAC;QACnDiB,OAAO,EAAE,IAAI,CAACJ,QAAQ,CAACT,GAAG,EAAE,SAAS,EAAEJ,KAAK;OAC/C;KACJ;IACDa,QAAQ,WAARA,QAAQA,CAACT,GAAG,EAAEc,GAAG,EAAElB,KAAK,EAAE;MACtB,IAAMmB,KAAM,GAAE,IAAI,CAACC,IAAI,CAACC,MAAM;MAC9B,IAAMC,WAAA,GAAc;QAChBvE,KAAK,EAAEqD,GAAG,CAACrD,KAAA,IAAS,EAAE;QACtBwE,MAAM,EAAE;UACJC,QAAQ,EAAE,IAAI;UACdzE,KAAK,EAAE,IAAI,CAAC0E,MAAM;UAClBC,KAAK,EAAE,IAAI,CAACC;SACf;QACDC,OAAO,EAAE;UACL5B,KAAK,EAALA,KAAK;UACLmB,KAAK,EAALA,KAAK;UACLU,KAAK,EAAE7B,KAAI,KAAM,CAAC;UAClB8B,IAAI,EAAE9B,KAAI,KAAMmB,KAAI,GAAI,CAAC;UACzBzB,MAAM,EAAE,IAAI,CAACL,YAAY,IAAA0C,MAAA,CAAI/B,KAAK,CAAE;QACxC;OACH;MAED,OAAOS,UAAU,CAAC,IAAI,CAACuB,GAAG,iBAAAD,MAAA,CAAiBb,GAAG,GAAII,WAAW,CAAC,EAAE,IAAI,CAACW,IAAI,CAAC,IAAI,CAAC9B,UAAU,CAACC,GAAG,EAAE,IAAI,CAAC,EAAEc,GAAG,EAAEI,WAAW,CAAC,CAAC;KAC3H;IACDV,UAAU,WAAVA,UAAUA,CAACD,KAAK,EAAEX,KAAK,EAAE;MACrB,IAAI,CAACF,KAAK,CAAC,WAAW,EAAE;QAAEC,aAAa,EAAEY,KAAK;QAAEX,KAAM,EAANA;MAAM,CAAC,CAAC;IAC5D;GACH;EACDkC,QAAQ,EAAE;IACN;IACAd,IAAI,WAAJA,IAAIA,CAAA,EAAG;MAAA,IAAAe,MAAA;MACH,OAAO,IAAI,CAACC,MAAM,WAAQ,EAAE,CAACC,MAAM,CAAC,UAACjB,IAAI,EAAElB,KAAK,EAAK;QACjD,IAAIiC,MAAI,CAAClC,cAAc,CAACC,KAAK,CAAC,EAAE;UAC5BkB,IAAI,CAACvB,IAAI,CAACK,KAAK,CAAC;SAClB,MAAK,IAAIA,KAAK,CAACoC,QAAS,IAAGpC,KAAK,CAACoC,QAAS,YAAWlF,KAAK,EAAE;UAC1D8C,KAAK,CAACoC,QAAQ,CAACC,OAAO,CAAC,UAACC,WAAW,EAAK;YACpC,IAAIL,MAAI,CAAClC,cAAc,CAACuC,WAAW,CAAC,EAAE;cAClCpB,IAAI,CAACvB,IAAI,CAAC2C,WAAW,CAAC;YAC1B;UACJ,CAAC,CAAC;QACN;QAEA,OAAOpB,IAAI;OACd,EAAE,EAAE,CAAC;KACT;IACDpC,eAAe,WAAfA,eAAeA,CAAA,EAAG;MACd,OAAO,IAAI,CAACoC,IAAI,CAACC,MAAM;IAC3B;GACH;EACDoB,UAAU,EAAE;IACRC,cAAc,EAAdA,cAAc;IACdC,eAAe,EAAfA,eAAe;IACfC,gBAAgB,EAAhBA,gBAAgB;IAChBC,aAAa,EAAbA,aAAa;IACbC,gBAAe,EAAfA;EACJ;AACJ,CAAC;;;;;ECvKG,OAAAC,SAAA,IAAAC,kBAAA,CAyBK,OAzBLvC,UAyBK;IAzBC,SAAOwC,IAAE,CAAAC,EAAA;KAAkBD,IAAI,CAAAE,IAAA,YACjBC,QAAe,CAAApE,eAAA,IAC3B+D,SAAA,QAAAC,kBAAA,CAmBgBK,QAnBmB;IAAAnC,GAAA;GAAA,EAAAoC,UAAA,CAAAF,QAAA,CAAAhC,IAAI,EAAf,UAAAhB,GAAG,EAAEmD,CAAC;wBAA9BC,WAmBgB,CAAAC,yBAAA;MAnB0BvC,GAAG,EAAEkC,QAAA,CAAA/C,MAAM,CAACD,GAAG,EAAEmD,CAAC;MAAIvG,KAAK,KAAA+E,MAAA,CAAKwB,CAAC;MAAKG,EAAE,EAAU;QAAAlD,IAAA,EAAA4C,QAAA,CAAAvC,QAAQ,CAACT,GAAG,UAAUmD,CAAC;OAAA;MAAMI,QAAQ,EAAEP,QAAU,CAAAjD,UAAA,CAACC,GAAG;;yBAC7I;QAAA,OAciB,CAdjBwD,WAciB,CAAAC,0BAAA;UAdC,OAAK,EAAAC,cAAA,CAAEV,QAAU,CAAAjD,UAAA,CAACC,GAAG;UAAmBsD,EAAE,EAAEN,QAAA,CAAA9C,WAAW,CAACF,GAAG,EAAEmD,CAAC;;UAGjEzC,UAAU,EAAAiD,OAAA,CACjB,UAMCC,SAP2B;YAAA,QAElBA,SAAS,CAACtE,MAAM,IAAAqD,SAAA,IAD1BS,WAMC,CAAAS,uBAAA,CAJQhB,IAAM,CAAAb,MAAA,CAAC8B,YAAa,GAAEjB,IAAM,CAAAb,MAAA,CAAC8B,YAAA,GAAejB,IAAA,CAAArF,YAAA,gCAFrD6C,UAMC;;cAHI,SAAQ,CAAAwC,IAAA,CAAArF,YAAY,EAAEoG,SAAS,SAAM;cACtC,aAAW,EAAC,MAAK;;eACTZ,QAAQ,CAAAvC,QAAA,CAACT,GAAG,gBAAgBmD,CAAC,6BAAAR,SAAA,IAEzCS,WAAyM,CAAAS,uBAAA,CAAlLhB,IAAM,CAAAb,MAAA,CAAC+B,UAAW,GAAElB,IAAM,CAAAb,MAAA,CAAC+B,UAAS,GAAIlB,IAAW,CAAAtF,UAAA,8BAA1E8C,UAAyM;;cAAlG,SAAQ,CAAAwC,IAAA,CAAAtF,UAAU,EAAEqG,SAAS,SAAM;cAAG,aAAW,EAAC,MAAK;;eAAUZ,QAAQ,CAAAvC,QAAA,CAACT,GAAG,gBAAgBmD,CAAC;;6BAVzM;YAAA,OAAiL,CAAhKnD,GAAG,CAACkC,QAAO,IAAKlC,GAAG,CAACkC,QAAQ,CAAC8B,UAAU,IAAxDrB,SAAA,IAAAS,WAAA,CAAiLS,uBAAlH,CAAA7D,GAAG,CAACkC,QAAQ,CAAC8B,UAAU;;cAAGC,WAAW,EAAEjB,QAAY,CAAA/D,YAAA,IAAA0C,MAAA,CAAIwB,CAAC;cAAM7D,MAAM,EAAE0D,QAAY,CAAA/D,YAAA,IAAA0C,MAAA,CAAIwB,CAAC;cAAMvD,KAAK,EAAEuD;6FACvJnD,GAAG,CAACrD,KAAM,IAAGqD,GAAG,CAACrD,KAAK,CAACuH,MAAM,IAAzCvB,SAAA,IAAAC,kBAAA,CAAgH,QAAhHvC,UAAgH;;;eAA7D2C,QAAQ,CAAAvC,QAAA,CAACT,GAAG,EAAiB,eAAAmD,CAAC,IAAAgB,eAAA,CAAMnE,GAAG,CAACrD,KAAK,CAACuH,MAAK,UAAAE,kBAAA,YAWrFpE,GAAG,CAACkC,QAAS,IAAGlC,GAAG,CAACkC,QAAQ,CAACgC,MAAM,IAApDvB,SAAA,IAAAS,WAAA,CAA2FS,uBAAhC,CAAA7D,GAAG,CAACkC,QAAQ,CAACgC,MAAM;cAAApD,GAAA;aAAA,KAAAsD,kBAAA;;;mCAElFZ,WAEkB,CAAAa,2BAAA;UAFCf,EAAE,EAAEN,QAAA,CAAArC,YAAY,CAACX,GAAG,EAAEmD,CAAC;;6BACtC;YAAA,OAAgC,EAAhCR,SAAA,IAAAS,WAAA,CAAgCS,uBAAA,CAAhB7D,GAAG;;;;;;;cAK/BsE,UAAmB,CAAAzB,IAAA,CAAAb,MAAA;IAAAlB,GAAA;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}